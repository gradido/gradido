<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gradido/GradidoTransaction.proto

namespace Proto\Gradido;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>proto.gradido.GradidoTransaction</code>
 */
class GradidoTransaction extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.proto.gradido.SignatureMap sig_map = 1;</code>
     */
    private $sig_map = null;
    /**
     * TODO: consider if having concrete type wouldn't be better; 
     * having bytes would better show what is signed, still for 
     * blockchain it doesn't matter, as it has to be serialized again
     * when validating
     * UNICORN ANSWER:
     * Maybe but hedera has at first concrete type and has depracted that now, so is must 
     * be reason for that
     *
     * Generated from protobuf field <code>bytes body_bytes = 2;</code>
     */
    private $body_bytes = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Proto\Gradido\SignatureMap $sig_map
     *     @type string $body_bytes
     *           TODO: consider if having concrete type wouldn't be better; 
     *           having bytes would better show what is signed, still for 
     *           blockchain it doesn't matter, as it has to be serialized again
     *           when validating
     *           UNICORN ANSWER:
     *           Maybe but hedera has at first concrete type and has depracted that now, so is must 
     *           be reason for that
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gradido\GradidoTransaction::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.proto.gradido.SignatureMap sig_map = 1;</code>
     * @return \Proto\Gradido\SignatureMap
     */
    public function getSigMap()
    {
        return $this->sig_map;
    }

    /**
     * Generated from protobuf field <code>.proto.gradido.SignatureMap sig_map = 1;</code>
     * @param \Proto\Gradido\SignatureMap $var
     * @return $this
     */
    public function setSigMap($var)
    {
        GPBUtil::checkMessage($var, \Proto\Gradido\SignatureMap::class);
        $this->sig_map = $var;

        return $this;
    }

    /**
     * TODO: consider if having concrete type wouldn't be better; 
     * having bytes would better show what is signed, still for 
     * blockchain it doesn't matter, as it has to be serialized again
     * when validating
     * UNICORN ANSWER:
     * Maybe but hedera has at first concrete type and has depracted that now, so is must 
     * be reason for that
     *
     * Generated from protobuf field <code>bytes body_bytes = 2;</code>
     * @return string
     */
    public function getBodyBytes()
    {
        return $this->body_bytes;
    }

    /**
     * TODO: consider if having concrete type wouldn't be better; 
     * having bytes would better show what is signed, still for 
     * blockchain it doesn't matter, as it has to be serialized again
     * when validating
     * UNICORN ANSWER:
     * Maybe but hedera has at first concrete type and has depracted that now, so is must 
     * be reason for that
     *
     * Generated from protobuf field <code>bytes body_bytes = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setBodyBytes($var)
    {
        GPBUtil::checkString($var, False);
        $this->body_bytes = $var;

        return $this;
    }

}

