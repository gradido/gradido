<%@ page class="RegisterDirectPage" %>
<%@ page form="true" %>
<%@ page baseClass="PageRequestMessagedHandler" %>
<%@ header include="HTTPInterface/PageRequestMessagedHandler.h" %>
<%!
#include "SingletonManager/SessionManager.h"
#include "controller/Group.h"
#include "lib/DataTypeConverter.h"
#include "Poco/Net/HTTPCookie.h"

%>
<%%
	const char* pageName = "Registrieren";
	auto sm = SessionManager::getInstance();

	bool userReturned = false;
	std::string caller_uri;

	if(!form.empty()) {
	
		caller_uri = form.get("caller_uri", "");
		
		if(form.get("register-password2", "") != form.get("register-password", "")) {
			addError(new Error("Passwort", "Passw&ouml;rter sind nicht identisch."), false);
		} else {
			auto session = sm->getSession(request);
			if(!session) {
				session = sm->getNewSession();
				auto user_host = request.clientAddress().host();
				session->setClientIp(user_host);
				session->setCallerUri(caller_uri);
				response.addCookie(session->getLoginCookie());
			}
			printf("caller uri after session: %s\n", caller_uri.data());
			auto email = form.get("register-email", "");
			auto password = form.get("register-password", "");
			if(email != "" && password != "") {
			
				userReturned = session->createUserDirect(
					form.get("register-first-name", ""),
					form.get("register-last-name", ""),
					email,
					password,
					getBaseUrl()
				);
			}

			getErrors(session);

			if(!errorCount() && userReturned) {
				auto user_host = request.clientAddress().host();
				session->setClientIp(user_host);
				response.addCookie(session->getLoginCookie());
				if(caller_uri == "") {
					caller_uri = session->getCallerUri();
				}
				if(caller_uri != "") {
					std::string redirect_url = caller_uri;
					redirect_url += "?session_id=" + std::to_string(session->getHandle());
					response.redirect(redirect_url);
					return;
				}
				auto user = session->getNewUser();
				if(user->getModel()->getGroupId() == 0) {
					response.redirect(getBaseUrl() + "/userUpdateGroup");
				} else {
					response.redirect(user->getGroupBaseUrl());
				}
				return;
			}
		}

	} else {
		// on enter login page with empty form
		// remove old cookies if exist
		sm->deleteLoginCookies(request, response);
	}
	
	
%><%@ include file="include/header.cpsp" %>
<%= getErrorsHtml() %>
<div class="center-form-container">
	<div class="center-form-title">
	    <h1>Einen neuen Account anlegen</h1>
	</div>
	<div class="center-form-form">
		<form method="POST">
			<p>Bitte gib deine Daten um einen Account anzulegen:</p>
			<label class="form-label" for="register-first-name">Vorname</label>
			<input class="form-control" id="register-first-name" type="text" name="register-first-name" value="<%= !form.empty() ? form.get("register-first-name", "") : "" %>"/>
			<label class="form-label" for="register-last-name">Nachname</label>
			<input class="form-control" id="register-last-name" type="text" name="register-last-name" value="<%= !form.empty() ? form.get("register-last-name", "") : "" %>"/>
			<label class="form-label" for="register-email">E-Mail</label>
			<input class="form-control" id="register-email" type="email" name="register-email" value="<%= !form.empty() ? form.get("register-email", "") : "" %>"/>
			<label class="form-label" for="register-password">Passwort</label>
			<input class="form-control" id="register-password" type="password" name="register-password"/>
			<label class="form-label" for="register-password">Passwort Best&auml;tigung</label>
			<input class="form-control" id="register-password2" type="password" name="register-password2"/>
			<input class="center-form-submit form-button" type="submit" name="submit" value="Anmelden">
	</form>
</div>
<%@ include file="include/footer.cpsp" %>
