import At from"quick-lru";function Lt(){return typeof self<"u"?fetch.bind(self):typeof global<"u"&&global.fetch?global.fetch:null}class q{constructor(){this._apiKey="",this._fetch=Lt(),this.tileCacheSize=200}set apiKey(e){this._apiKey=e}get apiKey(){return this._apiKey}set fetch(e){this._fetch=e}get fetch(){return this._fetch}}const m=new q,k={AUTO:"auto",ALBANIAN:"sq",ARABIC:"ar",ARMENIAN:"hy",AZERBAIJANI:"az",BELORUSSIAN:"be",BOSNIAN:"bs",BRETON:"br",BULGARIAN:"bg",CATALAN:"ca",CHINESE:"zh",CROATIAN:"hr",CZECH:"cs",DANISH:"da",DUTCH:"nl",ENGLISH:"en",ESPERANTO:"eo",ESTONIAN:"et",FINNISH:"fi",FRENCH:"fr",FRISIAN:"fy",GEORGIAN:"ka",GERMAN:"de",GREEK:"el",HEBREW:"he",HUNGARIAN:"hu",ICELANDIC:"is",IRISH:"ga",ITALIAN:"it",JAPANESE:"ja",KANNADA:"kn",KAZAKH:"kk",KOREAN:"ko",ROMAN_LATIN:"la",LATVIAN:"lv",LITHUANIAN:"lt",LUXEMBOURGISH:"lb",MACEDONIAN:"mk",MALTESE:"mt",NORWEGIAN:"no",POLISH:"pl",PORTUGUESE:"pt",ROMANIAN:"ro",ROMANSH:"rm",RUSSIAN:"ru",SCOTTISH_GAELIC:"gd",SERBIAN_CYRILLIC:"sr",SLOVAK:"sk",SLOVENE:"sl",SPANISH:"es",SWEDISH:"sv",THAI:"th",TURKISH:"tr",UKRAINIAN:"uk",WELSH:"cy"},Tt=new Set(Object.values(k));function Y(){if(typeof navigator>"u")return Intl.DateTimeFormat().resolvedOptions().locale.split("-")[0];const t=Array.from(new Set(navigator.languages.map(e=>e.split("-")[0]))).filter(e=>Tt.has(e));return t.length?t[0]:k.ENGLISH}async function L(t,e={}){if(m.fetch===null)throw new Error("The fetch function was not found. If on NodeJS < 18 please specify the fetch function with config.fetch");if(new URL(t).searchParams.get("key").trim()==="")throw new Error("The MapTiler Cloud API key is missing. Set it in `config.apiKey` or get one for free at https://maptiler.com");return m.fetch(t,e)}const y={maptilerApiURL:"https://api.maptiler.com/",mapStyle:"streets-v2"};Object.freeze(y);class A extends Error{constructor(e,n=""){super(`Call to enpoint ${e.url} failed with the status code ${e.status}. ${n}`),this.res=e}}const E={400:"Query too long / Invalid parameters",403:"Key is missing, invalid or restricted"};function J(t,e){const{language:n}=e;if(n==null)return;const i=Array.from(new Set((Array.isArray(n)?n:[n]).map(a=>a===k.AUTO?Y():a))).join(",");t.set("language",i)}function Z(t,e){const{apiKey:n,limit:i,types:a,excludeTypes:r}=e;t.set("key",n??m.apiKey),i!=null&&t.set("limit",String(i)),a!=null&&t.set("types",a.join(",")),r!=null&&t.set("excludeTypes",String(r)),J(t,e)}function X(t,e){Z(t,e);const{bbox:n,proximity:i,country:a,fuzzyMatch:r,autocomplete:o}=e;n!=null&&t.set("bbox",n.join(",")),i!=null&&t.set("proximity",i==="ip"?i:i.join(",")),a!=null&&t.set("country",a.join(",")),r!=null&&t.set("fuzzyMatch",r?"true":"false"),o!=null&&t.set("autocomplete",o?"true":"false")}async function It(t,e={}){if(typeof t!="string"||t.trim().length===0)throw new Error("The query must be a non-empty string");const n=new URL(`geocoding/${encodeURIComponent(t)}.json`,y.maptilerApiURL),{searchParams:i}=n;X(i,e);const a=n.toString(),r=await L(a);if(!r.ok)throw new A(r,E[r.status]??"");return await r.json()}async function wt(t,e={}){if(!Array.isArray(t)||t.length<2)throw new Error("The position must be an array of form [lng, lat].");const n=new URL(`geocoding/${t[0]},${t[1]}.json`,y.maptilerApiURL);Z(n.searchParams,e);const i=n.toString(),a=await L(i);if(!a.ok)throw new A(a,E[a.status]??"");return await a.json()}async function Rt(t,e={}){const n=new URL(`geocoding/${t}.json`,y.maptilerApiURL);n.searchParams.set("key",e.apiKey??m.apiKey),J(n.searchParams,e);const i=n.toString(),a=await L(i);if(!a.ok)throw new A(a,E[a.status]??"");return await a.json()}async function vt(t,e={}){if(!t.length)return[];const n=t.map(c=>encodeURIComponent(c)).join(";"),i=new URL(`geocoding/${n}.json`,y.maptilerApiURL),{searchParams:a}=i;X(a,e);const r=i.toString(),o=await L(r);if(!o.ok)throw new A(o,E[o.status]??"");const s=await o.json();return t.length===1?[s]:s}const Ut={forward:It,reverse:wt,byId:Rt,batch:vt,language:k},Q={403:"Key is missing, invalid or restricted"};async function Dt(t={}){const e=new URL("geolocation/ip.json",y.maptilerApiURL);e.searchParams.set("key",t.apiKey??m.apiKey);const n=e.toString(),i=await L(n);if(!i.ok)throw new A(i,i.status in Q?Q[i.status]:"");return await i.json()}const kt={info:Dt},P={403:"Key is missing, invalid or restricted"};async function $t(t,e={}){if(typeof t!="string"||t.trim().length===0)throw new Error("The query must be a non-empty string");const n=new URL(`coordinates/search/${t}.json`,y.maptilerApiURL);n.searchParams.set("key",e.apiKey??m.apiKey),"limit"in e&&n.searchParams.set("limit",e.limit.toString()),"transformations"in e&&n.searchParams.set("transformations",e.transformations.toString()),"exports"in e&&n.searchParams.set("exports",e.exports.toString());const i=n.toString(),a=await L(i);if(!a.ok)throw new A(a,a.status in P?P[a.status]:"");return await a.json()}async function Et(t,e={}){const n=(Array.isArray(t[0])?t:[t]).map(o=>`${o[0]},${o[1]}`).join(";"),i=new URL(`coordinates/transform/${n}.json`,y.maptilerApiURL);i.searchParams.set("key",e.apiKey??m.apiKey),"sourceCrs"in e&&i.searchParams.set("s_srs",e.sourceCrs.toString()),"targetCrs"in e&&i.searchParams.set("t_srs",e.targetCrs.toString()),"operations"in e&&i.searchParams.set("ops",(Array.isArray(e.operations)?e.operations:[e.operations]).join("|"));const a=i.toString(),r=await L(a);if(!r.ok)throw new A(r,r.status in P?P[r.status]:"");return await r.json()}const Pt={search:$t,transform:Et},tt={403:"Key is missing, invalid or restricted"};async function Nt(t,e={}){if(typeof t!="string"||t.trim().length===0)throw new Error("The data ID must be a non-empty string");const n=new URL(`data/${encodeURIComponent(t)}/features.json`,y.maptilerApiURL);n.searchParams.set("key",e.apiKey??m.apiKey);const i=n.toString(),a=await L(i);if(!a.ok)throw new A(a,a.status in tt?tt[a.status]:"");return await a.json()}const Mt={get:Nt};function et(t){const e=/^maptiler:\/\/(.*)/;let n;const i=t.trim();let a;return i.startsWith("http://")||i.startsWith("https://")?a=i:(n=e.exec(i))!==null?a=`https://api.maptiler.com/maps/${n[1]}/style.json`:a=`https://api.maptiler.com/maps/${i}/style.json`,a}class C{constructor(e,n,i,a,r,o){this.name=e,this.variantType=n,this.id=i,this.referenceStyle=a,this.description=r,this.imageURL=o}getName(){return this.name}getFullName(){return`${this.referenceStyle.getName()} ${this.name}`}getType(){return this.variantType}getId(){return this.id}getDescription(){return this.description}getReferenceStyle(){return this.referenceStyle}hasVariant(e){return this.referenceStyle.hasVariant(e)}getVariant(e){return this.referenceStyle.getVariant(e)}getVariants(){return this.referenceStyle.getVariants().filter(e=>e!==this)}getImageURL(){return this.imageURL}getExpandedStyleURL(){return et(this.getId())}}class K{constructor(e,n){this.name=e,this.id=n,this.variants={},this.orderedVariants=[]}getName(){return this.name}getId(){return this.id}addVariant(e){this.variants[e.getType()]=e,this.orderedVariants.push(e)}hasVariant(e){return e in this.variants}getVariant(e){return e in this.variants?this.variants[e]:this.orderedVariants[0]}getVariants(){return Object.values(this.variants)}getDefaultVariant(){return this.orderedVariants[0]}}const N=[{referenceStyleID:"STREETS",name:"Streets",description:"",variants:[{id:"streets-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"streets-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"streets-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""},{id:"streets-v2-night",name:"Night",variantType:"NIGHT",description:"",imageURL:""},{id:"streets-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""}]},{referenceStyleID:"OUTDOOR",name:"Outdoor",description:"",variants:[{id:"outdoor-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"outdoor-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""}]},{referenceStyleID:"WINTER",name:"Winter",description:"",variants:[{id:"winter-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"winter-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""}]},{referenceStyleID:"SATELLITE",name:"Satellite",description:"",variants:[{id:"satellite",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"HYBRID",name:"Hybrid",description:"",variants:[{id:"hybrid",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"BASIC",name:"Basic",description:"",variants:[{id:"basic-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"basic-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"basic-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"BRIGHT",name:"Bright",description:"",variants:[{id:"bright-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"bright-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"bright-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""},{id:"bright-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""}]},{referenceStyleID:"OPENSTREETMAP",name:"OpenStreetMap",description:"",variants:[{id:"openstreetmap",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"TOPO",name:"Topo",description:"",variants:[{id:"topo-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"topo-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"topo-v2-shiny",name:"Shiny",variantType:"SHINY",description:"",imageURL:""},{id:"topo-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""},{id:"topo-v2-topographique",name:"Topographique",variantType:"TOPOGRAPHIQUE",description:"",imageURL:""}]},{referenceStyleID:"VOYAGER",name:"Voyager",description:"",variants:[{id:"voyager-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"voyager-v2-darkmatter",name:"Darkmatter",variantType:"DARK",description:"",imageURL:""},{id:"voyager-v2-positron",name:"Positron",variantType:"LIGHT",description:"",imageURL:""},{id:"voyager-v2-vintage",name:"Vintage",variantType:"VINTAGE",description:"",imageURL:""}]},{referenceStyleID:"TONER",name:"Toner",description:"",variants:[{id:"toner-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"toner-v2-background",name:"Background",variantType:"BACKGROUND",description:"",imageURL:""},{id:"toner-v2-lite",name:"Lite",variantType:"LITE",description:"",imageURL:""},{id:"toner-v2-lines",name:"Lines",variantType:"LINES",description:"",imageURL:""}]},{referenceStyleID:"DATAVIZ",name:"Dataviz",description:"",variants:[{id:"dataviz",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"dataviz-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"dataviz-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"BACKDROP",name:"Backdrop",description:"",variants:[{id:"backdrop",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"backdrop-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"backdrop-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"OCEAN",name:"Ocean",description:"",variants:[{id:"ocean",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]}];function bt(t){return new Proxy(t,{get(e,n,i){return e.hasVariant(n)?e.getVariant(n):n.toString().toUpperCase()===n?t.getDefaultVariant():Reflect.get(e,n,i)}})}function Ct(){const t={};for(let e=0;e<N.length;e+=1){const n=N[e],i=bt(new K(n.name,n.referenceStyleID));for(let a=0;a<n.variants.length;a+=1){const r=n.variants[a],o=new C(r.name,r.variantType,r.id,i,r.description,r.imageURL);i.addVariant(o)}t[n.referenceStyleID]=i}return t}function M(t){if(!t)return nt[N[0].referenceStyleID].getDefaultVariant().getId();if(typeof t=="string"||t instanceof String)return t.trim().toLowerCase();if(t instanceof C)return t.getId();if(t instanceof K)return t.getDefaultVariant().getId()}const nt=Ct();function Kt(t){const e=[];function n(r){(r.type==="LineString"||r.type==="MultiLineString")&&e.push(r)}function i(r){r.geometry&&n(r.geometry)}function a(r){for(const o of r.features)o.type==="Feature"?i(o):o.type==="FeatureCollection"&&a(o)}return t.type==="Feature"?i(t):t.type==="FeatureCollection"?a(t):n(t),e}function xt(t,e,n){let i=e[0],a=e[1],r=n[0]-i,o=n[1]-a;if(r!==0||o!==0){const s=((t[0]-i)*r+(t[1]-a)*o)/(r*r+o*o);s>1?(i=n[0],a=n[1]):s>0&&(i+=r*s,a+=o*s)}return r=t[0]-i,o=t[1]-a,r*r+o*o}function x(t,e,n,i,a){let r=i,o;for(let s=e+1;s<n;s++){const c=xt(t[s],t[e],t[n]);c>r&&(o=s,r=c)}r>i&&(o-e>1&&x(t,e,o,i,a),a.push(t[o]),n-o>1&&x(t,o,n,i,a))}function Ot(t,e){const n=t.length-1,i=[t[0]];return x(t,0,n,e,i),i.push(t[n]),i}function jt(t,e){if(t.length<=2)return t;const n=e!==void 0?e*e:1;return Ot(t,n)}const it={extractLineStrings:Kt,simplify:jt};function O(t,e=!0){let n=`${t[0]},${t[1]}`;return t.length===3&&e&&(n+=`,${t[2]}`),n}function j(t,e=3e3){let n=t.map(r=>r.join(",")).join("|"),i=5e-6;const a=1e-5;for(;n.length>e;)n=it.simplify(t,i).map(r=>`${r[0]},${r[1]}`).join("|"),i+=a;return n}function Ht(t,e,n={}){const i=M(n.style),a=n.hiDPI?"@2x":"",r=n.format??"png";let o=~~(n.width??1024),s=~~(n.height??1024);n.hiDPI&&(o=~~(o/2),s=~~(s/2));const c=new URL(`maps/${encodeURIComponent(i)}/static/${t[0]},${t[1]},${e}/${o}x${s}${a}.${r}`,y.maptilerApiURL);if("attribution"in n&&c.searchParams.set("attribution",n.attribution.toString()),"markers"in n){let h="";const l="markerIcon"in n;l&&(h+=`icon:${n.markerIcon}|`),l&&"markerAnchor"in n&&(h+=`anchor:${n.markerAnchor}|`),l&&n.hiDPI&&(h+="scale:2|");const S=Array.isArray(n.markers[0])?n.markers:[n.markers];h+=S.map(g=>O(g,!l)).join("|"),c.searchParams.set("markers",h)}if("path"in n){let h="";if(h+=`fill:${n.pathFillColor??"none"}|`,"pathStrokeColor"in n&&(h+=`stroke:${n.pathStrokeColor}|`),"pathWidth"in n){const l=n.pathWidth/(n.hiDPI?2:1);h+=`width:${l.toString()}|`}h+=j(n.path),c.searchParams.set("path",h)}return c.searchParams.set("key",n.apiKey??m.apiKey),c.toString()}function Vt(t,e={}){const n=M(e.style),i=e.hiDPI?"@2x":"",a=e.format??"png";let r=~~(e.width??1024),o=~~(e.height??1024);e.hiDPI&&(r=~~(r/2),o=~~(o/2));const s=new URL(`maps/${encodeURIComponent(n)}/static/${t[0]},${t[1]},${t[2]},${t[3]}/${r}x${o}${i}.${a}`,y.maptilerApiURL);if("attribution"in e&&s.searchParams.set("attribution",e.attribution.toString()),"padding"in e&&s.searchParams.set("padding",e.padding.toString()),"markers"in e){let c="";const h="markerIcon"in e;h&&(c+=`icon:${e.markerIcon}|`),h&&"markerAnchor"in e&&(c+=`anchor:${e.markerAnchor}|`),h&&e.hiDPI&&(c+="scale:2|");const l=Array.isArray(e.markers[0])?e.markers:[e.markers];c+=l.map(S=>O(S,!h)).join("|"),s.searchParams.set("markers",c)}if("path"in e){let c="";if(c+=`fill:${e.pathFillColor??"none"}|`,"pathStrokeColor"in e&&(c+=`stroke:${e.pathStrokeColor}|`),"pathWidth"in e){const h=e.pathWidth/(e.hiDPI?2:1);c+=`width:${h.toString()}|`}c+=j(e.path),s.searchParams.set("path",c)}return s.searchParams.set("key",e.apiKey??m.apiKey),s.toString()}function Ft(t={}){if(!("markers"in t)&&!("path"in t))throw new Error("Automatic static maps require markers and/or path to be created.");const e=M(t.style),n=t.hiDPI?"@2x":"",i=t.format??"png";let a=~~(t.width??1024),r=~~(t.height??1024);t.hiDPI&&(a=~~(a/2),r=~~(r/2));const o=new URL(`maps/${encodeURIComponent(e)}/static/auto/${a}x${r}${n}.${i}`,y.maptilerApiURL);if("attribution"in t&&o.searchParams.set("attribution",t.attribution.toString()),"padding"in t&&o.searchParams.set("padding",t.padding.toString()),"markers"in t){let s="";const c="markerIcon"in t;c&&(s+=`icon:${t.markerIcon}|`),c&&"markerAnchor"in t&&(s+=`anchor:${t.markerAnchor}|`),c&&t.hiDPI&&(s+="scale:2|");const h=Array.isArray(t.markers[0])?t.markers:[t.markers];s+=h.map(l=>O(l,!c)).join("|"),o.searchParams.set("markers",s)}if("path"in t){let s="";if(s+=`fill:${t.pathFillColor??"none"}|`,"pathStrokeColor"in t&&(s+=`stroke:${t.pathStrokeColor}|`),"pathWidth"in t){const c=t.pathWidth/(t.hiDPI?2:1);s+=`width:${c.toString()}|`}s+=j(t.path),o.searchParams.set("path",s)}return o.searchParams.set("key",t.apiKey??m.apiKey),o.toString()}const Gt={centered:Ht,bounded:Vt,automatic:Ft},b=63710088e-1,at=2*Math.PI*b;function rt(t){return(180+t)/360}function ot(t){return(180-180/Math.PI*Math.log(Math.tan(Math.PI/4+t*Math.PI/360)))/360}function st(t){const e=ht(t);return[rt(e[0]),ot(e[1])]}function ct(t){return t*360-180}function pt(t){const e=180-t*360;return 360/Math.PI*Math.atan(Math.exp(e*Math.PI/180))-90}function Bt(t){return[ct(t[0]),pt(t[1])]}function H(t,e){const n=Math.PI/180,i=t[1]*n,a=e[1]*n,r=Math.sin(i)*Math.sin(a)+Math.cos(i)*Math.cos(a)*Math.cos((e[0]-t[0])*n);return b*Math.acos(Math.min(r,1))}function _t(t){const e=Array(t.length);e[0]=0;const n=e.length;for(let i=1;i<n;i++)e[i]=H(t[i-1],t[i])+e[i-1];return e}function ht(t){const e=t[0],n=t[1],i=360,a=((e+180)%i+i)%i-180;return[a===-180?180:a,n]}function lt(t){return at*Math.cos(t*Math.PI/180)}function mt(t,e,n=!0){const i=2**e,a=[t[0]*i,t[1]*i];return n?[~~a[0],~~a[1]]:a}function zt(t,e,n=!0){const i=st(t);return mt(i,e,n)}function $(t){return t*Math.PI/180}function V(t){return t*180/Math.PI}function Wt(t,e,n){const i=H(t,e),a=$(t[0]),r=$(t[1]),o=$(e[0]),s=$(e[1]),c=i/b,h=Math.sin((1-n)*c)/Math.sin(c),l=Math.sin(n*c)/Math.sin(c),S=h*Math.cos(r)*Math.cos(a)+l*Math.cos(s)*Math.cos(o),g=h*Math.cos(r)*Math.sin(a)+l*Math.cos(s)*Math.sin(o),w=h*Math.sin(r)+l*Math.sin(s),v=Math.atan2(w,Math.sqrt(S*S+g*g)),R=Math.atan2(g,S);return[V(R),V(v)]}const F={EARTH_RADIUS:b,EARTH_CIRCUMFERENCE:at,longitudeToMercatorX:rt,latitudeToMercatorY:ot,wgs84ToMercator:st,mercatorXToLongitude:ct,mercatorYToLatitude:pt,mercatorToWgs84:Bt,haversineDistanceWgs84:H,wrapWgs84:ht,circumferenceAtLatitude:lt,mercatorToTileIndex:mt,wgs84ToTileIndex:zt,toRadians:$,toDegrees:V,haversineIntermediateWgs84:Wt,haversineCumulatedDistanceWgs84:_t};let G=null;function B(){return G||(G=new At({maxSize:m.tileCacheSize})),G}async function ut(t){const e=new Blob([t]),n=await createImageBitmap(e),i=document.createElement("canvas"),a=i.getContext("2d");i.width=n.width,i.height=n.height,a.drawImage(n,0,0);const r=a.getImageData(0,0,i.width,i.height);return{pixels:r.data,width:i.width,height:i.height,components:r.data.length/(i.width*i.height)}}function _(){if(m.bufferToPixelData)return m.bufferToPixelData;if(typeof window<"u")return ut;throw new Error("An image file buffer to pixel data parser is necessary. Specify it in `config.bufferToPixelData`")}const qt="tiles/terrain-rgb-v2/tiles.json";let I=null;const z={403:"Key is missing, invalid or restricted"};async function gt(t){const e=new URL(qt,y.maptilerApiURL);e.searchParams.set("key",t);const n=e.toString(),i=await L(n);if(i.ok)return I=await i.json(),I;if(!i.ok)throw new A(i,z[i.status]??"")}async function Yt(t,e={}){const n=e.apiKey??m.apiKey;I||await gt(n);const i=I.maxzoom;let a=~~(e.zoom??i);(a>i||a<0)&&(a=i);const r=F.wgs84ToTileIndex(t,a,!1),o=~~r[0],s=~~r[1];if(!I.tiles.length)throw new Error("Terrain tileJSON tile list is empty.");const c=`terrain_${a.toString()}_${o.toString()}_${s.toString()}`;let h;const l=B();if(l.has(c))h=l.get(c);else{const T=I.tiles[0].replace("{x}",o.toString()).replace("{y}",s.toString()).replace("{z}",a.toString()),u=await L(T);if(!u.ok)throw new A(u,z[u.status]??"");const d=await u.arrayBuffer();h=await _()(d),l.set(c,h)}const S=~~(h.width*(r[0]%1)),g=(~~(h.height*(r[1]%1))*h.width+S)*h.components,w=h.pixels[g],v=h.pixels[g+1],R=h.pixels[g+2],p=-1e4+(w*256*256+v*256+R)*.1;return[t[0],t[1],p]}async function W(t,e={}){const n=e.apiKey??m.apiKey;I||await gt(n);const i=_(),a=I.tiles[0],r=B(),o=I.maxzoom;let s=~~(e.zoom??o);(s>o||s<0)&&(s=o);const c=t.map(p=>F.wgs84ToTileIndex(p,s,!1)),h=c.map(p=>[~~p[0],~~p[1]]).map(p=>`terrain_${s.toString()}_${p[0].toString()}_${p[1].toString()}`),l=Array.from(new Set(h.filter(p=>!r.has(p)))).map(p=>p.split("_").slice(1)),S=l.map(p=>a.replace("{x}",p[1].toString()).replace("{y}",p[2].toString()).replace("{z}",p[0].toString())).map(p=>L(p)),g=(await Promise.allSettled(S)).map(p=>p.status==="fulfilled"?p.value:null).filter(p=>p),w=g.filter(p=>!p.ok);if(g.length!==S.length)throw new Error("Some tiles could not be fetched.");if(w.length)throw new A(w[0],z[w[0].status]??"");const v=await Promise.all(g.map(p=>p.arrayBuffer()));if(!v.every(p=>p.byteLength>0))throw new Error("Some tiles are not available.");(await Promise.all(v.map(p=>i(p)))).forEach((p,T)=>{const u=l[T],d=`terrain_${u[0].toString()}_${u[1].toString()}_${u[2].toString()}`;r.set(d,p)});const R=t.map((p,T)=>{const u=h[T],d=c[T],f=r.get(u),U=Math.min(Math.round(f.width*(d[0]%1)),f.width-1),D=(Math.min(Math.round(f.height*(d[1]%1)),f.height-1)*f.width+U)*f.components,dt=f.pixels[D],ft=f.pixels[D+1],yt=f.pixels[D+2],St=-1e4+(dt*256*256+ft*256+yt)*.1;return[p[0],p[1],~~(St*1e3)/1e3]});if(e.smoothingKernelSize){const p=~~(e.smoothingKernelSize/2)*2+1,T=R.map(d=>d[2]),u=~~(p/2);for(let d=u;d<T.length-u-1;d+=1){let f=0;for(let U=0;U<p;U+=1){const D=T[d-u+U];f+=D}f/=p,R[d][2]=f}}return R}async function Jt(t,e={}){if(t.type!=="LineString")throw new Error("The provided object is not a GeoJSON LineString");const n=structuredClone(t),i=await W(n.coordinates,e);return n.coordinates=i,n}async function Zt(t,e={}){if(t.type!=="MultiLineString")throw new Error("The provided object is not a GeoJSON MultiLineString");const n=structuredClone(t),i=n.coordinates.map(c=>c.length),a=n.coordinates.flat(),r=await W(a,e),o=[];let s=0;for(const c of i)o.push(r.slice(s,s+c)),s+=c;return n.coordinates=o,n}const Xt={at:Yt,batch:W,fromLineString:Jt,fromMultiLineString:Zt};export{q as ClientConfig,k as LanguageGeocoding,nt as MapStyle,C as MapStyleVariant,K as ReferenceMapStyle,A as ServiceError,ut as bufferToPixelDataBrowser,lt as circumferenceAtLatitude,m as config,Pt as coordinates,Mt as data,Xt as elevation,et as expandMapStyle,Ut as geocoding,kt as geolocation,Y as getAutoLanguageGeocoding,_ as getBufferToPixelDataParser,B as getTileCache,N as mapStylePresetList,F as math,it as misc,Gt as staticMaps,M as styleToStyle};
