/*! qrcanvas-vue v2.1.1 | ISC License */
this.qrcanvas=this.qrcanvas||{},function(t,n,e){"use strict";function a(t){return t&&"object"==typeof t&&"default"in t?t.default:t}function i(){return i=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a])}return t},i.apply(this,arguments)}var s=["options"],r=a(n).extend({props:{options:Object},render:function(t){var n=this.$props;return n.options,t("canvas",function(t,n){if(null==t)return{};var e,a,i={},s=Object.keys(t);for(a=0;a<s.length;a++)e=s[a],n.indexOf(e)>=0||(i[e]=t[e]);return i}(n,s))},methods:{update:function(t){this.mounted&&(this.$emit("beforeUpdate",this.$el),e.qrcanvas(i({},t,{canvas:this.$el})),this.$emit("updated",this.$el))}},watch:{options:"update",width:"update",height:"update"},mounted:function(){this.mounted=!0,this.update(this.options)}});t.QRCanvas=r}(this.qrcanvas.vue=this.qrcanvas.vue||{},Vue,qrcanvas);
