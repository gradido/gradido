{"version":3,"file":"index.cjs","sources":["../../src/util/ref_properties.ts","../../src/deref.ts","../../src/util/deep_equal.ts","../../src/diff.ts","../../src/error/validation_error.ts","../../src/error/parsing_error.ts","../../src/util/extend.ts","../../src/expression/parsing_error.ts","../../src/expression/scope.ts","../../src/expression/types.ts","../../src/util/color_spaces.ts","../../src/util/parse_css_color.ts","../../src/util/color.ts","../../src/expression/types/collator.ts","../../src/expression/types/formatted.ts","../../src/util/padding.ts","../../src/util/variable_anchor_offset_collection.ts","../../src/expression/types/resolved_image.ts","../../src/expression/values.ts","../../src/expression/definitions/literal.ts","../../src/expression/runtime_error.ts","../../src/expression/definitions/assertion.ts","../../src/expression/definitions/coercion.ts","../../src/expression/evaluation_context.ts","../../src/expression/parsing_context.ts","../../src/expression/definitions/let.ts","../../src/expression/definitions/var.ts","../../src/expression/definitions/at.ts","../../src/expression/definitions/in.ts","../../src/expression/definitions/index_of.ts","../../src/expression/definitions/match.ts","../../src/expression/definitions/case.ts","../../src/expression/definitions/slice.ts","../../src/expression/stops.ts","../../src/expression/definitions/step.ts","../node_modules/@mapbox/unitbezier/index.js","../../src/util/interpolate.ts","../../src/expression/definitions/interpolate.ts","../../src/expression/definitions/coalesce.ts","../../src/expression/definitions/comparison.ts","../../src/expression/definitions/collator.ts","../../src/expression/definitions/number_format.ts","../../src/expression/definitions/format.ts","../../src/expression/definitions/image.ts","../../src/expression/definitions/length.ts","../../src/util/geometry_util.ts","../../src/expression/definitions/within.ts","../node_modules/tinyqueue/index.js","../node_modules/quickselect/index.js","../../src/util/classify_rings.ts","../../src/util/cheap_ruler.ts","../../src/expression/definitions/distance.ts","../../src/expression/definitions/index.ts","../../src/expression/compound_expression.ts","../../src/util/result.ts","../../src/util/properties.ts","../../src/util/get_type.ts","../../src/function/index.ts","../../src/expression/index.ts","../../src/feature_filter/index.ts","../../src/feature_filter/convert.ts","../../src/function/convert.ts","../../src/visit.ts","../../src/group_by_layout.ts","../../src/empty.ts","../../src/validate/validate_constants.ts","../../src/util/unbundle_jsonlint.ts","../../src/validate/validate_object.ts","../../src/validate/validate_array.ts","../../src/validate/validate_number.ts","../../src/validate/validate_function.ts","../../src/validate/validate_expression.ts","../../src/validate/validate_boolean.ts","../../src/validate/validate_color.ts","../../src/validate/validate_enum.ts","../../src/validate/validate_filter.ts","../../src/validate/validate_property.ts","../../src/validate/validate_paint_property.ts","../../src/validate/validate_layout_property.ts","../../src/validate/validate_layer.ts","../../src/validate/validate_string.ts","../../src/validate/validate_raster_dem_source.ts","../../src/validate/validate_source.ts","../../src/validate/validate_light.ts","../../src/validate/validate_sky.ts","../../src/validate/validate_terrain.ts","../../src/validate/validate_formatted.ts","../../src/validate/validate_image.ts","../../src/validate/validate_padding.ts","../../src/validate/validate_variable_anchor_offset_collection.ts","../../src/validate/validate_sprite.ts","../../src/validate/validate.ts","../../src/validate/validate_glyphs_url.ts","../../src/validate_style.min.ts","../node_modules/json-stringify-pretty-compact/index.js","../../src/format.ts","../../src/migrate/v8.ts","../../src/migrate/expressions.ts","../../src/migrate/migrate_colors.ts","../../src/migrate.ts","../../src/index.ts"],"sourcesContent":["\nconst refProperties = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\nexport default refProperties;\n","\nimport refProperties from './util/ref_properties';\n\nfunction deref(layer, parent) {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n\n    return result;\n}\n\nexport default derefLayers;\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[layers[i].ref]);\n        }\n    }\n\n    return layers;\n}\n","/**\n * Deeply compares two object literals.\n *\n * @private\n */\nfunction deepEqual(a?: unknown | null, b?: unknown | null): boolean {\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length) return false;\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i])) return false;\n        }\n        return true;\n    }\n    if (typeof a === 'object' && a !== null && b !== null) {\n        if (!(typeof b === 'object')) return false;\n        const keys = Object.keys(a);\n        if (keys.length !== Object.keys(b).length) return false;\n        for (const key in a) {\n            if (!deepEqual(a[key], b[key])) return false;\n        }\n        return true;\n    }\n    return a === b;\n}\n\nexport default deepEqual;\n","\nimport {GeoJSONSourceSpecification, LayerSpecification, LightSpecification, SkySpecification, SourceSpecification, SpriteSpecification, StyleSpecification, TerrainSpecification, TransitionSpecification} from './types.g';\nimport isEqual from './util/deep_equal';\n\n/**\n * Operations that can be performed by the diff.\n * Below are the operations and their arguments, the arguments should be aligned with the style methods in maplibre-gl-js.\n */\nexport type DiffOperationsMap = {\n    'setStyle': [StyleSpecification];\n    'addLayer': [LayerSpecification, string | null];\n    'removeLayer': [string];\n    'setPaintProperty': [string, string, unknown, string | null];\n    'setLayoutProperty': [string, string, unknown, string | null];\n    'setFilter': [string, unknown];\n    'addSource': [string, SourceSpecification];\n    'removeSource': [string];\n    'setGeoJSONSourceData': [string, unknown];\n    'setLayerZoomRange': [string, number, number];\n    'setLayerProperty': [string, string, unknown];\n    'setCenter': [number[]];\n    'setZoom': [number];\n    'setBearing': [number];\n    'setPitch': [number];\n    'setSprite': [SpriteSpecification];\n    'setGlyphs': [string];\n    'setTransition': [TransitionSpecification];\n    'setLight': [LightSpecification];\n    'setTerrain': [TerrainSpecification];\n    'setSky': [SkySpecification];\n}\n\nexport type DiffOperations = keyof DiffOperationsMap;\n\nexport type DiffCommand<T extends DiffOperations> = {\n    command: T;\n    args: DiffOperationsMap[T];\n};\n\n/**\n * The main reason for this method is to allow type check when adding a command to the array.\n * @param commands - The commands array to add to\n * @param command - The command to add\n */\nfunction addCommand<T extends DiffOperations>(commands: DiffCommand<DiffOperations>[], command: DiffCommand<T>) {\n    commands.push(command);\n}\n\nfunction addSource(sourceId: string, after: {[key: string]: SourceSpecification}, commands: DiffCommand<DiffOperations>[]) {\n    addCommand(commands, {command: 'addSource', args: [sourceId, after[sourceId]]});\n}\n\nfunction removeSource(sourceId: string, commands: DiffCommand<DiffOperations>[], sourcesRemoved: {[key: string]: boolean}) {\n    addCommand(commands, {command: 'removeSource', args: [sourceId]});\n    sourcesRemoved[sourceId] = true;\n}\n\nfunction updateSource(sourceId: string, after: {[key: string]: SourceSpecification}, commands: DiffCommand<DiffOperations>[], sourcesRemoved: {[key: string]: boolean}) {\n    removeSource(sourceId, commands, sourcesRemoved);\n    addSource(sourceId, after, commands);\n}\n\nfunction canUpdateGeoJSON(before: {[key: string]: SourceSpecification}, after: {[key: string]: SourceSpecification}, sourceId: string) {\n    let prop;\n    for (prop in before[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(before[sourceId], prop)) continue;\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    for (prop in after[sourceId]) {\n        if (!Object.prototype.hasOwnProperty.call(after[sourceId], prop)) continue;\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction diffSources(before: {[key: string]: SourceSpecification}, after: {[key: string]: SourceSpecification}, commands: DiffCommand<DiffOperations>[], sourcesRemoved: {[key: string]: boolean}) {\n    before = before || {} as {[key: string]: SourceSpecification};\n    after = after || {} as {[key: string]: SourceSpecification};\n\n    let sourceId: string;\n\n    // look for sources to remove\n    for (sourceId in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId)) continue;\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId)) {\n            removeSource(sourceId, commands, sourcesRemoved);\n        }\n    }\n\n    // look for sources to add/update\n    for (sourceId in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, sourceId)) continue;\n        if (!Object.prototype.hasOwnProperty.call(before, sourceId)) {\n            addSource(sourceId, after, commands);\n        } else if (!isEqual(before[sourceId], after[sourceId])) {\n            if (before[sourceId].type === 'geojson' && after[sourceId].type === 'geojson' && canUpdateGeoJSON(before, after, sourceId)) {\n                addCommand(commands, {command: 'setGeoJSONSourceData', args: [sourceId, (after[sourceId] as GeoJSONSourceSpecification).data]});\n            } else {\n                // no update command, must remove then add\n                updateSource(sourceId, after, commands, sourcesRemoved);\n            }\n        }\n    }\n}\n\nfunction diffLayerPropertyChanges(before: LayerSpecification['layout'] | LayerSpecification['paint'], after:LayerSpecification['layout'] | LayerSpecification['paint'], commands: DiffCommand<DiffOperations>[], layerId: string, klass: string | null, command: 'setPaintProperty' | 'setLayoutProperty') {\n    before = before || {} as LayerSpecification['layout'] | LayerSpecification['paint'];\n    after = after || {} as LayerSpecification['layout'] | LayerSpecification['paint'];\n\n    for (const prop in before) {\n        if (!Object.prototype.hasOwnProperty.call(before, prop)) continue;\n        if (!isEqual(before[prop], after[prop])) {\n            commands.push({command, args: [layerId, prop, after[prop], klass]});\n        }\n    }\n    for (const prop in after) {\n        if (!Object.prototype.hasOwnProperty.call(after, prop) || Object.prototype.hasOwnProperty.call(before, prop)) continue;\n        if (!isEqual(before[prop], after[prop])) {\n            commands.push({command, args: [layerId, prop, after[prop], klass]});\n        }\n    }\n}\n\nfunction pluckId(layer: LayerSpecification) {\n    return layer.id;\n}\nfunction indexById(group: {[key: string]: LayerSpecification}, layer: LayerSpecification) {\n    group[layer.id] = layer;\n    return group;\n}\n\nfunction diffLayers(before: LayerSpecification[], after: LayerSpecification[], commands: DiffCommand<DiffOperations>[]) {\n    before = before || [];\n    after = after || [];\n\n    // order of layers by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n\n    // index of layer by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n\n    // track order of layers as if they have been mutated\n    const tracker = beforeOrder.slice();\n\n    // layers that have been added do not need to be diffed\n    const clean = Object.create(null);\n\n    let layerId: string;\n    let beforeLayer: LayerSpecification & { source?: string; filter?: unknown};\n    let afterLayer: LayerSpecification & { source?: string; filter?: unknown};\n    let insertBeforeLayerId: string;\n    let prop: string;\n\n    // remove layers\n    for (let i = 0, d = 0; i < beforeOrder.length; i++) {\n        layerId = beforeOrder[i];\n        if (!Object.prototype.hasOwnProperty.call(afterIndex, layerId)) {\n            addCommand(commands, {command: 'removeLayer', args: [layerId]});\n            tracker.splice(tracker.indexOf(layerId, d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n\n    // add/reorder layers\n    for (let i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing layer\n        layerId = afterOrder[afterOrder.length - 1 - i];\n\n        if (tracker[tracker.length - 1 - i] === layerId) continue;\n\n        if (Object.prototype.hasOwnProperty.call(beforeIndex, layerId)) {\n            // remove the layer before we insert at the correct position\n            addCommand(commands, {command: 'removeLayer', args: [layerId]});\n            tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n\n        // add layer at correct position\n        insertBeforeLayerId = tracker[tracker.length - i];\n        addCommand(commands, {command: 'addLayer', args: [afterIndex[layerId], insertBeforeLayerId]});\n        tracker.splice(tracker.length - i, 0, layerId);\n        clean[layerId] = true;\n    }\n\n    // update layers\n    for (let i = 0; i < afterOrder.length; i++) {\n        layerId = afterOrder[i];\n        beforeLayer = beforeIndex[layerId];\n        afterLayer = afterIndex[layerId];\n\n        // no need to update if previously added (new or moved)\n        if (clean[layerId] || isEqual(beforeLayer, afterLayer)) continue;\n\n        // If source, source-layer, or type have changes, then remove the layer\n        // and add it back 'from scratch'.\n        if (!isEqual(beforeLayer.source, afterLayer.source) || !isEqual(beforeLayer['source-layer'], afterLayer['source-layer']) || !isEqual(beforeLayer.type, afterLayer.type)) {\n            addCommand(commands, {command: 'removeLayer', args: [layerId]});\n            // we add the layer back at the same position it was already in, so\n            // there's no need to update the `tracker`\n            insertBeforeLayerId = tracker[tracker.lastIndexOf(layerId) + 1];\n            addCommand(commands, {command: 'addLayer', args: [afterLayer, insertBeforeLayerId]});\n            continue;\n        }\n\n        // layout, paint, filter, minzoom, maxzoom\n        diffLayerPropertyChanges(beforeLayer.layout, afterLayer.layout, commands, layerId, null, 'setLayoutProperty');\n        diffLayerPropertyChanges(beforeLayer.paint, afterLayer.paint, commands, layerId, null, 'setPaintProperty');\n        if (!isEqual(beforeLayer.filter, afterLayer.filter)) {\n            addCommand(commands, {command: 'setFilter', args: [layerId, afterLayer.filter]});\n        }\n        if (!isEqual(beforeLayer.minzoom, afterLayer.minzoom) || !isEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n            addCommand(commands, {command: 'setLayerZoomRange', args: [layerId, afterLayer.minzoom, afterLayer.maxzoom]});\n        }\n\n        // handle all other layer props, including paint.*\n        for (prop in beforeLayer) {\n            if (!Object.prototype.hasOwnProperty.call(beforeLayer, prop)) continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom') continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), 'setPaintProperty');\n            } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n                addCommand(commands, {command: 'setLayerProperty', args: [layerId, prop, afterLayer[prop]]});\n            }\n        }\n        for (prop in afterLayer) {\n            if (!Object.prototype.hasOwnProperty.call(afterLayer, prop) || Object.prototype.hasOwnProperty.call(beforeLayer, prop)) continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom') continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), 'setPaintProperty');\n            } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n                addCommand(commands, {command: 'setLayerProperty', args: [layerId, prop, afterLayer[prop]]});\n            }\n        }\n    }\n}\n\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the maplibre-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nfunction diffStyles(before: StyleSpecification, after: StyleSpecification): DiffCommand<DiffOperations>[] {\n    if (!before) return [{command: 'setStyle', args: [after]}];\n\n    let commands: DiffCommand<DiffOperations>[] = [];\n\n    try {\n        // Handle changes to top-level properties\n        if (!isEqual(before.version, after.version)) {\n            return [{command: 'setStyle', args: [after]}];\n        }\n        if (!isEqual(before.center, after.center)) {\n            commands.push({command: 'setCenter', args: [after.center]});\n        }\n        if (!isEqual(before.zoom, after.zoom)) {\n            commands.push({command: 'setZoom', args: [after.zoom]});\n        }\n        if (!isEqual(before.bearing, after.bearing)) {\n            commands.push({command: 'setBearing', args: [after.bearing]});\n        }\n        if (!isEqual(before.pitch, after.pitch)) {\n            commands.push({command: 'setPitch', args: [after.pitch]});\n        }\n        if (!isEqual(before.sprite, after.sprite)) {\n            commands.push({command: 'setSprite', args: [after.sprite]});\n        }\n        if (!isEqual(before.glyphs, after.glyphs)) {\n            commands.push({command: 'setGlyphs', args: [after.glyphs]});\n        }\n        if (!isEqual(before.transition, after.transition)) {\n            commands.push({command: 'setTransition', args: [after.transition]});\n        }\n        if (!isEqual(before.light, after.light)) {\n            commands.push({command: 'setLight', args: [after.light]});\n        }\n        if (!isEqual(before.terrain, after.terrain)) {\n            commands.push({command: 'setTerrain', args: [after.terrain]});\n        }\n        if (!isEqual(before.sky, after.sky)) {\n            commands.push({command: 'setSky', args: [after.sky]});\n        }\n\n        // Handle changes to `sources`\n        // If a source is to be removed, we also--before the removeSource\n        // command--need to remove all the style layers that depend on it.\n        const sourcesRemoved = {};\n\n        // First collect the {add,remove}Source commands\n        const removeOrAddSourceCommands = [];\n        diffSources(before.sources, after.sources, removeOrAddSourceCommands, sourcesRemoved);\n\n        // Push a removeLayer command for each style layer that depends on a\n        // source that's being removed.\n        // Also, exclude any such layers them from the input to `diffLayers`\n        // below, so that diffLayers produces the appropriate `addLayers`\n        // command\n        const beforeLayers = [];\n        if (before.layers) {\n            before.layers.forEach((layer) => {\n                if ('source' in layer && sourcesRemoved[layer.source]) {\n                    commands.push({command: 'removeLayer', args: [layer.id]});\n                } else {\n                    beforeLayers.push(layer);\n                }\n            });\n        }\n        commands = commands.concat(removeOrAddSourceCommands);\n\n        // Handle changes to `layers`\n        diffLayers(beforeLayers, after.layers, commands);\n\n    } catch (e) {\n        // fall back to setStyle\n        console.warn('Unable to compute style diff:', e);\n        commands = [{command: 'setStyle', args: [after]}];\n    }\n\n    return commands;\n}\n\nexport default diffStyles;\n","// Note: Do not inherit from Error. It breaks when transpiling to ES5.\n\nexport default class ValidationError {\n    message: string;\n    identifier: string;\n    line: number;\n\n    constructor(key: string, value: any & {\n        __line__: number;\n    }, message: string, identifier?: string | null) {\n        this.message = (key ? `${key}: ` : '') + message;\n        if (identifier) this.identifier = identifier;\n\n        if (value !== null && value !== undefined && value.__line__) {\n            this.line = value.__line__;\n        }\n    }\n}\n","// Note: Do not inherit from Error. It breaks when transpiling to ES5.\n\nexport default class ParsingError {\n    message: string;\n    error: Error;\n    line: number;\n\n    constructor(error: Error) {\n        this.error = error;\n        this.message = error.message;\n        const match = error.message.match(/line (\\d+)/);\n        this.line = match ? parseInt(match[1], 10) : 0;\n    }\n}\n","export default function extendBy(output: any, ...inputs: Array<any>) {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n","class ExpressionParsingError extends Error {\n    key: string;\n    message: string;\n    constructor(key: string, message: string) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ExpressionParsingError;\n","import type {Expression} from './expression';\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    parent: Scope;\n    bindings: {[_: string]: Expression};\n    constructor(parent?: Scope, bindings: Array<[string, Expression]> = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings: Array<[string, Expression]>) {\n        return new Scope(this, bindings);\n    }\n\n    get(name: string): Expression {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name: string): boolean {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","export type NullTypeT = {\n    kind: 'null';\n};\nexport type NumberTypeT = {\n    kind: 'number';\n};\nexport type StringTypeT = {\n    kind: 'string';\n};\nexport type BooleanTypeT = {\n    kind: 'boolean';\n};\nexport type ColorTypeT = {\n    kind: 'color';\n};\nexport type ObjectTypeT = {\n    kind: 'object';\n};\nexport type ValueTypeT = {\n    kind: 'value';\n};\nexport type ErrorTypeT = {\n    kind: 'error';\n};\nexport type CollatorTypeT = {\n    kind: 'collator';\n};\nexport type FormattedTypeT = {\n    kind: 'formatted';\n};\nexport type PaddingTypeT = {\n    kind: 'padding';\n};\nexport type ResolvedImageTypeT = {\n    kind: 'resolvedImage';\n};\nexport type VariableAnchorOffsetCollectionTypeT = {\n    kind: 'variableAnchorOffsetCollection';\n};\n\nexport type EvaluationKind = 'constant' | 'source' | 'camera' | 'composite';\n\nexport type Type = NullTypeT | NumberTypeT | StringTypeT | BooleanTypeT | ColorTypeT | ObjectTypeT | ValueTypeT |\nArrayType | ErrorTypeT | CollatorTypeT | FormattedTypeT | PaddingTypeT | ResolvedImageTypeT | VariableAnchorOffsetCollectionTypeT;\n\nexport interface ArrayType<T extends Type = Type> {\n    kind: 'array';\n    itemType: T;\n    N: number;\n}\n\nexport type NativeType = 'number' | 'string' | 'boolean' | 'null' | 'array' | 'object';\n\nexport const NullType = {kind: 'null'} as NullTypeT;\nexport const NumberType = {kind: 'number'} as NumberTypeT;\nexport const StringType = {kind: 'string'} as StringTypeT;\nexport const BooleanType = {kind: 'boolean'} as BooleanTypeT;\nexport const ColorType = {kind: 'color'} as ColorTypeT;\nexport const ObjectType = {kind: 'object'} as ObjectTypeT;\nexport const ValueType = {kind: 'value'} as ValueTypeT;\nexport const ErrorType = {kind: 'error'} as ErrorTypeT;\nexport const CollatorType = {kind: 'collator'} as CollatorTypeT;\nexport const FormattedType = {kind: 'formatted'} as FormattedTypeT;\nexport const PaddingType = {kind: 'padding'} as PaddingTypeT;\nexport const ResolvedImageType = {kind: 'resolvedImage'} as ResolvedImageTypeT;\nexport const VariableAnchorOffsetCollectionType = {kind: 'variableAnchorOffsetCollection'} as VariableAnchorOffsetCollectionTypeT;\n\nexport function array<T extends Type>(itemType: T, N?: number | null): ArrayType<T> {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type: Type): string {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    PaddingType,\n    ResolvedImageType,\n    VariableAnchorOffsetCollectionType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected: Type, t: Type): string {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided: Type, allowedTypes: Array<Type>): boolean {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided: any, allowedTypes: Array<NativeType>): boolean {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n\n/**\n * Verify whether the specified type is of the same type as the specified sample.\n *\n * @param provided Type to verify\n * @param sample Sample type to reference\n * @returns `true` if both objects are of the same type, `false` otherwise\n * @example basic types\n * if (verifyType(outputType, ValueType)) {\n *     // type narrowed to:\n *     outputType.kind; // 'value'\n * }\n * @example array types\n * if (verifyType(outputType, array(NumberType))) {\n *     // type narrowed to:\n *     outputType.kind; // 'array'\n *     outputType.itemType; // NumberTypeT\n *     outputType.itemType.kind; // 'number'\n * }\n */\nexport function verifyType<T extends Type>(provided: Type, sample: T): provided is T {\n    if (provided.kind === 'array' && sample.kind === 'array') {\n        return provided.itemType.kind === sample.itemType.kind && typeof provided.N === 'number';\n    }\n    return provided.kind === sample.kind;\n}\n","/**\n * @param r Red component 0..1\n * @param g Green component 0..1\n * @param b Blue component 0..1\n * @param alpha Alpha component 0..1\n */\nexport type RGBColor = [r: number, g: number, b: number, alpha: number];\n\n/**\n * @param h Hue as degrees 0..360\n * @param s Saturation as percentage 0..100\n * @param l Lightness as percentage 0..100\n * @param alpha Alpha component 0..1\n */\nexport type HSLColor = [h: number, s: number, l: number, alpha: number];\n\n/**\n * @param h Hue as degrees 0..360\n * @param c Chroma 0..~230\n * @param l Lightness as percentage 0..100\n * @param alpha Alpha component 0..1\n */\nexport type HCLColor = [h: number, c: number, l: number, alpha: number];\n\n/**\n * @param l Lightness as percentage 0..100\n * @param a A axis value -125..125\n * @param b B axis value -125..125\n * @param alpha Alpha component 0..1\n */\nexport type LABColor = [l: number, a: number, b: number, alpha: number];\n\n// See https://observablehq.com/@mbostock/lab-and-rgb\nconst Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\nfunction constrainAngle(angle: number): number {\n    angle = angle % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n\nexport function rgbToLab([r, g, b, alpha]: RGBColor): LABColor {\n    r = rgb2xyz(r);\n    g = rgb2xyz(g);\n    b = rgb2xyz(b);\n    let x, z;\n    const y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn);\n    if (r === g && g === b) {\n        x = z = y;\n    } else {\n        x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n        z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n    }\n\n    const l = 116 * y - 16;\n    return [(l < 0) ? 0 : l, 500 * (x - y), 200 * (y - z), alpha];\n}\n\nfunction rgb2xyz(x: number): number {\n    return (x <= 0.04045) ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction xyz2lab(t: number): number {\n    return (t > t3) ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nexport function labToRgb([l, a, b, alpha]: LABColor): RGBColor {\n    let y = (l + 16) / 116,\n        x = isNaN(a) ? y : y + a / 500,\n        z = isNaN(b) ? y : y - b / 200;\n\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n\n    return [\n        xyz2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), // D50 -> sRGB\n        xyz2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n        xyz2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n        alpha,\n    ];\n}\n\nfunction xyz2rgb(x: number): number {\n    x = (x <= 0.00304) ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055;\n    return (x < 0) ? 0 : (x > 1) ? 1 : x; // clip to 0..1 range\n}\n\nfunction lab2xyz(t: number): number {\n    return (t > t1) ? t * t * t : t2 * (t - t0);\n}\n\nexport function rgbToHcl(rgbColor: RGBColor): HCLColor {\n    const [l, a, b, alpha] = rgbToLab(rgbColor);\n    const c = Math.sqrt(a * a + b * b);\n    const h = Math.round(c * 10000) ? constrainAngle(Math.atan2(b, a) * rad2deg) : NaN;\n    return [h, c, l, alpha];\n}\n\nexport function hclToRgb([h, c, l, alpha]: HCLColor): RGBColor {\n    h = isNaN(h) ? 0 : h * deg2rad;\n    return labToRgb([l, Math.cos(h) * c, Math.sin(h) * c, alpha]);\n}\n\n// https://drafts.csswg.org/css-color-4/#hsl-to-rgb\nexport function hslToRgb([h, s, l, alpha]: HSLColor): RGBColor {\n    h = constrainAngle(h);\n    s /= 100;\n    l /= 100;\n\n    function f(n) {\n        const k = (n + h / 30) % 12;\n        const a = s * Math.min(l, 1 - l);\n        return l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n    }\n\n    return [f(0), f(8), f(4), alpha];\n}\n","import {HSLColor, hslToRgb, RGBColor} from './color_spaces';\n\n/**\n * CSS color parser compliant with CSS Color 4 Specification.\n * Supports: named colors, `transparent` keyword, all rgb hex notations,\n * rgb(), rgba(), hsl() and hsla() functions.\n * Does not round the parsed values to integers from the range 0..255.\n *\n * Syntax:\n *\n * <alpha-value> = <number> | <percentage>\n *         <hue> = <number> | <angle>\n *\n *         rgb() = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? )\n *         rgb() = rgb( <percentage>#{3} , <alpha-value>? )    | rgb( <number>#{3} , <alpha-value>? )\n *\n *         hsl() = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? )\n *         hsl() = hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )\n *\n * Caveats:\n *   - <angle> - <number> with optional `deg` suffix; `grad`, `rad`, `turn` are not supported\n *   - `none` keyword is not supported\n *   - comments inside rgb()/hsl() are not supported\n *   - legacy color syntax rgba() is supported with an identical grammar and behavior to rgb()\n *   - legacy color syntax hsla() is supported with an identical grammar and behavior to hsl()\n *\n * @param input CSS color string to parse.\n * @returns Color in sRGB color space, with `red`, `green`, `blue`\n * and `alpha` channels normalized to the range 0..1,\n * or `undefined` if the input is not a valid color string.\n */\nexport function parseCssColor(input: string): RGBColor | undefined {\n    input = input.toLowerCase().trim();\n\n    if (input === 'transparent') {\n        return [0, 0, 0, 0];\n    }\n\n    // 'white', 'black', 'blue'\n    const namedColorsMatch = namedColors[input];\n    if (namedColorsMatch) {\n        const [r, g, b] = namedColorsMatch;\n        return [r / 255, g / 255, b / 255, 1];\n    }\n\n    // #f0c, #f0cf, #ff00cc, #ff00ccff\n    if (input.startsWith('#')) {\n        const hexRegexp = /^#(?:[0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})$/;\n        if (hexRegexp.test(input)) {\n            const step = input.length < 6 ? 1 : 2;\n            let i = 1;\n            return [ // eslint-disable-line no-return-assign\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i += step)),\n                parseHex(input.slice(i, i + step) || 'ff'),\n            ];\n        }\n    }\n\n    // rgb(128 0 0), rgb(50% 0% 0%), rgba(255,0,255,0.6), rgb(255 0 255 / 60%), rgb(100% 0% 100% /.6)\n    if (input.startsWith('rgb')) {\n        const rgbRegExp = /^rgba?\\(\\s*([\\de.+-]+)(%)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)(%)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)(%)?(?:\\s*([,\\/])\\s*([\\de.+-]+)(%)?)?\\s*\\)$/;\n        const rgbMatch = input.match(rgbRegExp);\n        if (rgbMatch) {\n            const [\n                _,  // eslint-disable-line @typescript-eslint/no-unused-vars\n                r,  // <numeric>\n                rp, // %         (optional)\n                f1, // ,         (optional)\n                g,  // <numeric>\n                gp, // %         (optional)\n                f2, // ,         (optional)\n                b,  // <numeric>\n                bp, // %         (optional)\n                f3, // ,|/       (optional)\n                a,  // <numeric> (optional)\n                ap, // %         (optional)\n            ] = rgbMatch;\n\n            const argFormat = [f1 || ' ', f2 || ' ', f3].join('');\n            if (\n                argFormat === '  ' ||\n                argFormat === '  /' ||\n                argFormat === ',,' ||\n                argFormat === ',,,'\n            ) {\n                const valFormat = [rp, gp, bp].join('');\n                const maxValue =\n                    (valFormat === '%%%') ? 100 :\n                        (valFormat === '') ? 255 : 0;\n                if (maxValue) {\n                    const rgba: RGBColor = [\n                        clamp(+r / maxValue, 0, 1),\n                        clamp(+g / maxValue, 0, 1),\n                        clamp(+b / maxValue, 0, 1),\n                        a ? parseAlpha(+a, ap) : 1,\n                    ];\n                    if (validateNumbers(rgba)) {\n                        return rgba;\n                    }\n                    // invalid numbers\n                }\n                // values must be all numbers or all percentages\n            }\n            return; // comma optional syntax requires no commas at all\n        }\n    }\n\n    // hsl(120 50% 80%), hsla(120deg,50%,80%,.9), hsl(12e1 50% 80% / 90%)\n    const hslRegExp = /^hsla?\\(\\s*([\\de.+-]+)(?:deg)?(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)%(?:\\s+|\\s*(,)\\s*)([\\de.+-]+)%(?:\\s*([,\\/])\\s*([\\de.+-]+)(%)?)?\\s*\\)$/;\n    const hslMatch = input.match(hslRegExp);\n    if (hslMatch) {\n        const [\n            _,  // eslint-disable-line @typescript-eslint/no-unused-vars\n            h,  // <numeric>\n            f1, // ,         (optional)\n            s,  // <numeric>\n            f2, // ,         (optional)\n            l,  // <numeric>\n            f3, // ,|/       (optional)\n            a,  // <numeric> (optional)\n            ap, // %         (optional)\n        ] = hslMatch;\n\n        const argFormat = [f1 || ' ', f2 || ' ', f3].join('');\n        if (\n            argFormat === '  ' ||\n            argFormat === '  /' ||\n            argFormat === ',,' ||\n            argFormat === ',,,'\n        ) {\n            const hsla: HSLColor = [\n                +h,\n                clamp(+s, 0, 100),\n                clamp(+l, 0, 100),\n                a ? parseAlpha(+a, ap) : 1,\n            ];\n            if (validateNumbers(hsla)) {\n                return hslToRgb(hsla);\n            }\n            // invalid numbers\n        }\n        // comma optional syntax requires no commas at all\n    }\n}\n\nfunction parseHex(hex: string): number {\n    return parseInt(hex.padEnd(2, hex), 16) / 255;\n}\n\nfunction parseAlpha(a: number, asPercentage: string | undefined): number {\n    return clamp(asPercentage ? (a / 100) : a, 0, 1);\n}\n\nfunction clamp(n: number, min: number, max: number): number {\n    return Math.min(Math.max(min, n), max);\n}\n\n/**\n * The regular expression for numeric values is not super specific, and it may\n * happen that it will accept a value that is not a valid number. In order to\n * detect and eliminate such values this function exists.\n *\n * @param array Array of uncertain numbers.\n * @returns `true` if the specified array contains only valid numbers, `false` otherwise.\n */\nfunction validateNumbers(array: number[]): boolean {\n    return !array.some(Number.isNaN);\n}\n\n/**\n * To generate:\n * - visit {@link https://www.w3.org/TR/css-color-4/#named-colors}\n * - run in the console:\n * @example\n * copy(`{\\n${[...document.querySelector('.named-color-table tbody').children].map((tr) => `${tr.cells[2].textContent.trim()}: [${tr.cells[4].textContent.trim().split(/\\s+/).join(', ')}],`).join('\\n')}\\n}`);\n */\nconst namedColors: Record<string, [number, number, number]> = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50],\n};\n","import {HCLColor, LABColor, RGBColor, rgbToHcl, rgbToLab} from './color_spaces';\nimport {parseCssColor} from './parse_css_color';\n\n/**\n * Color representation used by WebGL.\n * Defined in sRGB color space and pre-blended with alpha.\n * @private\n */\nclass Color {\n\n    readonly r: number;\n    readonly g: number;\n    readonly b: number;\n    readonly a: number;\n\n    /**\n     * @param r Red component premultiplied by `alpha` 0..1\n     * @param g Green component premultiplied by `alpha` 0..1\n     * @param b Blue component premultiplied by `alpha` 0..1\n     * @param [alpha=1] Alpha component 0..1\n     * @param [premultiplied=true] Whether the `r`, `g` and `b` values have already\n     * been multiplied by alpha. If `true` nothing happens if `false` then they will\n     * be multiplied automatically.\n     */\n    constructor(r: number, g: number, b: number, alpha = 1, premultiplied = true) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = alpha;\n\n        if (!premultiplied) {\n            this.r *= alpha;\n            this.g *= alpha;\n            this.b *= alpha;\n\n            if (!alpha) {\n                // alpha = 0 erases completely rgb channels. This behavior is not desirable\n                // if this particular color is later used in color interpolation.\n                // Because of that, a reference to original color is saved.\n                this.overwriteGetter('rgb', [r, g, b, alpha]);\n            }\n        }\n    }\n\n    static black: Color;\n    static white: Color;\n    static transparent: Color;\n    static red: Color;\n\n    /**\n     * Parses CSS color strings and converts colors to sRGB color space if needed.\n     * Officially supported color formats:\n     * - keyword, e.g. 'aquamarine' or 'steelblue'\n     * - hex (with 3, 4, 6 or 8 digits), e.g. '#f0f' or '#e9bebea9'\n     * - rgb and rgba, e.g. 'rgb(0,240,120)' or 'rgba(0%,94%,47%,0.1)' or 'rgb(0 240 120 / .3)'\n     * - hsl and hsla, e.g. 'hsl(0,0%,83%)' or 'hsla(0,0%,83%,.5)' or 'hsl(0 0% 83% / 20%)'\n     *\n     * @param input CSS color string to parse.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input: Color | string | undefined | null): Color | undefined {\n        // in zoom-and-property function input could be an instance of Color class\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return;\n        }\n\n        const rgba = parseCssColor(input);\n        if (rgba) {\n            return new Color(...rgba, false);\n        }\n    }\n\n    /**\n     * Used in color interpolation and by 'to-rgba' expression.\n     *\n     * @returns Gien color, with reversed alpha blending, in sRGB color space.\n     */\n    get rgb(): RGBColor {\n        const {r, g, b, a} = this;\n        const f = a || Infinity; // reverse alpha blending factor\n        return this.overwriteGetter('rgb', [r / f, g / f, b / f, a]);\n    }\n\n    /**\n     * Used in color interpolation.\n     *\n     * @returns Gien color, with reversed alpha blending, in HCL color space.\n     */\n    get hcl(): HCLColor {\n        return this.overwriteGetter('hcl', rgbToHcl(this.rgb));\n    }\n\n    /**\n     * Used in color interpolation.\n     *\n     * @returns Gien color, with reversed alpha blending, in LAB color space.\n     */\n    get lab(): LABColor {\n        return this.overwriteGetter('lab', rgbToLab(this.rgb));\n    }\n\n    /**\n     * Lazy getter pattern. When getter is called for the first time lazy value\n     * is calculated and then overwrites getter function in given object instance.\n     *\n     * @example:\n     * const redColor = Color.parse('red');\n     * let x = redColor.hcl; // this will invoke `get hcl()`, which will calculate\n     * // the value of red in HCL space and invoke this `overwriteGetter` function\n     * // which in turn will set a field with a key 'hcl' in the `redColor` object.\n     * // In other words it will override `get hcl()` from its `Color` prototype\n     * // with its own property: hcl = [calculated red value in hcl].\n     * let y = redColor.hcl; // next call will no longer invoke getter but simply\n     * // return the previously calculated value\n     * x === y; // true - `x` is exactly the same object as `y`\n     *\n     * @param getterKey Getter key\n     * @param lazyValue Lazily calculated value to be memoized by current instance\n     * @private\n     */\n    private overwriteGetter<T>(getterKey: string, lazyValue: T): T {\n        Object.defineProperty(this, getterKey, {value: lazyValue});\n        return lazyValue;\n    }\n\n    /**\n     * Used by 'to-string' expression.\n     *\n     * @returns Serialized color in format `rgba(r,g,b,a)`\n     * where r,g,b are numbers within 0..255 and alpha is number within 1..0\n     *\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString(): string {\n        const [r, g, b, a] = this.rgb;\n        return `rgba(${[r, g, b].map(n => Math.round(n * 255)).join(',')},${a})`;\n    }\n\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\n\nexport default Color;\n","// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\ndeclare let Intl: {\n    Collator: {\n        new (...args: any): Intl$Collator;\n    };\n};\n\ndeclare class Intl$Collator {\n    constructor(locales?: string | string[], options?: CollatorOptions);\n    compare(a: string, b: string): number;\n    resolvedOptions(): any;\n}\n\ntype CollatorOptions = {\n    localeMatcher?: 'lookup' | 'best fit';\n    usage?: 'sort' | 'search';\n    sensitivity?: 'base' | 'accent' | 'case' | 'variant';\n    ignorePunctuation?: boolean;\n    numeric?: boolean;\n    caseFirst?: 'upper' | 'lower' | 'false';\n};\n\nexport default class Collator {\n    locale: string | null;\n    sensitivity: 'base' | 'accent' | 'case' | 'variant';\n    collator: Intl$Collator;\n\n    constructor(caseSensitive: boolean, diacriticSensitive: boolean, locale: string | null) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs: string, rhs: string): number {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale(): string {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","import type Color from '../../util/color';\nimport type ResolvedImage from '../types/resolved_image';\n\nexport class FormattedSection {\n    text: string;\n    image: ResolvedImage | null;\n    scale: number | null;\n    fontStack: string | null;\n    textColor: Color | null;\n\n    constructor(text: string, image: ResolvedImage | null, scale: number | null, fontStack: string | null, textColor: Color | null) {\n        this.text = text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n    sections: Array<FormattedSection>;\n\n    constructor(sections: Array<FormattedSection>) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted: string): Formatted {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty(): boolean {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text: Formatted | string): Formatted {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString(): string {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n}\n","/**\n * A set of four numbers representing padding around a box. Create instances from\n * bare arrays or numeric values using the static method `Padding.parse`.\n * @private\n */\nclass Padding {\n    /** Padding values are in CSS order: top, right, bottom, left */\n    values: [number, number, number, number];\n\n    constructor(values: [number, number, number, number]) {\n        this.values = values.slice() as [number, number, number, number];\n    }\n\n    /**\n     * Numeric padding values\n     * @param input A padding value\n     * @returns A `Padding` instance, or `undefined` if the input is not a valid padding value.\n     */\n    static parse(input?: number | number[] | Padding | null): Padding | undefined {\n        if (input instanceof Padding) {\n            return input;\n        }\n\n        // Backwards compatibility: bare number is treated the same as array with single value.\n        // Padding applies to all four sides.\n        if (typeof input === 'number') {\n            return new Padding([input, input, input, input]);\n        }\n\n        if (!Array.isArray(input)) {\n            return undefined;\n        }\n\n        if (input.length < 1 || input.length > 4) {\n            return undefined;\n        }\n\n        for (const val of input) {\n            if (typeof val !== 'number') {\n                return undefined;\n            }\n        }\n\n        // Expand shortcut properties into explicit 4-sided values\n        switch (input.length) {\n            case 1:\n                input = [input[0], input[0], input[0], input[0]];\n                break;\n            case 2:\n                input = [input[0], input[1], input[0], input[1]];\n                break;\n            case 3:\n                input = [input[0], input[1], input[2], input[1]];\n                break;\n        }\n\n        return new Padding(input as [number, number, number, number]);\n    }\n\n    toString(): string {\n        return JSON.stringify(this.values);\n    }\n}\n\nexport default Padding;\n","import {VariableAnchorOffsetCollectionSpecification} from '../types.g';\n\n/** Set of valid anchor positions, as a set for validation */\nconst anchors = new Set(['center', 'left', 'right', 'top', 'bottom', 'top-left', 'top-right', 'bottom-left', 'bottom-right']);\n\n/**\n * Utility class to assist managing values for text-variable-anchor-offset property. Create instances from\n * bare arrays using the static method `VariableAnchorOffsetCollection.parse`.\n * @private\n */\nclass VariableAnchorOffsetCollection {\n    /** Series of paired of anchor (string) and offset (point) values */\n    values: VariableAnchorOffsetCollectionSpecification;\n\n    constructor(values: VariableAnchorOffsetCollectionSpecification) {\n        this.values = values.slice();\n    }\n\n    static parse(input?: VariableAnchorOffsetCollectionSpecification | VariableAnchorOffsetCollection): VariableAnchorOffsetCollection | undefined {\n        if (input instanceof VariableAnchorOffsetCollection) {\n            return input;\n        }\n\n        if (!Array.isArray(input) ||\n            input.length < 1 ||\n            input.length % 2 !== 0) {\n            return undefined;\n        }\n\n        for (let i = 0; i < input.length; i += 2) {\n            // Elements in even positions should be anchor positions; Elements in odd positions should be offset values\n            const anchorValue = input[i];\n            const offsetValue = input[i + 1];\n\n            if (typeof anchorValue !== 'string' || !anchors.has(anchorValue)) {\n                return undefined;\n            }\n\n            if (!Array.isArray(offsetValue) || offsetValue.length !== 2 || typeof offsetValue[0] !== 'number' || typeof offsetValue[1] !== 'number') {\n                return undefined;\n            }\n        }\n\n        return new VariableAnchorOffsetCollection(input);\n    }\n\n    toString(): string {\n        return JSON.stringify(this.values);\n    }\n}\n\nexport default VariableAnchorOffsetCollection;\n","export type ResolvedImageOptions = {\n    name: string;\n    available: boolean;\n};\n\nexport default class ResolvedImage {\n    name: string;\n    available: boolean;\n\n    constructor(options: ResolvedImageOptions) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString(): string {\n        return this.name;\n    }\n\n    static fromString(name: string): ResolvedImage | null {\n        if (!name) return null; // treat empty values as no image\n        return new ResolvedImage({name, available: false});\n    }\n}\n","\nimport Color from '../util/color';\nimport Collator from './types/collator';\nimport Formatted from './types/formatted';\nimport Padding from '../util/padding';\nimport VariableAnchorOffsetCollection from '../util/variable_anchor_offset_collection';\nimport ResolvedImage from './types/resolved_image';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array, PaddingType, VariableAnchorOffsetCollectionType} from './types';\n\nimport type {Type} from './types';\n\nexport function validateRGBA(r: unknown, g: unknown, b: unknown, a?: unknown): string | null {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\nexport type Value = null | string | boolean | number | Color | Collator | Formatted | Padding | ResolvedImage | VariableAnchorOffsetCollection | ReadonlyArray<Value> | {\n    readonly [x: string]: Value;\n};\n\nexport function isValue(mixed: unknown): boolean {\n    if (mixed === null ||\n        typeof mixed === 'string' ||\n        typeof mixed === 'boolean' ||\n        typeof mixed === 'number' ||\n        mixed instanceof Color ||\n        mixed instanceof Collator ||\n        mixed instanceof Formatted ||\n        mixed instanceof Padding ||\n        mixed instanceof VariableAnchorOffsetCollection ||\n        mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value: Value): Type {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof Padding) {\n        return PaddingType;\n    } else if (value instanceof VariableAnchorOffsetCollection) {\n        return VariableAnchorOffsetCollectionType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType: Type | typeof undefined;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        return ObjectType;\n    }\n}\n\nexport function toString(value: Value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof Padding || value instanceof VariableAnchorOffsetCollection || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator, Padding, VariableAnchorOffsetCollection};\n","import {isValue, typeOf} from '../values';\n\nimport type {Type} from '../types';\nimport type {Value}  from '../values';\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\n\nclass Literal implements Expression {\n    type: Type;\n    value: Value;\n\n    constructor(type: Type, value: Value) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`) as null;\n\n        if (!isValue(args[1]))\n            return context.error('invalid value') as null;\n\n        const value = (args[1] as any);\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate() {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined() {\n        return true;\n    }\n}\n\nexport default Literal;\n","class RuntimeError {\n    name: string;\n    message: string;\n\n    constructor(message: string) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON() {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types';\nimport RuntimeError from '../runtime_error';\nimport {typeOf} from '../values';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.') as null;\n\n        let i = 1;\n        let type;\n\n        const name: string = (args[0] as any);\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1) as null;\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2) as null;\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            if (!types[name]) throw new Error(`Types doesn't contain name = ${name}`);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        throw new Error();\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nexport default Assertion;\n","import {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types';\nimport {Color, Padding, VariableAnchorOffsetCollection, toString as valueToString, validateRGBA} from '../values';\nimport RuntimeError from '../runtime_error';\nimport Formatted from '../types/formatted';\nimport ResolvedImage from '../types/resolved_image';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length < 2)\n            return context.error('Expected at least one argument.') as null;\n\n        const name: string = (args[0] as any);\n        if (!types[name]) throw new Error(`Can't parse ${name} as it is not part of the known types`);\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error('Expected one argument.') as null;\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        switch (this.type.kind) {\n            case 'boolean':\n                return Boolean(this.args[0].evaluate(ctx));\n            case 'color': {\n                let input;\n                let error;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n                    error = null;\n                    if (input instanceof Color) {\n                        return input;\n                    } else if (typeof input === 'string') {\n                        const c = ctx.parseColor(input);\n                        if (c) return c;\n                    } else if (Array.isArray(input)) {\n                        if (input.length < 3 || input.length > 4) {\n                            error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                        } else {\n                            error = validateRGBA(input[0], input[1], input[2], input[3]);\n                        }\n                        if (!error) {\n                            return new Color((input[0] as any) / 255, (input[1] as any) / 255, (input[2] as any) / 255, (input[3] as any));\n                        }\n                    }\n                }\n                throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'padding': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n\n                    const pad = Padding.parse(input);\n                    if (pad) {\n                        return pad;\n                    }\n                }\n                throw new RuntimeError(`Could not parse padding from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'variableAnchorOffsetCollection': {\n                let input;\n                for (const arg of this.args) {\n                    input = arg.evaluate(ctx);\n\n                    const coll = VariableAnchorOffsetCollection.parse(input);\n                    if (coll) {\n                        return coll;\n                    }\n                }\n                throw new RuntimeError(`Could not parse variableAnchorOffsetCollection from value '${typeof input === 'string' ? input : JSON.stringify(input)}'`);\n            }\n            case 'number': {\n                let value = null;\n                for (const arg of this.args) {\n                    value = arg.evaluate(ctx);\n                    if (value === null) return 0;\n                    const num = Number(value);\n                    if (isNaN(num)) continue;\n                    return num;\n                }\n                throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n            }\n            case 'formatted':\n                // There is no explicit 'to-formatted' but this coercion can be implicitly\n                // created by properties that expect the 'formatted' type.\n                return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n            case 'resolvedImage':\n                return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n            default:\n                return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nexport default Coercion;\n","import {Color} from './values';\nimport type {FormattedSection} from './types/formatted';\nimport type {GlobalProperties, Feature, FeatureState} from './index';\nimport {ICanonicalTileID} from '../tiles_and_coordinates';\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n    globals: GlobalProperties;\n    feature: Feature;\n    featureState: FeatureState;\n    formattedSection: FormattedSection;\n    availableImages: Array<string>;\n    canonical: ICanonicalTileID;\n\n    _parseColorCache: {[_: string]: Color};\n\n    constructor() {\n        this.globals = null;\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n    }\n\n    id() {\n        return this.feature && 'id' in this.feature ? this.feature.id : null;\n    }\n\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry() {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID() {\n        return this.canonical;\n    }\n\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n\n    parseColor(input: string): Color {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input) as Color;\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n","import Scope from './scope';\nimport {checkSubtype} from './types';\nimport ExpressionParsingError from './parsing_error';\nimport Literal from './definitions/literal';\nimport Assertion from './definitions/assertion';\nimport Coercion from './definitions/coercion';\nimport EvaluationContext from './evaluation_context';\n\nimport type {Expression, ExpressionRegistry} from './expression';\nimport type {Type} from './types';\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    registry: ExpressionRegistry;\n    path: Array<number>;\n    key: string;\n    scope: Scope;\n    errors: Array<ExpressionParsingError>;\n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n    expectedType: Type;\n\n    /**\n     * Internal delegate to inConstant function to avoid circular dependency to CompoundExpression\n     */\n    private _isConstant: (expression: Expression)=> boolean;\n\n    constructor(\n        registry: ExpressionRegistry,\n        isConstantFunc: (expression: Expression)=> boolean,\n        path: Array<number> = [],\n        expectedType?: Type | null,\n        scope: Scope = new Scope(),\n        errors: Array<ExpressionParsingError> = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n        this._isConstant = isConstantFunc;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr: unknown,\n        index?: number,\n        expectedType?: Type | null,\n        bindings?: Array<[string, Expression]>,\n        options: {\n            typeAnnotation?: 'assert' | 'coerce' | 'omit';\n        } = {}\n    ): Expression {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(\n        expr: unknown,\n        options: {\n            typeAnnotation?: 'assert' | 'coerce' | 'omit';\n        }\n    ): Expression {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation: 'assert' | 'coerce' | 'omit') {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error('Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].') as null;\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (expected.kind === 'padding' && (actual.kind === 'value' || actual.kind === 'number' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (expected.kind === 'variableAnchorOffsetCollection' && (actual.kind === 'value' || actual.kind === 'array')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && this._isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0) as null;\n        } else if (typeof expr === 'undefined') {\n            return this.error('\\'undefined\\' value invalid. Use null instead.') as null;\n        } else if (typeof expr === 'object') {\n            return this.error('Bare objects invalid. Use [\"literal\", {...}] instead.') as null;\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`) as null;\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index: number, expectedType?: Type | null, bindings?: Array<[string, Expression]>) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            this._isConstant,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error: string, ...keys: Array<number>) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ExpressionParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     * @param expected The expected type\n     * @param t The actual type\n     * @returns null if `t` is a subtype of `expected`; otherwise returns an error message\n     */\n    checkSubtype(expected: Type, t: Type): string {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n","import type {Type} from '../types';\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext  from '../evaluation_context';\n\nclass Let implements Expression {\n    type: Type;\n    bindings: Array<[string, Expression]>;\n    result: Expression;\n\n    constructor(bindings: Array<[string, Expression]>, result: Expression) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`) as null;\n\n        const bindings: Array<[string, Expression]> = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i) as null;\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error('Variable names must contain only alphanumeric characters or \\'_\\'.', i) as null;\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined() {\n        return this.result.outputDefined();\n    }\n}\n\nexport default Let;\n","import type {Type} from '../types';\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext  from '../evaluation_context';\n\nclass Var implements Expression {\n    type: Type;\n    name: string;\n    boundExpression: Expression;\n\n    constructor(name: string, boundExpression: Expression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error('\\'var\\' expression requires exactly one string literal argument.') as null;\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1) as null;\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined() {\n        return false;\n    }\n}\n\nexport default Var;\n","import {array, ValueType, NumberType} from '../types';\n\nimport RuntimeError from '../runtime_error';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type, ArrayType} from '../types';\nimport type {Value} from '../values';\n\nclass At implements Expression {\n    type: Type;\n    index: Expression;\n    input: Expression;\n\n    constructor(type: Type, index: Expression, input: Expression) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`) as null;\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t: ArrayType = (input.type as any);\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const index = (this.index.evaluate(ctx) as any as number);\n        const array = (this.input.evaluate(ctx) as any as Array<Value>);\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined() {\n        return false;\n    }\n}\n\nexport default At;\n","import {\n    BooleanType,\n    StringType,\n    ValueType,\n    NullType,\n    toString,\n    NumberType,\n    isValidType,\n    isValidNativeType,\n} from '../types';\nimport RuntimeError from '../runtime_error';\nimport {typeOf} from '../values';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nclass In implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n\n    constructor(needle: Expression, haystack: Expression) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`) as null;\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`) as null;\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const needle = (this.needle.evaluate(ctx) as any);\n        const haystack = (this.haystack.evaluate(ctx) as any);\n\n        if (!haystack) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined() {\n        return true;\n    }\n}\n\nexport default In;\n","import {\n    BooleanType,\n    StringType,\n    ValueType,\n    NullType,\n    toString,\n    NumberType,\n    isValidType,\n    isValidNativeType,\n} from '../types';\nimport RuntimeError from '../runtime_error';\nimport {typeOf} from '../values';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nclass IndexOf implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n    fromIndex: Expression;\n\n    constructor(needle: Expression, haystack: Expression, fromIndex?: Expression) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`) as null;\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`) as null;\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const needle = (this.needle.evaluate(ctx) as any);\n        const haystack = (this.haystack.evaluate(ctx) as any);\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx) as number);\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined() {\n        return false;\n    }\n}\n\nexport default IndexOf;\n","\nimport {typeOf} from '../values';\nimport {ValueType} from '../types';\n\nimport type {Type} from '../types';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\n\n// Map input label values to output expression index\ntype Cases = {\n    [k in number | string]: number;\n};\n\nclass Match implements Expression {\n    type: Type;\n    inputType: Type;\n\n    input: Expression;\n    cases: Cases;\n    outputs: Array<Expression>;\n    otherwise: Expression;\n\n    constructor(inputType: Type, outputType: Type, input: Expression, cases: Cases, outputs: Array<Expression>, otherwise: Expression) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`) as null;\n        if (args.length % 2 !== 1)\n            return context.error('Expected an even number of arguments.') as null;\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i] as unknown[];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.') as null;\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error('Branch labels must be numbers or strings.') as null;\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`) as null;\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error('Numeric branch labels must be integer values.') as null;\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.') as null;\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype(((inputType as any)), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType as any), (outputType as any), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const input = (this.input.evaluate(ctx) as any);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n}\n\nexport default Match;\n","\nimport {BooleanType} from '../types';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\ntype Branches = Array<[Expression, Expression]>;\n\nclass Case implements Expression {\n    type: Type;\n\n    branches: Branches;\n    otherwise: Expression;\n\n    constructor(type: Type, branches: Branches, otherwise: Expression) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`) as null;\n        if (args.length % 2 !== 0)\n            return context.error('Expected an odd number of arguments.') as null;\n\n        let outputType: Type;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        if (!outputType) throw new Error('Can\\'t infer output type');\n        return new Case((outputType as any), branches, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined(): boolean {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n}\n\nexport default Case;\n","import {\n    ValueType,\n    NumberType,\n    StringType,\n    array,\n    toString,\n    isValidType,\n    isValidNativeType,\n} from '../types';\nimport RuntimeError from '../runtime_error';\nimport {typeOf} from '../values';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nclass Slice implements Expression {\n    type: Type;\n    input: Expression;\n    beginIndex: Expression;\n    endIndex: Expression;\n\n    constructor(type: Type, input: Expression, beginIndex: Expression, endIndex?: Expression) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`) as null;\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`) as null;\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const input = (this.input.evaluate(ctx) as any);\n        const beginIndex = (this.beginIndex.evaluate(ctx) as number);\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx) as number);\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined() {\n        return false;\n    }\n}\n\nexport default Slice;\n","import RuntimeError from './runtime_error';\n\nimport type {Expression} from './expression';\n\nexport type Stops = Array<[number, Expression]>;\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops: Array<number>, input: number) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","import {NumberType} from '../types';\n\nimport {findStopLessThanOrEqualTo} from '../stops';\n\nimport type {Stops} from '../stops';\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nclass Step implements Expression {\n    type: Type;\n\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, input: Expression, stops: Stops) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`) as null;\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.') as null;\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = null;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey) as null;\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey) as null;\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = (this.input.evaluate(ctx) as any as number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined());\n    }\n}\n\nexport default Step;\n","'use strict';\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p1y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype = {\n    sampleCurveX: function (t) {\n        // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n        return ((this.ax * t + this.bx) * t + this.cx) * t;\n    },\n\n    sampleCurveY: function (t) {\n        return ((this.ay * t + this.by) * t + this.cy) * t;\n    },\n\n    sampleCurveDerivativeX: function (t) {\n        return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n    },\n\n    solveCurveX: function (x, epsilon) {\n        if (epsilon === undefined) epsilon = 1e-6;\n\n        if (x < 0.0) return 0.0;\n        if (x > 1.0) return 1.0;\n\n        var t = x;\n\n        // First try a few iterations of Newton's method - normally very fast.\n        for (var i = 0; i < 8; i++) {\n            var x2 = this.sampleCurveX(t) - x;\n            if (Math.abs(x2) < epsilon) return t;\n\n            var d2 = this.sampleCurveDerivativeX(t);\n            if (Math.abs(d2) < 1e-6) break;\n\n            t = t - x2 / d2;\n        }\n\n        // Fall back to the bisection method for reliability.\n        var t0 = 0.0;\n        var t1 = 1.0;\n        t = x;\n\n        for (i = 0; i < 20; i++) {\n            x2 = this.sampleCurveX(t);\n            if (Math.abs(x2 - x) < epsilon) break;\n\n            if (x > x2) {\n                t0 = t;\n            } else {\n                t1 = t;\n            }\n\n            t = (t1 - t0) * 0.5 + t0;\n        }\n\n        return t;\n    },\n\n    solve: function (x, epsilon) {\n        return this.sampleCurveY(this.solveCurveX(x, epsilon));\n    }\n};\n","import {hclToRgb, labToRgb} from './color_spaces';\nimport Color from './color';\nimport Padding from './padding';\nimport VariableAnchorOffsetCollection from './variable_anchor_offset_collection';\nimport RuntimeError from '../expression/runtime_error';\nimport {VariableAnchorOffsetCollectionSpecification} from '../types.g';\n\nexport type InterpolationColorSpace = 'rgb' | 'hcl' | 'lab';\n\n/**\n * Checks whether the specified color space is one of the supported interpolation color spaces.\n *\n * @param colorSpace Color space key to verify.\n * @returns `true` if the specified color space is one of the supported\n * interpolation color spaces, `false` otherwise\n */\nexport function isSupportedInterpolationColorSpace(colorSpace: string): colorSpace is InterpolationColorSpace {\n    return colorSpace === 'rgb' || colorSpace === 'hcl' || colorSpace === 'lab';\n}\n\n/**\n * @param interpolationType Interpolation type\n * @returns interpolation fn\n * @deprecated use `interpolate[type]` instead\n */\nexport const interpolateFactory = (interpolationType: 'number'|'color'|'array'|'padding'|'variableAnchorOffsetCollection') => {\n    switch (interpolationType) {\n        case 'number': return number;\n        case 'color': return color;\n        case 'array': return array;\n        case 'padding': return padding;\n        case 'variableAnchorOffsetCollection': return variableAnchorOffsetCollection;\n    }\n};\n\nfunction number(from: number, to: number, t: number): number {\n    return from + t * (to - from);\n}\n\nfunction color(from: Color, to: Color, t: number, spaceKey: InterpolationColorSpace = 'rgb'): Color {\n    switch (spaceKey) {\n        case 'rgb': {\n            const [r, g, b, alpha] = array(from.rgb, to.rgb, t);\n            return new Color(r, g, b, alpha, false);\n        }\n        case 'hcl': {\n            const [hue0, chroma0, light0, alphaF] = from.hcl;\n            const [hue1, chroma1, light1, alphaT] = to.hcl;\n\n            // https://github.com/gka/chroma.js/blob/cd1b3c0926c7a85cbdc3b1453b3a94006de91a92/src/interpolator/_hsx.js\n            let hue, chroma;\n\n            if (!isNaN(hue0) && !isNaN(hue1)) {\n                let dh = hue1 - hue0;\n                if (hue1 > hue0 && dh > 180) {\n                    dh -= 360;\n                } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                    dh += 360;\n                }\n                hue = hue0 + t * dh;\n            } else if (!isNaN(hue0)) {\n                hue = hue0;\n                if (light1 === 1 || light1 === 0) chroma = chroma0;\n            } else if (!isNaN(hue1)) {\n                hue = hue1;\n                if (light0 === 1 || light0 === 0) chroma = chroma1;\n            } else {\n                hue = NaN;\n            }\n\n            const [r, g, b, alpha] = hclToRgb([\n                hue,\n                chroma ?? number(chroma0, chroma1, t),\n                number(light0, light1, t),\n                number(alphaF, alphaT, t),\n            ]);\n            return new Color(r, g, b, alpha, false);\n        }\n        case 'lab': {\n            const [r, g, b, alpha] = labToRgb(array(from.lab, to.lab, t));\n            return new Color(r, g, b, alpha, false);\n        }\n    }\n}\n\nfunction array<T extends number[]>(from: T, to: T, t: number): T {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    }) as T;\n}\n\nfunction padding(from: Padding, to: Padding, t: number): Padding {\n    return new Padding(array(from.values, to.values, t));\n}\n\nfunction variableAnchorOffsetCollection(from: VariableAnchorOffsetCollection, to: VariableAnchorOffsetCollection, t: number): VariableAnchorOffsetCollection {\n    const fromValues = from.values;\n    const toValues = to.values;\n\n    if (fromValues.length !== toValues.length) {\n        throw new RuntimeError(`Cannot interpolate values of different length. from: ${from.toString()}, to: ${to.toString()}`);\n    }\n\n    const output: VariableAnchorOffsetCollectionSpecification = [];\n\n    for (let i = 0; i < fromValues.length; i += 2) {\n        // Anchor entries must match\n        if (fromValues[i] !== toValues[i]) {\n            throw new RuntimeError(`Cannot interpolate values containing mismatched anchors. from[${i}]: ${fromValues[i]}, to[${i}]: ${toValues[i]}`);\n        }\n        output.push(fromValues[i]);\n\n        // Interpolate the offset values for each anchor\n        const [fx, fy] = fromValues[i + 1] as [number, number];\n        const [tx, ty] = toValues[i + 1] as [number, number];\n        output.push([number(fx, tx, t), number(fy, ty, t)]);\n    }\n\n    return new VariableAnchorOffsetCollection(output);\n}\n\nconst interpolate = {\n    number,\n    color,\n    array,\n    padding,\n    variableAnchorOffsetCollection\n};\n\nexport default interpolate;\n","import UnitBezier from '@mapbox/unitbezier';\n\nimport interpolate from '../../util/interpolate';\nimport {array, ArrayType, ColorType, ColorTypeT, NumberType, NumberTypeT, PaddingType, PaddingTypeT, VariableAnchorOffsetCollectionType, VariableAnchorOffsetCollectionTypeT, toString, verifyType} from '../types';\nimport {findStopLessThanOrEqualTo} from '../stops';\n\nimport type {Stops} from '../stops';\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nexport type InterpolationType = {\n    name: 'linear';\n} | {\n    name: 'exponential';\n    base: number;\n} | {\n    name: 'cubic-bezier';\n    controlPoints: [number, number, number, number];\n};\ntype InterpolatedValueType = NumberTypeT | ColorTypeT | PaddingTypeT | VariableAnchorOffsetCollectionTypeT | ArrayType<NumberTypeT>;\n\nclass Interpolate implements Expression {\n    type: InterpolatedValueType;\n\n    operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab';\n    interpolation: InterpolationType;\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: InterpolatedValueType, operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab', interpolation: InterpolationType, input: Expression, stops: Stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation: InterpolationType, input: number, lower: number, upper: number) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error('Expected an interpolation type expression.', 1) as null;\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error('Exponential interpolation requires a numeric base.', 1, 1) as null;\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1) as null;\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints as any)\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0) as null;\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`) as null;\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error('Expected an even number of arguments.') as null;\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = null;\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey) as null;\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey) as null;\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (!verifyType(outputType, NumberType) &&\n            !verifyType(outputType, ColorType) &&\n            !verifyType(outputType, PaddingType) &&\n            !verifyType(outputType, VariableAnchorOffsetCollectionType) &&\n            !verifyType(outputType, array(NumberType))\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`) as null;\n        }\n\n        return new Interpolate(outputType, (operator as any), interpolation as InterpolationType, input as Expression, stops);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value: number = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        switch (this.operator) {\n            case 'interpolate':\n                return interpolate[this.type.kind](outputLower, outputUpper, t);\n            case 'interpolate-hcl':\n                return interpolate.color(outputLower, outputUpper, t, 'hcl');\n            case 'interpolate-lab':\n                return interpolate.color(outputLower, outputUpper, t, 'lab');\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined());\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","import {checkSubtype, ValueType} from '../types';\nimport ResolvedImage from '../types/resolved_image';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nclass Coalesce implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length < 2) {\n            return context.error('Expectected at least one argument.') as null;\n        }\n        let outputType: Type = null;\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        if (!outputType) throw new Error('No output type');\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType as any), parsedArgs);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        let result = null;\n        let argCount = 0;\n        let requestedImageName;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image name so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                if (!requestedImageName) {\n                    requestedImageName = result.name;\n                }\n                result = null;\n                if (argCount === this.args.length) {\n                    result = requestedImageName;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n}\n\nexport default Coalesce;\n","import {toString, ValueType, BooleanType, CollatorType} from '../types';\nimport Assertion from './assertion';\nimport {typeOf} from '../values';\nimport RuntimeError from '../runtime_error';\n\nimport type {Expression} from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type {Type} from '../types';\n\ntype ComparisonOperator = '==' | '!=' | '<' | '>' | '<=' | '>=';\n\nfunction isComparableType(op: ComparisonOperator, type: Type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx, a, b) { return a === b; }\nfunction neq(ctx, a, b) { return a !== b; }\nfunction lt(ctx, a, b) { return a < b; }\nfunction gt(ctx, a, b) { return a > b; }\nfunction lteq(ctx, a, b) { return a <= b; }\nfunction gteq(ctx, a, b) { return a >= b; }\n\nfunction eqCollate(ctx, a, b, c) { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx, a, b, c) { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx, a, b, c) { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx, a, b, c) { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx, a, b, c) { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx, a, b, c) { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op: ComparisonOperator, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison implements Expression {\n        type: Type;\n        lhs: Expression;\n        rhs: Expression;\n        collator: Expression;\n        hasUntypedArgument: boolean;\n\n        constructor(lhs: Expression, rhs: Expression, collator?: Expression | null) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error('Expected two or three arguments.') as null;\n\n            const op: ComparisonOperator = (args[0] as any);\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`) as null;\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`) as null;\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`) as null;\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error('Cannot use collator to compare non-string types.') as null;\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx: EvaluationContext) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn: (_: Expression) => void) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined(): boolean {\n            return true;\n        }\n    };\n}\n\nexport const Equals = makeComparison('==', eq, eqCollate);\nexport const NotEquals = makeComparison('!=', neq, neqCollate);\nexport const LessThan = makeComparison('<', lt, ltCollate);\nexport const GreaterThan = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n","import {StringType, BooleanType, CollatorType} from '../types';\nimport Collator from '../types/collator';\n\nimport type {Expression} from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type {Type} from '../types';\n\nexport default class CollatorExpression implements Expression {\n    type: Type;\n    caseSensitive: Expression;\n    diacriticSensitive: Expression;\n    locale: Expression | null;\n\n    constructor(caseSensitive: Expression, diacriticSensitive: Expression, locale: Expression | null) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length !== 2)\n            return context.error('Expected one argument.') as null;\n\n        const options = (args[1] as any);\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('Collator options argument must be an object.') as null;\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n}\n","import {StringType, NumberType} from '../types';\n\nimport type {Expression} from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type {Type} from '../types';\n\ndeclare let Intl: {\n    NumberFormat: {\n        new (...args: any): Intl$NumberFormat;\n    };\n};\n\ndeclare class Intl$NumberFormat {\n    constructor(locales?: string | string[], options?: NumberFormatOptions);\n    format(a: number): string;\n    resolvedOptions(): any;\n}\n\ntype NumberFormatOptions = {\n    style?: 'decimal' | 'currency' | 'percent';\n    currency?: null | string;\n    minimumFractionDigits?: null | string;\n    maximumFractionDigits?: null | string;\n};\n\nexport default class NumberFormat implements Expression {\n    type: Type;\n    number: Expression;\n    locale: Expression | null;   // BCP 47 language tag\n    currency: Expression | null; // ISO 4217 currency code, required if style=currency\n    minFractionDigits: Expression | null; // Default 0\n    maxFractionDigits: Expression | null; // Default 3\n\n    constructor(number: Expression,\n        locale: Expression | null,\n        currency: Expression | null,\n        minFractionDigits: Expression | null,\n        maxFractionDigits: Expression | null) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length !== 3)\n            return context.error('Expected two arguments.') as null;\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2] as any);\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error('NumberFormat options argument must be an object.') as null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style: this.currency ? 'currency' : 'decimal',\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined() {\n        return false;\n    }\n}\n","import {\n    NumberType,\n    ValueType,\n    FormattedType,\n    array,\n    StringType,\n    ColorType,\n    ResolvedImageType,\n} from '../types';\nimport Formatted, {FormattedSection} from '../types/formatted';\nimport {toString, typeOf} from '../values';\n\nimport type {Expression} from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type {Type} from '../types';\n\ntype FormattedSectionExpression = {\n    // Content of a section may be Image expression or other\n    // type of expression that is coercable to 'string'.\n    content: Expression;\n    scale: Expression | null;\n    font: Expression | null;\n    textColor: Expression | null;\n};\n\nexport default class FormatExpression implements Expression {\n    type: Type;\n    sections: Array<FormattedSectionExpression>;\n\n    constructor(sections: Array<FormattedSectionExpression>) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length < 2) {\n            return context.error('Expected at least one argument.') as null;\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error('First argument must be an image or text section.') as null;\n        }\n\n        const sections: Array<FormattedSectionExpression> = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i] as any);\n\n            if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error('Formatted text type must be \\'string\\', \\'value\\', \\'image\\' or \\'null\\'.') as null;\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                toString(evaluatedContent),\n                null,\n                section.scale ? section.scale.evaluate(ctx) : null,\n                section.font ? section.font.evaluate(ctx).join(',') : null,\n                section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n}\n","import {ResolvedImageType, StringType} from '../types';\nimport ResolvedImage from '../types/resolved_image';\n\nimport type {Expression} from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type {Type} from '../types';\n\nexport default class ImageExpression implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length !== 2) {\n            return context.error('Expected two arguments.') as null;\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error('No image name provided.') as null;\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n\n        return value;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n    }\n\n    outputDefined() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n}\n","import {NumberType, toString} from '../types';\n\nimport {typeOf} from '../values';\nimport RuntimeError from '../runtime_error';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nclass Length implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`) as null;\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`) as null;\n\n        return new Length(input);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n    }\n\n    outputDefined() {\n        return false;\n    }\n}\n\nexport default Length;\n","import {ICanonicalTileID} from '../tiles_and_coordinates';\n\n// minX, minY, maxX, maxY\nexport type BBox = [number, number, number, number];\n\nexport const EXTENT = 8192;\n\nexport function getTileCoordinates(p: GeoJSON.Position, canonical: ICanonicalTileID): [number, number] {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nexport function getLngLatFromTileCoord(coord: [number, number], canonical: ICanonicalTileID): GeoJSON.Position {\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    const x = (coord[0] / EXTENT + canonical.x) / tilesAtZoom;\n    const y = (coord[1] / EXTENT + canonical.y) / tilesAtZoom;\n    return [lngFromMercatorXfromLng(x), latFromMercatorY(y)];\n}\n\nfunction mercatorXfromLng(lng: number) {\n    return (180 + lng) / 360;\n}\n\nfunction lngFromMercatorXfromLng(mercatorX: number) {\n    return mercatorX * 360 - 180;\n}\n\nfunction mercatorYfromLat(lat: number) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction latFromMercatorY(mercatorY: number) {\n    return 360 / Math.PI * Math.atan(Math.exp((180 - mercatorY * 360) * Math.PI / 180)) - 90;\n}\n\nexport function updateBBox(bbox: BBox, coord: GeoJSON.Position) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nexport function boxWithinBox(bbox1: BBox, bbox2: BBox) {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nexport function rayIntersect(p: [number, number], p1: [number, number], p2: [number, number]): boolean {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\nfunction pointOnBoundary(p: [number, number], p1: [number, number], p2: [number, number]): boolean {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\n// a, b are end points for line segment1, c and d are end points for line segment2\nexport function segmentIntersectSegment(a: [number, number], b: [number, number], c: [number, number], d: [number, number]) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP: [number, number] = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ: [number, number] = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nexport function lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (segmentIntersectSegment(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n// ray casting algorithm for detecting if point is in polygon\nexport function pointWithinPolygon(point: [number, number], rings: [number, number][][], trueIfOnBoundary = false) {\n    let inside = false;\n    for (const ring of rings) {\n        for (let j = 0; j < ring.length - 1; j++) {\n            if (pointOnBoundary(point, ring[j], ring[j + 1])) return trueIfOnBoundary;\n            if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nexport function pointWithinPolygons(point: [number, number], polygons: [number, number][][][]) {\n    for (const polygon of polygons) {\n        if (pointWithinPolygon(point, polygon)) return true;\n    }\n    return false;\n}\n\nexport function lineStringWithinPolygon(line: [number, number][], polygon: [number, number][][]) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (const point of line) {\n        if (!pointWithinPolygon(point, polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport function lineStringWithinPolygons(line: [number, number][], polygons: [number, number][][][]) {\n    for (const polygon of polygons) {\n        if (lineStringWithinPolygon(line, polygon)) return true;\n    }\n    return false;\n}\n\nfunction perp(v1: [number, number], v2: [number, number]) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction  twoSided(p1: [number, number], p2: [number, number], q1: [number, number], q2: [number, number]) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 =  (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n","import {isValue} from '../values';\nimport type {Type} from '../types';\nimport {BooleanType} from '../types';\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport {ICanonicalTileID} from '../../tiles_and_coordinates';\nimport {BBox, EXTENT, boxWithinBox, getTileCoordinates, lineStringWithinPolygon, lineStringWithinPolygons, pointWithinPolygon, pointWithinPolygons, updateBBox} from '../../util/geometry_util';\nimport {Point2D} from '../../point2d';\n\ntype GeoJSONPolygons = GeoJSON.Polygon | GeoJSON.MultiPolygon;\n\nfunction getTilePolygon(coordinates: GeoJSON.Position[][], bbox: BBox, canonical: ICanonicalTileID) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates: GeoJSON.Position[][][], bbox: BBox, canonical: ICanonicalTileID) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p: GeoJSON.Position, bbox: BBox, polyBBox: BBox, worldSize: number) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox: BBox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry: Point2D[][], pointBBox: BBox, polyBBox: BBox, canonical: ICanonicalTileID): [number, number][] {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints: [number, number][] = [];\n    for (const points of geometry) {\n        for (const point of points) {\n            const p: [number, number] = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry: Point2D[][], lineBBox: BBox, polyBBox: BBox, canonical: ICanonicalTileID): [number, number][][] {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines: [number, number][][] = [];\n    for (const line of geometry) {\n        const tileLine:[number, number][] = [];\n        for (const point of line) {\n            const p: [number, number] = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx: EvaluationContext, polygonGeometry: GeoJSONPolygons) {\n    const pointBBox: BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox: BBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx: EvaluationContext, polygonGeometry: GeoJSONPolygons) {\n    const lineBBox: BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox: BBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within implements Expression {\n    type: Type;\n    geojson: GeoJSON.GeoJSON;\n    geometries: GeoJSONPolygons;\n\n    constructor(geojson: GeoJSON.GeoJSON, geometries: GeoJSONPolygons) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`) as null;\n        if (isValue(args[1])) {\n            const geojson = (args[1] as any);\n            if (geojson.type === 'FeatureCollection') {\n                const polygonsCoords: GeoJSON.Position[][][] = [];\n                for (const polygon of geojson.features) {\n                    const {type, coordinates} = polygon.geometry;\n                    if (type === 'Polygon') {\n                        polygonsCoords.push(coordinates);\n                    }\n                    if (type === 'MultiPolygon') {\n                        polygonsCoords.push(...coordinates);\n                    }\n                }\n                if (polygonsCoords.length) {\n                    const multipolygonWrapper: GeoJSON.MultiPolygon = {\n                        type: 'MultiPolygon',\n                        coordinates: polygonsCoords\n                    };\n                    return new Within(geojson, multipolygonWrapper);\n                }\n\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error('\\'within\\' expression requires valid geojson object that contains polygon geometry type.') as null;\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n}\n\nexport default Within;\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\nimport {Point2D} from '../point2d';\n\nexport type RingWithArea<T extends Point2D> = T[] & { area?: number };\n\n/**\n * Classifies an array of rings into polygons with outer rings and holes\n * @param rings - the rings to classify\n * @param maxRings - the maximum number of rings to include in a polygon, use 0 to include all rings\n * @returns an array of polygons with internal rings as holes\n */\nexport function classifyRings<T extends Point2D>(rings: RingWithArea<T>[], maxRings?: number): RingWithArea<T>[][] {\n    const len = rings.length;\n\n    if (len <= 1) return [rings];\n\n    const polygons: T[][][] = [];\n    let polygon: T[][];\n    let ccw: boolean | undefined;\n\n    for (const ring of rings) {\n        const area = calculateSignedArea(ring);\n        if (area === 0) continue;\n\n        ring.area = Math.abs(area);\n\n        if (ccw === undefined) ccw = area < 0;\n\n        if (ccw === area < 0) {\n            if (polygon) polygons.push(polygon);\n            polygon = [ring];\n        } else {\n            polygon.push(ring);\n        }\n    }\n    if (polygon) polygons.push(polygon);\n\n    // Earcut performance degrades with the # of rings in a polygon. For this\n    // reason, we limit strip out all but the `maxRings` largest rings.\n    if (maxRings > 1) {\n        for (let j = 0; j < polygons.length; j++) {\n            if (polygons[j].length <= maxRings) continue;\n            quickselect(polygons[j], maxRings, 1, polygons[j].length - 1, compareAreas);\n            polygons[j] = polygons[j].slice(0, maxRings);\n        }\n    }\n\n    return polygons;\n}\n\nfunction compareAreas(a: {area: number}, b: {area: number}) {\n    return b.area - a.area;\n}\n\n/**\n * Returns the signed area for the polygon ring.  Positive areas are exterior rings and\n * have a clockwise winding.  Negative areas are interior rings and have a counter clockwise\n * ordering.\n *\n * @param ring - Exterior or interior ring\n * @returns Signed area\n */\nfunction calculateSignedArea(ring: Point2D[]): number {\n    let sum = 0;\n    for (let i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n","// This is taken from https://github.com/mapbox/cheap-ruler/ in order to take only the relevant parts\n\n// Values that define WGS84 ellipsoid model of the Earth\nconst RE = 6378.137; // equatorial radius\nconst FE = 1 / 298.257223563; // flattening\n\nconst E2 = FE * (2 - FE);\nconst RAD = Math.PI / 180;\n\nexport default class CheapRuler {\n    private kx: number;\n    private ky: number;\n\n    constructor(lat: number) {\n\n        // Curvature formulas from https://en.wikipedia.org/wiki/Earth_radius#Meridional\n        const m = RAD * RE * 1000;\n        const coslat = Math.cos(lat * RAD);\n        const w2 = 1 / (1 - E2 * (1 - coslat * coslat));\n        const w = Math.sqrt(w2);\n\n        // multipliers for converting longitude and latitude degrees into distance\n        this.kx = m * w * coslat;        // based on normal radius of curvature\n        this.ky = m * w * w2 * (1 - E2); // based on meridonal radius of curvature\n    }\n\n    /**\n     * Given two points of the form [longitude, latitude], returns the distance.\n     *\n     * @param a - point [longitude, latitude]\n     * @param b - point [longitude, latitude]\n     * @returns distance\n     * @example\n     * const distance = ruler.distance([30.5, 50.5], [30.51, 50.49]);\n     * //=distance\n     */\n    public distance(a: [number, number], b: [number, number]) {\n        const dx = this.wrap(a[0] - b[0]) * this.kx;\n        const dy = (a[1] - b[1]) * this.ky;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    /**\n     * Returns an object of the form {point, index, t}, where point is closest point on the line\n     * from the given point, index is the start index of the segment with the closest point,\n     * and t is a parameter from 0 to 1 that indicates where the closest point is on that segment.\n     *\n     * @param line - an array of points that form the line\n     * @param p - point [longitude, latitude]\n     * @returns the nearest point, its index in the array and the proportion along the line\n     * @example\n     * const point = ruler.pointOnLine(line, [-67.04, 50.5]).point;\n     * //=point\n     */\n    public pointOnLine(line: [number, number][], p: [number, number]) {\n        let minDist = Infinity;\n        let minX: number, minY: number, minI: number, minT: number;\n\n        for (let i = 0; i < line.length - 1; i++) {\n\n            let x = line[i][0];\n            let y = line[i][1];\n            let dx = this.wrap(line[i + 1][0] - x) * this.kx;\n            let dy = (line[i + 1][1] - y) * this.ky;\n            let t = 0;\n\n            if (dx !== 0 || dy !== 0) {\n                t = (this.wrap(p[0] - x) * this.kx * dx + (p[1] - y) * this.ky * dy) / (dx * dx + dy * dy);\n\n                if (t > 1) {\n                    x = line[i + 1][0];\n                    y = line[i + 1][1];\n\n                } else if (t > 0) {\n                    x += (dx / this.kx) * t;\n                    y += (dy / this.ky) * t;\n                }\n            }\n\n            dx = this.wrap(p[0] - x) * this.kx;\n            dy = (p[1] - y) * this.ky;\n\n            const sqDist = dx * dx + dy * dy;\n            if (sqDist < minDist) {\n                minDist = sqDist;\n                minX = x;\n                minY = y;\n                minI = i;\n                minT = t;\n            }\n        }\n\n        return {\n            point: [minX, minY] as [number, number],\n            index: minI,\n            t: Math.max(0, Math.min(1, minT))\n        };\n    }\n\n    private wrap(deg: number) {\n        while (deg < -180) deg += 360;\n        while (deg > 180) deg -= 360;\n        return deg;\n    }\n}\n","import TinyQueue from 'tinyqueue';\nimport {Expression} from '../expression';\nimport ParsingContext from '../parsing_context';\nimport {NumberType, Type} from '../types';\nimport {isValue} from '../values';\nimport EvaluationContext from '../evaluation_context';\nimport {BBox, boxWithinBox, getLngLatFromTileCoord, pointWithinPolygon, segmentIntersectSegment, updateBBox} from '../../util/geometry_util';\nimport {classifyRings} from '../../util/classify_rings';\nimport CheapRuler from '../../util/cheap_ruler';\n\ntype SimpleGeometry = GeoJSON.Polygon | GeoJSON.LineString | GeoJSON.Point;\n\nconst MinPointsSize = 100;\nconst MinLinePointsSize = 50;\n\ntype IndexRange = [number, number];\ntype DistPair = [number, IndexRange, IndexRange];\n\nfunction compareDistPair(a: DistPair, b: DistPair): number {\n    return b[0] - a[0];\n}\n\nfunction getRangeSize(range: IndexRange) {\n    return range[1] - range[0] + 1;\n}\n\nfunction isRangeSafe(range: IndexRange, threshold: number): boolean {\n    return range[1] >= range[0] && range[1] < threshold;\n}\n\nfunction splitRange(range: IndexRange, isLine: boolean): [IndexRange, IndexRange] {\n    if (range[0] > range[1]) {\n        return [null, null];\n    }\n    const size = getRangeSize(range);\n    if (isLine) {\n        if (size === 2) {\n            return [range, null];\n        }\n        const size1 = Math.floor(size / 2);\n        return [[range[0], range[0] + size1],\n            [range[0] + size1, range[1]]];\n    }\n    if (size === 1) {\n        return [range, null];\n    }\n    const size1 = Math.floor(size / 2) - 1;\n    return [[range[0], range[0] + size1],\n        [range[0] + size1 + 1, range[1]]];\n}\n\nfunction getBBox(coords: [number, number][], range: IndexRange): BBox {\n    if (!isRangeSafe(range, coords.length)) {\n        return [Infinity, Infinity, -Infinity, -Infinity];\n    }\n\n    const bbox: BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (let i = range[0]; i <= range[1]; ++i) {\n        updateBBox(bbox, coords[i]);\n    }\n    return bbox;\n}\n\nfunction getPolygonBBox(polygon: [number, number][][]): BBox {\n    const bbox: BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (const ring of polygon) {\n        for (const coord of ring) {\n            updateBBox(bbox, coord);\n        }\n    }\n    return bbox;\n}\n\nfunction isValidBBox(bbox: BBox): boolean {\n    return bbox[0] !== -Infinity && bbox[1] !== -Infinity && bbox[2] !== Infinity && bbox[3] !== Infinity;\n}\n\n// Calculate the distance between two bounding boxes.\n// Calculate the delta in x and y direction, and use two fake points {0.0, 0.0}\n// and {dx, dy} to calculate the distance. Distance will be 0.0 if bounding box are overlapping.\nfunction bboxToBBoxDistance(bbox1: BBox, bbox2: BBox, ruler: CheapRuler): number {\n    if (!isValidBBox(bbox1) || !isValidBBox(bbox2)) {\n        return NaN;\n    }\n    let dx = 0.0;\n    let dy = 0.0;\n    // bbox1 in left side\n    if (bbox1[2] < bbox2[0]) {\n        dx = bbox2[0] - bbox1[2];\n    }\n    // bbox1 in right side\n    if (bbox1[0] > bbox2[2]) {\n        dx = bbox1[0] - bbox2[2];\n    }\n    // bbox1 in above side\n    if (bbox1[1] > bbox2[3]) {\n        dy = bbox1[1] - bbox2[3];\n    }\n    // bbox1 in down side\n    if (bbox1[3] < bbox2[1]) {\n        dy = bbox2[1] - bbox1[3];\n    }\n    return ruler.distance([0.0, 0.0], [dx, dy]);\n}\n\nfunction pointToLineDistance(point: [number, number], line: [number, number][], ruler: CheapRuler): number {\n    const nearestPoint = ruler.pointOnLine(line, point);\n    return ruler.distance(point, nearestPoint.point);\n}\n\nfunction segmentToSegmentDistance(p1: [number, number], p2: [number, number],\n    q1: [number, number], q2: [number, number], ruler: CheapRuler): number {\n    const dist1 = Math.min(pointToLineDistance(p1, [q1, q2], ruler), pointToLineDistance(p2, [q1, q2], ruler));\n    const dist2 = Math.min(pointToLineDistance(q1, [p1, p2], ruler), pointToLineDistance(q2, [p1, p2], ruler));\n    return Math.min(dist1, dist2);\n}\n\nfunction lineToLineDistance(line1: [number, number][],\n    range1: IndexRange,\n    line2: [number, number][],\n    range2: IndexRange,\n    ruler: CheapRuler): number {\n    const rangeSafe = isRangeSafe(range1, line1.length) && isRangeSafe(range2, line2.length);\n    if (!rangeSafe) {\n        return Infinity;\n    }\n\n    let dist = Infinity;\n    for (let i = range1[0]; i < range1[1]; ++i) {\n        const p1 = line1[i];\n        const p2 = line1[i + 1];\n        for (let j = range2[0]; j < range2[1]; ++j) {\n            const q1 = line2[j];\n            const q2 = line2[j + 1];\n            if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                return 0.0;\n            }\n            dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n        }\n    }\n    return dist;\n}\n\nfunction pointsToPointsDistance(points1: [number, number][],\n    range1: IndexRange,\n    points2: [number, number][],\n    range2: IndexRange,\n    ruler: CheapRuler): number {\n    const rangeSafe = isRangeSafe(range1, points1.length) && isRangeSafe(range2, points2.length);\n    if (!rangeSafe) {\n        return NaN;\n    }\n\n    let dist = Infinity;\n    for (let i = range1[0]; i <= range1[1]; ++i) {\n        for (let j = range2[0]; j <= range2[1]; ++j) {\n            dist = Math.min(dist, ruler.distance(points1[i], points2[j]));\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n    }\n    return dist;\n}\n\nfunction pointToPolygonDistance(point: [number, number],\n    polygon: [number, number][][],\n    ruler: CheapRuler): number {\n    if (pointWithinPolygon(point, polygon, true)) {\n        return 0.0;\n    }\n    let dist = Infinity;\n    for (const ring of polygon) {\n        const front = ring[0];\n        const back = ring[ring.length - 1];\n        if (front !== back) {\n            dist = Math.min(dist, pointToLineDistance(point, [back, front], ruler));\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n        const nearestPoint = ruler.pointOnLine(ring, point);\n        dist = Math.min(dist, ruler.distance(point, nearestPoint.point));\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\n\nfunction lineToPolygonDistance(line: [number, number][],\n    range: IndexRange,\n    polygon: [number, number][][],\n    ruler: CheapRuler): number {\n    if (!isRangeSafe(range, line.length)) {\n        return NaN;\n    }\n\n    for (let i = range[0]; i <= range[1]; ++i) {\n        if (pointWithinPolygon(line[i], polygon, true)) {\n            return 0.0;\n        }\n    }\n\n    let dist = Infinity;\n    for (let i = range[0]; i < range[1]; ++i) {\n        const p1 = line[i];\n        const p2 = line[i + 1];\n        for (const ring of polygon) {\n            for (let j = 0, len = ring.length, k = len - 1; j < len; k = j++) {\n                const q1 = ring[k];\n                const q2 = ring[j];\n                if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                    return 0.0;\n                }\n                dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n            }\n        }\n    }\n    return dist;\n}\n\nfunction polygonIntersect(poly1: [number, number][][], poly2: [number, number][][]): boolean {\n    for (const ring of poly1) {\n        for (const point of ring) {\n            if (pointWithinPolygon(point, poly2, true)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction polygonToPolygonDistance(polygon1: [number, number][][],\n    polygon2: [number, number][][],\n    ruler,\n    currentMiniDist = Infinity): number {\n    const bbox1 = getPolygonBBox(polygon1);\n    const bbox2 = getPolygonBBox(polygon2);\n    if (currentMiniDist !== Infinity && bboxToBBoxDistance(bbox1, bbox2, ruler) >= currentMiniDist) {\n        return currentMiniDist;\n    }\n\n    if (boxWithinBox(bbox1, bbox2)) {\n        if (polygonIntersect(polygon1, polygon2)) {\n            return 0.0;\n        }\n    } else if (polygonIntersect(polygon2, polygon1)) {\n        return 0.0;\n    }\n\n    let dist = Infinity;\n    for (const ring1 of polygon1) {\n        for (let i = 0, len1 = ring1.length, l = len1 - 1; i < len1; l = i++) {\n            const p1 = ring1[l];\n            const p2 = ring1[i];\n            for (const ring2 of polygon2) {\n                for (let j = 0, len2 = ring2.length, k = len2 - 1; j < len2; k = j++) {\n                    const q1 = ring2[k];\n                    const q2 = ring2[j];\n                    if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                        return 0.0;\n                    }\n                    dist = Math.min(dist, segmentToSegmentDistance(p1, p2, q1, q2, ruler));\n                }\n            }\n        }\n    }\n    return dist;\n}\n\nfunction updateQueue(distQueue: TinyQueue<DistPair>, miniDist: number, ruler: CheapRuler, points: [number, number][], polyBBox: BBox, rangeA?: IndexRange) {\n    if (!rangeA) {\n        return;\n    }\n    const tempDist = bboxToBBoxDistance(getBBox(points, rangeA), polyBBox, ruler);\n    // Insert new pair to the queue if the bbox distance is less than\n    // miniDist, The pair with biggest distance will be at the top\n    if (tempDist < miniDist) {\n        distQueue.push([tempDist, rangeA, [0, 0]]);\n    }\n}\n\nfunction updateQueueTwoSets(distQueue:  TinyQueue<DistPair>, miniDist: number, ruler: CheapRuler,\n    pointSet1: [number, number][], pointSet2: [number, number][], range1?: IndexRange, range2?: IndexRange) {\n    if (!range1 || !range2) {\n        return;\n    }\n    const tempDist = bboxToBBoxDistance(\n        getBBox(pointSet1, range1), getBBox(pointSet2, range2), ruler);\n    // Insert new pair to the queue if the bbox distance is less than\n    // miniDist, The pair with biggest distance will be at the top\n    if (tempDist < miniDist) {\n        distQueue.push([tempDist, range1, range2]);\n    }\n}\n\n// Divide and conquer, the time complexity is O(n*lgn), faster than Brute force\n// O(n*n) Most of the time, use index for in-place processing.\nfunction pointsToPolygonDistance(points: [number, number][],\n    isLine: boolean,\n    polygon: [number, number][][],\n    ruler: CheapRuler,\n    currentMiniDist = Infinity) {\n    let miniDist = Math.min(ruler.distance(points[0], polygon[0][0]), currentMiniDist);\n    if (miniDist === 0.0) {\n        return miniDist;\n    }\n\n    const distQueue = new TinyQueue<DistPair>([[0, [0, points.length - 1], [0, 0]]], compareDistPair);\n\n    const polyBBox = getPolygonBBox(polygon);\n    while (distQueue.length > 0) {\n        const distPair = distQueue.pop();\n        if (distPair[0] >= miniDist) {\n            continue;\n        }\n\n        const range = distPair[1];\n\n        // In case the set size are relatively small, we could use brute-force directly\n        const threshold = isLine ? MinLinePointsSize : MinPointsSize;\n        if (getRangeSize(range) <= threshold) {\n            if (!isRangeSafe(range, points.length)) {\n                return NaN;\n            }\n            if (isLine) {\n                const tempDist = lineToPolygonDistance(points, range, polygon, ruler);\n                if (isNaN(tempDist) || tempDist === 0.0) {\n                    return tempDist;\n                }\n                miniDist = Math.min(miniDist, tempDist);\n            } else {\n                for (let i = range[0]; i <= range[1]; ++i) {\n                    const tempDist = pointToPolygonDistance(points[i], polygon, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return 0.0;\n                    }\n                }\n            }\n        } else {\n            const newRangesA = splitRange(range, isLine);\n\n            updateQueue(distQueue, miniDist, ruler, points, polyBBox, newRangesA[0]);\n            updateQueue(distQueue, miniDist, ruler, points, polyBBox, newRangesA[1]);\n        }\n    }\n    return miniDist;\n}\n\nfunction pointSetToPointSetDistance(pointSet1: [number, number][],\n    isLine1: boolean,\n    pointSet2: [number, number][],\n    isLine2: boolean,\n    ruler: CheapRuler,\n    currentMiniDist = Infinity): number {\n    let miniDist = Math.min(currentMiniDist, ruler.distance(pointSet1[0], pointSet2[0]));\n    if (miniDist === 0.0) {\n        return miniDist;\n    }\n\n    const distQueue = new TinyQueue<DistPair>([[0, [0, pointSet1.length - 1], [0, pointSet2.length - 1]]], compareDistPair);\n\n    while (distQueue.length > 0) {\n        const distPair = distQueue.pop();\n        if (distPair[0] >= miniDist) {\n            continue;\n        }\n\n        const rangeA = distPair[1];\n        const rangeB = distPair[2];\n        const threshold1 = isLine1 ? MinLinePointsSize : MinPointsSize;\n        const threshold2 = isLine2 ? MinLinePointsSize : MinPointsSize;\n\n        // In case the set size are relatively small, we could use brute-force directly\n        if (getRangeSize(rangeA) <= threshold1 && getRangeSize(rangeB) <= threshold2) {\n            if (!isRangeSafe(rangeA, pointSet1.length) && isRangeSafe(rangeB, pointSet2.length)) {\n                return NaN;\n            }\n            let tempDist: number;\n            if (isLine1 && isLine2) {\n                tempDist = lineToLineDistance(pointSet1, rangeA, pointSet2, rangeB, ruler);\n                miniDist = Math.min(miniDist, tempDist);\n            } else if (isLine1 && !isLine2) {\n                const sublibe = pointSet1.slice(rangeA[0], rangeA[1] + 1);\n                for (let i = rangeB[0]; i <= rangeB[1]; ++i) {\n                    tempDist = pointToLineDistance(pointSet2[i], sublibe, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return miniDist;\n                    }\n                }\n            } else if (!isLine1 && isLine2) {\n                const sublibe = pointSet2.slice(rangeB[0], rangeB[1] + 1);\n                for (let i = rangeA[0]; i <= rangeA[1]; ++i) {\n                    tempDist = pointToLineDistance(pointSet1[i], sublibe, ruler);\n                    miniDist = Math.min(miniDist, tempDist);\n                    if (miniDist === 0.0) {\n                        return miniDist;\n                    }\n                }\n            } else {\n                tempDist = pointsToPointsDistance(pointSet1, rangeA, pointSet2, rangeB, ruler);\n                miniDist = Math.min(miniDist, tempDist);\n            }\n        } else {\n            const newRangesA = splitRange(rangeA, isLine1);\n            const newRangesB = splitRange(rangeB, isLine2);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[0]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[1]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[0]);\n            updateQueueTwoSets(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[1]);\n        }\n    }\n    return miniDist;\n}\n\nfunction pointToGeometryDistance(ctx: EvaluationContext, geometries: SimpleGeometry[]) {\n    const tilePoints = ctx.geometry();\n    const pointPosition = tilePoints.flat().map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical) as [number, number]);\n    if (tilePoints.length === 0) {\n        return NaN;\n    }\n    const ruler = new CheapRuler(pointPosition[0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        switch (geometry.type) {\n            case 'Point':\n                dist = Math.min(dist, pointSetToPointSetDistance(pointPosition, false, [geometry.coordinates as [number, number]], false, ruler, dist));\n                break;\n            case 'LineString':\n                dist = Math.min(dist, pointSetToPointSetDistance(pointPosition, false, geometry.coordinates as [number, number][], true, ruler, dist));\n                break;\n            case 'Polygon':\n                dist = Math.min(dist, pointsToPolygonDistance(pointPosition, false, geometry.coordinates as [number, number][][], ruler, dist));\n                break;\n        }\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\n\nfunction lineStringToGeometryDistance(ctx: EvaluationContext, geometries: SimpleGeometry[]) {\n    const tileLine = ctx.geometry();\n    const linePositions = tileLine.flat().map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical) as [number, number]);\n    if (tileLine.length === 0) {\n        return NaN;\n    }\n    const ruler = new CheapRuler(linePositions[0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        switch (geometry.type) {\n            case 'Point':\n                dist = Math.min(dist, pointSetToPointSetDistance(linePositions, true, [geometry.coordinates as [number, number]], false, ruler, dist));\n                break;\n            case 'LineString':\n                dist = Math.min(dist, pointSetToPointSetDistance(linePositions, true, geometry.coordinates as [number, number][], true, ruler, dist));\n                break;\n            case 'Polygon':\n                dist = Math.min(dist, pointsToPolygonDistance(linePositions, true, geometry.coordinates as [number, number][][], ruler, dist));\n                break;\n        }\n        if (dist === 0.0) {\n            return dist;\n        }\n    }\n    return dist;\n}\n\nfunction polygonToGeometryDistance(ctx: EvaluationContext, geometries: SimpleGeometry[]) {\n    const tilePolygon = ctx.geometry();\n    if (tilePolygon.length === 0 || tilePolygon[0].length === 0) {\n        return NaN;\n    }\n    const polygons = classifyRings(tilePolygon, 0).map(polygon => {\n        return polygon.map(ring => {\n            return ring.map(p => getLngLatFromTileCoord([p.x, p.y], ctx.canonical) as [number, number]);\n        });\n    });\n    const ruler = new CheapRuler(polygons[0][0][0][1]);\n    let dist = Infinity;\n    for (const geometry of geometries) {\n        for (const polygon of polygons) {\n            switch (geometry.type) {\n                case 'Point':\n                    dist = Math.min(dist, pointsToPolygonDistance([geometry.coordinates as [number, number]], false, polygon, ruler, dist));\n                    break;\n                case 'LineString':\n                    dist = Math.min(dist, pointsToPolygonDistance(geometry.coordinates as [number, number][], true, polygon, ruler, dist));\n                    break;\n                case 'Polygon':\n                    dist = Math.min(dist, polygonToPolygonDistance(polygon, geometry.coordinates as [number, number][][], ruler, dist));\n                    break;\n            }\n            if (dist === 0.0) {\n                return dist;\n            }\n        }\n    }\n    return dist;\n\n}\n\nfunction toSimpleGeometry(geometry: Exclude<GeoJSON.Geometry, GeoJSON.GeometryCollection>): SimpleGeometry[] {\n    if (geometry.type === 'MultiPolygon') {\n        return geometry.coordinates.map(polygon => {\n            return {\n                type: 'Polygon',\n                coordinates: polygon\n            };\n        });\n    }\n    if (geometry.type === 'MultiLineString') {\n        return geometry.coordinates.map(lineString => {\n            return {\n                type: 'LineString',\n                coordinates: lineString\n            };\n        });\n    }\n    if (geometry.type === 'MultiPoint') {\n        return geometry.coordinates.map(point => {\n            return {\n                type: 'Point',\n                coordinates: point\n            };\n        });\n    }\n    return [geometry];\n}\n\nclass Distance implements Expression {\n    type: Type;\n    geojson: GeoJSON.GeoJSON;\n    geometries: SimpleGeometry[];\n\n    constructor(geojson: GeoJSON.GeoJSON, geometries: SimpleGeometry[]) {\n        this.type = NumberType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        if (args.length !== 2)\n            return context.error(`'distance' expression requires exactly one argument, but found ${args.length - 1} instead.`) as null;\n        if (isValue(args[1])) {\n            const geojson = (args[1] as any);\n            if (geojson.type === 'FeatureCollection') {\n                return new Distance(geojson, geojson.features.map(feature => toSimpleGeometry(feature.geometry)).flat());\n            } else if (geojson.type === 'Feature') {\n                return new Distance(geojson, toSimpleGeometry(geojson.geometry));\n            } else if ('type' in geojson && 'coordinates' in geojson) {\n                return new Distance(geojson, toSimpleGeometry(geojson));\n            }\n        }\n        return context.error('\\'distance\\' expression requires valid geojson object that contains polygon geometry type.') as null;\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointToGeometryDistance(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return lineStringToGeometryDistance(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'Polygon') {\n                return polygonToGeometryDistance(ctx, this.geometries);\n            }\n        }\n        return NaN;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n}\n\nexport default Distance;\n","\nimport Let from './let';\nimport Var from './var';\nimport Literal from './literal';\nimport Assertion from './assertion';\nimport Coercion from './coercion';\nimport At from './at';\nimport In from './in';\nimport IndexOf from './index_of';\nimport Match from './match';\nimport Case from './case';\nimport Slice from './slice';\nimport Step from './step';\nimport Interpolate from './interpolate';\nimport Coalesce from './coalesce';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison';\nimport CollatorExpression from './collator';\nimport NumberFormat from './number_format';\nimport FormatExpression from './format';\nimport ImageExpression from './image';\nimport Length from './length';\nimport Within from './within';\nimport Distance from './distance';\n\nimport type {ExpressionRegistry} from '../expression';\n\nexport const expressions: ExpressionRegistry = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within,\n    'distance': Distance\n};\n\nexport default expressions;\n","import {toString,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString,\n} from './types';\n\nimport ParsingContext from './parsing_context';\nimport EvaluationContext from './evaluation_context';\n\nimport {expressions} from './definitions/index';\nimport CollatorExpression from './definitions/collator';\nimport Within from './definitions/within';\nimport Literal from './definitions/literal';\nimport Assertion from './definitions/assertion';\nimport Coercion from './definitions/coercion';\nimport Var from './definitions/var';\nimport Distance from './definitions/distance';\n\nimport type {Expression, ExpressionRegistry} from './expression';\nimport type {Value} from './values';\nimport type {Type} from './types';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from './values';\nimport RuntimeError from './runtime_error';\n\nexport type Varargs = {\n    type: Type;\n};\ntype Signature = Array<Type> | Varargs;\ntype Evaluate = (b: EvaluationContext, a: Array<Expression>) => Value;\n\ntype Definition = [Type, Signature, Evaluate] | {\n    type: Type;\n    overloads: Array<[Signature, Evaluate]>;\n};\n\nclass CompoundExpression implements Expression {\n    name: string;\n    type: Type;\n    _evaluate: Evaluate;\n    args: Array<Expression>;\n\n    static definitions: {[_: string]: Definition};\n\n    constructor(name: string, type: Type, evaluate: Evaluate, args: Array<Expression>) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined() {\n        return false;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression {\n        const op: string = (args[0] as any);\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0) as null;\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext: ParsingContext = null;\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, isExpressionConstant, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs: Array<Expression> = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    (params as Varargs).type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : (params as Varargs).type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate as Evaluate, parsedArgs);\n            }\n        }\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params as Signature))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry: ExpressionRegistry,\n        definitions: {[_: string]: Definition}\n    ) {\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255, g / 255, b / 255, alpha, false);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type: Type): Varargs {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            const [r, g, b, a] = v.evaluate(ctx).rgb;\n            return [r * 255, g * 255, b * 255, a];\n        },\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k as any).value] === (v as any).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v as any).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v as any).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k as any).value];\n            const b = (v as any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v as any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k as any).value];\n            const b = (v as any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v as any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k as any).value];\n            const b = (v as any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v as any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k as any).value];\n            const b = (v as any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v as any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k as any).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v as any).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v as any).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v as any).value.indexOf(ctx.properties()[(k as any).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k as any).value], (v as any).value, 0, (v as any).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nfunction stringifySignature(signature: Signature): string {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nfunction isExpressionConstant(expression: Expression) {\n    if (expression instanceof Var) {\n        return isExpressionConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    } else if (expression instanceof Distance) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isExpressionConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n           isGlobalPropertyConstant(expression,\n               ['zoom', 'heatmap-density', 'line-progress', 'accumulated', 'is-supported-script']);\n}\n\nfunction isFeatureConstant(e: Expression) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n    if (e instanceof Distance) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e: Expression) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e: Expression, properties: Array<string>) {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant, isExpressionConstant};\nexport default CompoundExpression;\n","/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nexport type Result<T, E> = {\n    result: 'success';\n    value: T;\n} | {\n    result: 'error';\n    value: E;\n};\n\nexport function success<T, E>(value: T): Result<T, E> {\n    return {result: 'success', value};\n}\n\nexport function error<T, E>(value: E): Result<T, E> {\n    return {result: 'error', value};\n}\n","import type {StylePropertySpecification} from '..';\n\nexport function supportsPropertyExpression(spec: StylePropertySpecification): boolean {\n    return spec['property-type'] === 'data-driven' || spec['property-type'] === 'cross-faded-data-driven';\n}\n\nexport function supportsZoomExpression(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","export default function getType(val: unknown): string {\n    if (val instanceof Number) {\n        return 'number';\n    } else if (val instanceof String) {\n        return 'string';\n    } else if (val instanceof Boolean) {\n        return 'boolean';\n    } else if (Array.isArray(val)) {\n        return 'array';\n    } else if (val === null) {\n        return 'null';\n    } else {\n        return typeof val;\n    }\n}\n","import Color from '../util/color';\nimport extend from '../util/extend';\nimport getType from '../util/get_type';\nimport interpolate, {isSupportedInterpolationColorSpace} from '../util/interpolate';\nimport Interpolate from '../expression/definitions/interpolate';\nimport Formatted from '../expression/types/formatted';\nimport ResolvedImage from '../expression/types/resolved_image';\nimport {supportsInterpolation} from '../util/properties';\nimport {findStopLessThanOrEqualTo} from '../expression/stops';\nimport Padding from '../util/padding';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor || propertySpec.type === 'padding') {\n        const parseFn = isColor ? Color.parse : Padding.parse;\n\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], parseFn(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = parseFn(parameters.default);\n        } else {\n            parameters.default = parseFn(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && !isSupportedInterpolationColorSpace(parameters.colorSpace)) {\n        throw new Error(`Unknown color space: \"${parameters.colorSpace}\"`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c?) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    const interp = interpolate[propertySpec.type] || identityFunction;\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t, parameters.colorSpace);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t, parameters.colorSpace);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    switch (propertySpec.type) {\n        case 'color':\n            input = Color.parse(input);\n            break;\n        case 'formatted':\n            input = Formatted.fromString(input.toString());\n            break;\n        case 'resolvedImage':\n            input = ResolvedImage.fromString(input.toString());\n            break;\n        case 'padding':\n            input = Padding.parse(input);\n            break;\n        default:\n            if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n                input = undefined;\n            }\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","\nimport extend from '../util/extend';\nimport ExpressionParsingError from './parsing_error';\nimport ParsingContext from './parsing_context';\nimport EvaluationContext from './evaluation_context';\n\nimport CompoundExpression, {isFeatureConstant,\n    isGlobalPropertyConstant,\n    isStateConstant,\n    isExpressionConstant\n} from './compound_expression';\n\nimport Step from './definitions/step';\nimport Interpolate from './definitions/interpolate';\nimport Coalesce from './definitions/coalesce';\nimport Let from './definitions/let';\nimport definitions from './definitions';\n\nimport RuntimeError from './runtime_error';\nimport {success, error} from '../util/result';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties';\n\nimport type {Type, EvaluationKind} from './types';\nimport type {Value} from './values';\nimport type {Expression} from './expression';\nimport type {StylePropertySpecification} from '..';\nimport type {Result} from '../util/result';\nimport type {InterpolationType} from './definitions/interpolate';\nimport type {PropertyValueSpecification, VariableAnchorOffsetCollectionSpecification} from '../types.g';\nimport type {FormattedSection} from './types/formatted';\nimport type {Point2D} from '../point2d';\n\nexport type Feature = {\n    readonly type: 0 | 1 | 2 | 3 | 'Unknown' | 'Point' | 'MultiPoint' | 'LineString' | 'MultiLineString' | 'Polygon' | 'MultiPolygon';\n    readonly id?: any;\n    readonly properties: {[_: string]: any};\n    readonly patterns?: {\n        [_: string]: {\n            'min': string;\n            'mid': string;\n            'max': string;\n        };\n    };\n    readonly geometry?: Array<Array<Point2D>>;\n};\n\nexport type FeatureState = {[_: string]: any};\n\nexport type GlobalProperties = Readonly<{\n    zoom: number;\n    heatmapDensity?: number;\n    lineProgress?: number;\n    isSupportedScript?: (_: string) => boolean;\n    accumulated?: Value;\n}>;\n\nexport class StyleExpression {\n    expression: Expression;\n\n    _evaluator: EvaluationContext;\n    _defaultValue: Value;\n    _warningHistory: {[key: string]: boolean};\n    _enumValues: {[_: string]: any};\n\n    constructor(expression: Expression, propertySpec?: StylePropertySpecification | null) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: ICanonicalTileID,\n        availableImages?: Array<string>,\n        formattedSection?: FormattedSection\n    ): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: ICanonicalTileID,\n        availableImages?: Array<string>,\n        formattedSection?: FormattedSection\n    ): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression: unknown) {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression: unknown, propertySpec?: StylePropertySpecification | null): Result<StyleExpression, Array<ExpressionParsingError>> {\n    const parser = new ParsingContext(definitions, isExpressionConstant, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression<Kind extends EvaluationKind> {\n    kind: Kind;\n    isStateDependent: boolean;\n    _styleExpression: StyleExpression;\n\n    constructor(kind: Kind, expression: StyleExpression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant' as EvaluationKind) && !isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: ICanonicalTileID,\n        availableImages?: Array<string>,\n        formattedSection?: FormattedSection\n    ): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: ICanonicalTileID,\n        availableImages?: Array<string>,\n        formattedSection?: FormattedSection\n    ): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression<Kind extends EvaluationKind> {\n    kind: Kind;\n    zoomStops: Array<number>;\n    isStateDependent: boolean;\n\n    _styleExpression: StyleExpression;\n    interpolationType: InterpolationType;\n\n    constructor(kind: Kind, expression: StyleExpression, zoomStops: Array<number>, interpolationType?: InterpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera' as EvaluationKind) && !isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: ICanonicalTileID,\n        availableImages?: Array<string>,\n        formattedSection?: FormattedSection\n    ): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: ICanonicalTileID,\n        availableImages?: Array<string>,\n        formattedSection?: FormattedSection\n    ): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input: number, lower: number, upper: number): number {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\nexport function isZoomExpression(expression: any): expression is ZoomConstantExpression<'source'> | ZoomDependentExpression<'source'> {\n    return (expression as ZoomConstantExpression<'source'>)._styleExpression !== undefined;\n}\n\nexport type ConstantExpression = {\n    kind: 'constant';\n    readonly evaluate: (\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: ICanonicalTileID,\n        availableImages?: Array<string>\n    ) => any;\n};\n\nexport type SourceExpression = {\n    kind: 'source';\n    isStateDependent: boolean;\n    readonly evaluate: (\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: ICanonicalTileID,\n        availableImages?: Array<string>,\n        formattedSection?: FormattedSection\n    ) => any;\n};\n\nexport type CameraExpression = {\n    kind: 'camera';\n    readonly evaluate: (\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: ICanonicalTileID,\n        availableImages?: Array<string>\n    ) => any;\n    readonly interpolationFactor: (input: number, lower: number, upper: number) => number;\n    zoomStops: Array<number>;\n    interpolationType: InterpolationType;\n};\n\nexport type CompositeExpression = {\n    kind: 'composite';\n    isStateDependent: boolean;\n    readonly evaluate: (\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: ICanonicalTileID,\n        availableImages?: Array<string>,\n        formattedSection?: FormattedSection\n    ) => any;\n    readonly interpolationFactor: (input: number, lower: number, upper: number) => number;\n    zoomStops: Array<number>;\n    interpolationType: InterpolationType;\n};\n\nexport type StylePropertyExpression = ConstantExpression | SourceExpression | CameraExpression | CompositeExpression;\n\nexport function createPropertyExpression(expressionInput: unknown, propertySpec: StylePropertySpecification): Result<StylePropertyExpression, Array<ExpressionParsingError>> {\n    const expression = createExpression(expressionInput, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstantResult = isFeatureConstant(parsed);\n    if (!isFeatureConstantResult && !supportsPropertyExpression(propertySpec)) {\n        return error([new ExpressionParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isGlobalPropertyConstant(parsed, ['zoom']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ExpressionParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ExpressionParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ExpressionParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ExpressionParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstantResult ?\n            (new ZoomConstantExpression('constant', expression.value) as ConstantExpression) :\n            (new ZoomConstantExpression('source', expression.value) as SourceExpression));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstantResult ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) as CameraExpression) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType) as CompositeExpression));\n}\n\nimport {isFunction, createFunction} from '../function';\nimport {Color, VariableAnchorOffsetCollection} from './values';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction<T> {\n    _parameters: PropertyValueSpecification<T>;\n    _specification: StylePropertySpecification;\n\n    kind: EvaluationKind;\n    evaluate: (globals: GlobalProperties, feature?: Feature) => any;\n    interpolationFactor: ((input: number, lower: number, upper: number) => number);\n    zoomStops: Array<number>;\n\n    constructor(parameters: PropertyValueSpecification<T>, specification: StylePropertySpecification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize<T>(serialized: {\n        _parameters: PropertyValueSpecification<T>;\n        _specification: StylePropertySpecification;\n    }) {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification) as StylePropertyFunction<T>;\n    }\n\n    static serialize<T>(input: StylePropertyFunction<T>) {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression<T>(\n    value: PropertyValueSpecification<T>,\n    specification: StylePropertySpecification\n): StylePropertyExpression {\n    if (isFunction(value)) {\n        return new StylePropertyFunction(value, specification) as any;\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant: any = value;\n        if (specification.type === 'color' && typeof value === 'string') {\n            constant = Color.parse(value);\n        } else if (specification.type === 'padding' && (typeof value === 'number' || Array.isArray(value))) {\n            constant = Padding.parse(value as (number | number[]));\n        } else if (specification.type === 'variableAnchorOffsetCollection' && Array.isArray(value)) {\n            constant = VariableAnchorOffsetCollection.parse(value as VariableAnchorOffsetCollectionSpecification);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression: Expression): Step | Interpolate | ExpressionParsingError | null {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ExpressionParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ExpressionParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ExpressionParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ExpressionParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, PaddingType, ResolvedImageType, VariableAnchorOffsetCollectionType, array} from './types';\nimport Padding from '../util/padding';\nimport {ICanonicalTileID} from '../tiles_and_coordinates';\n\nfunction getExpectedType(spec: StylePropertySpecification): Type {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        padding: PaddingType,\n        resolvedImage: ResolvedImageType,\n        variableAnchorOffsetCollection: VariableAnchorOffsetCollectionType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec: StylePropertySpecification): Value {\n    if (spec.type === 'color' && isFunction(spec.default)) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.type === 'padding') {\n        return Padding.parse(spec.default) || null;\n    } else if (spec.type === 'variableAnchorOffsetCollection') {\n        return VariableAnchorOffsetCollection.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","import {createExpression} from '../expression';\nimport type {GlobalProperties, Feature} from '../expression';\nimport {ICanonicalTileID} from '../tiles_and_coordinates';\nimport {StylePropertySpecification} from '..';\nimport {ExpressionFilterSpecification} from '../types.g';\n\ntype FilterExpression = (\n    globalProperties: GlobalProperties,\n    feature: Feature,\n    canonical?: ICanonicalTileID\n) => boolean;\n\nexport type FeatureFilter = {\n    filter: FilterExpression;\n    needGeometry: boolean;\n};\n\nexport default createFilter;\nexport {isExpressionFilter};\n\nfunction isExpressionFilter(filter: any): filter is ExpressionFilterSpecification {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n        case 'has':\n            return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n        case 'in':\n            return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n        case '!in':\n        case '!has':\n        case 'none':\n            return false;\n\n        case '==':\n        case '!=':\n        case '>':\n        case '>=':\n        case '<':\n        case '<=':\n            return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n        case 'any':\n        case 'all':\n            for (const f of filter.slice(1)) {\n                if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                    return false;\n                }\n            }\n            return true;\n\n        default:\n            return true;\n    }\n}\n\nconst filterSpec = {\n    'type': 'boolean',\n    'default': false,\n    'transition': false,\n    'property-type': 'data-driven',\n    'expression': {\n        'interpolated': false,\n        'parameters': ['zoom', 'feature']\n    }\n};\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter MapLibre filter\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter: any): FeatureFilter {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n\n    const compiled = createExpression(filter, filterSpec as StylePropertySpecification);\n    if (compiled.result === 'error') {\n        throw new Error(compiled.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        const needGeometry = geometryNeeded(filter);\n        return {filter: (globalProperties: GlobalProperties, feature: Feature, canonical?: ICanonicalTileID) => compiled.value.evaluate(globalProperties, feature, {}, canonical),\n            needGeometry};\n    }\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within' || filter[0] === 'distance') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter?: Array<any> | null): unknown {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n            op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n                op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n                    op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n                        op === 'all' ? ['all' as unknown].concat(filter.slice(1).map(convertFilter)) :\n                            op === 'none' ? ['all' as unknown].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n                                op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n                                    op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n                                        op === 'has' ? convertHasOp(filter[1]) :\n                                            op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n                                                true;\n    return converted;\n}\n\nfunction convertComparisonOp(property: string, value: any, op: string) {\n    switch (property) {\n        case '$type':\n            return [`filter-type-${op}`, value];\n        case '$id':\n            return [`filter-id-${op}`, value];\n        default:\n            return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters: Array<Array<any>>) {\n    return ['any' as unknown].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property: string, values: Array<any>) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n        case '$type':\n            return ['filter-type-in', ['literal', values]];\n        case '$id':\n            return ['filter-id-in', ['literal', values]];\n        default:\n            if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n                return ['filter-in-large', property, ['literal', values.sort(compare)]];\n            } else {\n                return ['filter-in-small', property, ['literal', values]];\n            }\n    }\n}\n\nfunction convertHasOp(property: string) {\n    switch (property) {\n        case '$type':\n            return true;\n        case '$id':\n            return ['filter-has-id'];\n        default:\n            return ['filter-has', property];\n    }\n}\n\nfunction convertNegation(filter: unknown) {\n    return ['!', filter];\n}\n","import {isExpressionFilter} from './index';\n\nimport type {ExpressionFilterSpecification, ExpressionInputType, ExpressionSpecification, FilterSpecification, LegacyFilterSpecification} from '../types.g';\n\ntype ExpectedTypes = {[_: string]: ExpressionInputType};\n\n/*\n * Convert the given filter to an expression, storing the expected types for\n * any feature properties referenced in expectedTypes.\n *\n * These expected types are needed in order to construct preflight type checks\n * needed for handling 'any' filters. A preflight type check is necessary in\n * order to mimic legacy filters' semantics around expected type mismatches.\n * For example, consider the legacy filter:\n *\n *     [\"any\", [\"all\", [\">\", \"y\", 0], [\">\", \"y\", 0]], [\">\", \"x\", 0]]\n *\n * Naively, we might convert this to the expression:\n *\n *     [\"any\", [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]], [\">\", [\"get\", \"x\"], 0]]\n *\n * But if we tried to evaluate this against, say `{x: 1, y: null, z: 0}`, the\n * [\">\", [\"get\", \"y\"], 0] would cause an evaluation error, leading to the\n * entire filter returning false. Legacy filter semantics, though, ask for\n * [\">\", \"y\", 0] to simply return `false` when `y` is of the wrong type,\n * allowing the subsequent terms of the outer \"any\" expression to be evaluated\n * (resulting, in this case, in a `true` value, because x > 0).\n *\n * We account for this by inserting a preflight type-checking expression before\n * each \"any\" term, allowing us to avoid evaluating the actual converted filter\n * if any type mismatches would cause it to produce an evalaution error:\n *\n *     [\"any\",\n *       [\"case\",\n *         [\"all\", [\"==\", [\"typeof\", [\"get\", \"y\"]], \"number\"], [\"==\", [\"typeof\", [\"get\", \"z\"], \"number]],\n *         [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]],\n *         false\n *       ],\n *       [\"case\",\n *         [\"==\", [\"typeof\", [\"get\", \"x\"], \"number\"]],\n *         [\">\", [\"get\", \"x\"], 0],\n *         false\n *       ]\n *     ]\n *\n * An alternative, possibly more direct approach would be to use type checks\n * in the conversion of each comparison operator, so that the converted version\n * of each individual ==, >=, etc. would mimic the legacy filter semantics. The\n * downside of this approach is that it can lead to many more type checks than\n * would otherwise be necessary: outside the context of an \"any\" expression,\n * bailing out due to a runtime type error (expression semantics) and returning\n * false (legacy filter semantics) are equivalent: they cause the filter to\n * produce a `false` result.\n */\nexport default function convertFilter(filter: FilterSpecification, expectedTypes: ExpectedTypes = {}): ExpressionFilterSpecification {\n    if (isExpressionFilter(filter)) return filter;\n    if (!filter) return true;\n\n    const legacyFilter = filter as LegacyFilterSpecification;\n    const legacyOp = legacyFilter[0];\n    if (filter.length <= 1) return (legacyOp !== 'any');\n\n    switch (legacyOp) {\n        case '==':\n        case '!=':\n        case '<':\n        case '>':\n        case '<=':\n        case '>=': {\n            const [, property, value] = filter;\n            return convertComparisonOp(property as string, value, legacyOp, expectedTypes);\n        }\n        case 'any': {\n            const [, ...conditions] = legacyFilter;\n            const children = conditions.map((f: LegacyFilterSpecification) => {\n                const types = {};\n                const child = convertFilter(f, types);\n                const typechecks = runtimeTypeChecks(types);\n                return typechecks === true ? child : ['case', typechecks, child, false] as ExpressionSpecification;\n            });\n            return ['any', ...children];\n        }\n        case 'all': {\n            const [, ...conditions] = legacyFilter;\n            const children = conditions.map(f => convertFilter(f, expectedTypes));\n            return children.length > 1 ? ['all', ...children] : children[0];\n        }\n        case 'none': {\n            const [, ...conditions] = legacyFilter;\n            return ['!', convertFilter(['any', ...conditions], {})];\n        }\n        case 'in': {\n            const [, property, ...values] = legacyFilter;\n            return convertInOp(property, values);\n        }\n        case '!in': {\n            const [, property, ...values] = legacyFilter;\n            return convertInOp(property, values, true);\n        }\n        case 'has':\n            return convertHasOp(legacyFilter[1]);\n        case '!has':\n            return ['!', convertHasOp(legacyFilter[1])];\n        default:\n            return true;\n    }\n}\n\n// Given a set of feature properties and an expected type for each one,\n// construct an boolean expression that tests whether each property has the\n// right type.\n// E.g.: for {name: 'string', population: 'number'}, return\n// [ 'all',\n//   ['==', ['typeof', ['get', 'name'], 'string']],\n//   ['==', ['typeof', ['get', 'population'], 'number]]\n// ]\nfunction runtimeTypeChecks(expectedTypes: ExpectedTypes): ExpressionFilterSpecification {\n    const conditions = [];\n    for (const property in expectedTypes) {\n        const get = property === '$id' ? ['id'] : ['get', property];\n        conditions.push(['==', ['typeof', get], expectedTypes[property]]);\n    }\n    if (conditions.length === 0) return true;\n    if (conditions.length === 1) return conditions[0];\n    return ['all', ...conditions];\n}\n\nfunction convertComparisonOp(property: string, value: any, op: string, expectedTypes?: ExpectedTypes | null): ExpressionFilterSpecification {\n    let get;\n    if (property === '$type') {\n        return [op, ['geometry-type'], value] as ExpressionFilterSpecification;\n    } else if (property === '$id') {\n        get = ['id'];\n    } else {\n        get = ['get', property];\n    }\n\n    if (expectedTypes && value !== null) {\n        const type = (typeof value as any);\n        expectedTypes[property] = type;\n    }\n\n    if (op === '==' && property !== '$id' && value === null) {\n        return [\n            'all',\n            ['has', property], // missing property != null for legacy filters\n            ['==', get, null]\n        ];\n    } else if (op === '!=' && property !== '$id' && value === null) {\n        return [\n            'any',\n            ['!', ['has', property]], // missing property != null for legacy filters\n            ['!=', get, null]\n        ];\n    }\n\n    return [op, get, value] as ExpressionFilterSpecification;\n}\n\nfunction convertInOp(property: string, values: Array<any>, negate = false): ExpressionFilterSpecification {\n    if (values.length === 0) return negate;\n\n    let get: ExpressionSpecification;\n    if (property === '$type') {\n        get = ['geometry-type'];\n    } else if (property === '$id') {\n        get = ['id'];\n    } else {\n        get = ['get', property];\n    }\n\n    // Determine if the list of values to be searched is homogenously typed.\n    // If so (and if the type is string or number), then we can use a\n    // [match, input, [...values], true, false] construction rather than a\n    // bunch of `==` tests.\n    let uniformTypes = true;\n    const type = typeof values[0];\n    for (const value of values) {\n        if (typeof value !== type) {\n            uniformTypes = false;\n            break;\n        }\n    }\n\n    if (uniformTypes && (type === 'string' || type === 'number')) {\n        // Match expressions must have unique values.\n        const uniqueValues = values.sort().filter((v, i) => i === 0 || values[i - 1] !== v);\n        return ['match', get, uniqueValues, !negate, negate];\n    }\n\n    if (negate) {\n        return ['all', ...values.map(v => ['!=', get, v] as ExpressionSpecification)];\n    } else {\n        return ['any', ...values.map(v => ['==', get, v] as ExpressionSpecification)];\n    }\n}\n\nfunction convertHasOp(property: string): ExpressionFilterSpecification {\n    if (property === '$type') {\n        return true;\n    } else if (property === '$id') {\n        return ['!=', ['id'], null];\n    } else {\n        return ['has', property];\n    }\n}\n","\nimport type {StylePropertySpecification} from '..';\n\nexport default convertFunction;\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nfunction convertFunction(parameters: any, propertySpec: StylePropertySpecification) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && (propertySpec as any).tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec): Array<unknown> {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n        case 'hcl': return 'interpolate-hcl';\n        case 'lab': return 'interpolate-lab';\n        default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        const expression: any = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : ['exponential', base],\n            ['number', get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? ['linear'] : ['exponential', base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        return (propertySpec.expression as any).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s: string) {\n    const result: any = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","import Reference from './reference/v8.json' assert {type: 'json'};\nimport type {StylePropertySpecification} from '.';\nimport type {\n    StyleSpecification,\n    SourceSpecification,\n    LayerSpecification,\n    PropertyValueSpecification,\n    DataDrivenPropertyValueSpecification\n} from './types.g';\n\nfunction getPropertyReference(propertyName): StylePropertySpecification {\n    for (let i = 0; i < Reference.layout.length; i++) {\n        for (const key in Reference[Reference.layout[i]]) {\n            if (key === propertyName) return Reference[Reference.layout[i]][key] as any;\n        }\n    }\n    for (let i = 0; i < Reference.paint.length; i++) {\n        for (const key in Reference[Reference.paint[i]]) {\n            if (key === propertyName) return Reference[Reference.paint[i]][key] as any;\n        }\n    }\n\n    return null;\n}\n\nexport function eachSource(style: StyleSpecification, callback: (_: SourceSpecification) => void) {\n    for (const k in style.sources) {\n        callback(style.sources[k]);\n    }\n}\n\nexport function eachLayer(style: StyleSpecification, callback: (_: LayerSpecification) => void) {\n    for (const layer of style.layers) {\n        callback(layer);\n    }\n}\n\ntype PropertyCallback = (\n    a: {\n        path: [string, 'paint' | 'layout', string]; // [layerid, paint/layout, property key],\n        key: string;\n        value: PropertyValueSpecification<unknown> | DataDrivenPropertyValueSpecification<unknown>;\n        reference: StylePropertySpecification;\n        set: (\n            a: PropertyValueSpecification<unknown> | DataDrivenPropertyValueSpecification<unknown>\n        ) => void;\n    }\n) => void;\n\nexport function eachProperty(\n    style: StyleSpecification,\n    options: {\n        paint?: boolean;\n        layout?: boolean;\n    },\n    callback: PropertyCallback\n) {\n    function inner(layer, propertyType: 'paint' | 'layout') {\n        const properties = (layer[propertyType] as any);\n        if (!properties) return;\n        Object.keys(properties).forEach((key) => {\n            callback({\n                path: [layer.id, propertyType, key],\n                key,\n                value: properties[key],\n                reference: getPropertyReference(key),\n                set(x) {\n                    properties[key] = x;\n                }\n            });\n        });\n    }\n\n    eachLayer(style, (layer) => {\n        if (options.paint) {\n            inner(layer, 'paint');\n        }\n        if (options.layout) {\n            inner(layer, 'layout');\n        }\n    });\n}\n","\nimport refProperties from './util/ref_properties';\n\nfunction stringify(obj) {\n    const type = typeof obj;\n    if (type === 'number' || type === 'boolean' || type === 'string' || obj === undefined || obj === null)\n        return JSON.stringify(obj);\n\n    if (Array.isArray(obj)) {\n        let str = '[';\n        for (const val of obj) {\n            str += `${stringify(val)},`;\n        }\n        return `${str}]`;\n    }\n\n    const keys = Object.keys(obj).sort();\n\n    let str = '{';\n    for (let i = 0; i < keys.length; i++) {\n        str += `${JSON.stringify(keys[i])}:${stringify(obj[keys[i]])},`;\n    }\n    return `${str}}`;\n}\n\nfunction getKey(layer) {\n    let key = '';\n    for (const k of refProperties) {\n        key += `/${stringify(layer[k])}`;\n    }\n    return key;\n}\n\nexport default groupByLayout;\n\n/**\n * Given an array of layers, return an array of arrays of layers where all\n * layers in each group have identical layout-affecting properties. These\n * are the properties that were formerly used by explicit `ref` mechanism\n * for layers: 'type', 'source', 'source-layer', 'minzoom', 'maxzoom',\n * 'filter', and 'layout'.\n *\n * The input is not modified. The output layers are references to the\n * input layers.\n *\n * @private\n * @param {Array<Layer>} layers\n * @param {Object} [cachedKeys] - an object to keep already calculated keys.\n * @returns {Array<Array<Layer>>}\n */\nfunction groupByLayout(layers, cachedKeys) {\n    const groups = {};\n\n    for (let i = 0; i < layers.length; i++) {\n\n        const k = (cachedKeys && cachedKeys[layers[i].id]) || getKey(layers[i]);\n        // update the cache if there is one\n        if (cachedKeys)\n            cachedKeys[layers[i].id] = k;\n\n        let group = groups[k];\n        if (!group) {\n            group = groups[k] = [];\n        }\n        group.push(layers[i]);\n    }\n\n    const result = [];\n\n    for (const k in groups) {\n        result.push(groups[k]);\n    }\n\n    return result;\n}\n","import latest from './reference/latest';\nimport {StyleSpecification} from './types.g';\n\nexport default function emptyStyle(): StyleSpecification {\n    const style = {};\n\n    const version = latest['$version'];\n    for (const styleKey in latest['$root']) {\n        const spec = latest['$root'][styleKey];\n\n        if (spec.required) {\n            let value = null;\n            if (styleKey === 'version') {\n                value = version;\n            } else {\n                if (spec.type === 'array') {\n                    value = [];\n                } else {\n                    value = {};\n                }\n            }\n\n            if (value != null) {\n                style[styleKey] = value;\n            }\n        }\n    }\n\n    return style as StyleSpecification;\n}\n","\nimport ValidationError from '../error/validation_error';\n\nexport default function validateConstants(options) {\n    const key = options.key;\n    const constants = options.value;\n\n    if (constants) {\n        return [new ValidationError(key, constants, 'constants have been deprecated as of v8')];\n    } else {\n        return [];\n    }\n}\n","// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value: unknown) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value: unknown): unknown {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue: {[key: string]: unknown} = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n","\nimport ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\n\nexport default function validateObject(options): Array<ValidationError> {\n    const key = options.key;\n    const object = options.value;\n    const elementSpecs = options.valueSpec || {};\n    const elementValidators = options.objectElementValidators || {};\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const validateSpec = options.validateSpec;\n    let errors: ValidationError[] = [];\n\n    const type = getType(object);\n    if (type !== 'object') {\n        return [new ValidationError(key, object, `object expected, ${type} found`)];\n    }\n\n    for (const objectKey in object) {\n        const elementSpecKey = objectKey.split('.')[0]; // treat 'paint.*' as 'paint'\n        const elementSpec = elementSpecs[elementSpecKey] || elementSpecs['*'];\n\n        let validateElement;\n        if (elementValidators[elementSpecKey]) {\n            validateElement = elementValidators[elementSpecKey];\n        } else if (elementSpecs[elementSpecKey]) {\n            validateElement = validateSpec;\n        } else if (elementValidators['*']) {\n            validateElement = elementValidators['*'];\n        } else if (elementSpecs['*']) {\n            validateElement = validateSpec;\n        } else {\n            errors.push(new ValidationError(key, object[objectKey], `unknown property \"${objectKey}\"`));\n            continue;\n        }\n\n        errors = errors.concat(validateElement({\n            key: (key ? `${key}.` : key) + objectKey,\n            value: object[objectKey],\n            valueSpec: elementSpec,\n            style,\n            styleSpec,\n            object,\n            objectKey,\n            validateSpec,\n        }, object));\n    }\n\n    for (const elementSpecKey in elementSpecs) {\n        // Don't check `required` when there's a custom validator for that property.\n        if (elementValidators[elementSpecKey]) {\n            continue;\n        }\n\n        if (elementSpecs[elementSpecKey].required && elementSpecs[elementSpecKey]['default'] === undefined && object[elementSpecKey] === undefined) {\n            errors.push(new ValidationError(key, object, `missing required property \"${elementSpecKey}\"`));\n        }\n    }\n\n    return errors;\n}\n","import getType from '../util/get_type';\nimport ValidationError from '../error/validation_error';\n\nexport default function validateArray(options) {\n    const array = options.value;\n    const arraySpec = options.valueSpec;\n    const validateSpec = options.validateSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const key = options.key;\n    const validateArrayElement = options.arrayElementValidator || validateSpec;\n\n    if (getType(array) !== 'array') {\n        return [new ValidationError(key, array, `array expected, ${getType(array)} found`)];\n    }\n\n    if (arraySpec.length && array.length !== arraySpec.length) {\n        return [new ValidationError(key, array, `array length ${arraySpec.length} expected, length ${array.length} found`)];\n    }\n\n    if (arraySpec['min-length'] && array.length < arraySpec['min-length']) {\n        return [new ValidationError(key, array, `array length at least ${arraySpec['min-length']} expected, length ${array.length} found`)];\n    }\n\n    let arrayElementSpec = {\n        'type': arraySpec.value,\n        'values': arraySpec.values\n    };\n\n    if (styleSpec.$version < 7) {\n        arrayElementSpec['function'] = arraySpec.function;\n    }\n\n    if (getType(arraySpec.value) === 'object') {\n        arrayElementSpec = arraySpec.value;\n    }\n\n    let errors = [];\n    for (let i = 0; i < array.length; i++) {\n        errors = errors.concat(validateArrayElement({\n            array,\n            arrayIndex: i,\n            value: array[i],\n            valueSpec: arrayElementSpec,\n            validateSpec: options.validateSpec,\n            style,\n            styleSpec,\n            key: `${key}[${i}]`\n        }));\n    }\n    return errors;\n}\n","\nimport getType from '../util/get_type';\nimport ValidationError from '../error/validation_error';\n\nexport default function validateNumber(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    let type = getType(value);\n\n    // eslint-disable-next-line no-self-compare\n    if (type === 'number' && value !== value) {\n        type = 'NaN';\n    }\n\n    if (type !== 'number') {\n        return [new ValidationError(key, value, `number expected, ${type} found`)];\n    }\n\n    if ('minimum' in valueSpec && value < valueSpec.minimum) {\n        return [new ValidationError(key, value, `${value} is less than the minimum value ${valueSpec.minimum}`)];\n    }\n\n    if ('maximum' in valueSpec && value > valueSpec.maximum) {\n        return [new ValidationError(key, value, `${value} is greater than the maximum value ${valueSpec.maximum}`)];\n    }\n\n    return [];\n}\n","\nimport ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport validateObject from './validate_object';\nimport validateArray from './validate_array';\nimport validateNumber from './validate_number';\nimport {isExpression} from '../expression';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint';\nimport {\n    supportsPropertyExpression,\n    supportsZoomExpression,\n    supportsInterpolation\n} from '../util/properties';\n\nexport default function validateFunction(options): Array<ValidationError> {\n    const functionValueSpec = options.valueSpec;\n    const functionType = unbundle(options.value.type);\n    let stopKeyType;\n    let stopDomainValues = {};\n    let previousStopDomainValue;\n    let previousStopDomainZoom;\n\n    const isZoomFunction = functionType !== 'categorical' && options.value.property === undefined;\n    const isPropertyFunction = !isZoomFunction;\n    const isZoomAndPropertyFunction =\n        getType(options.value.stops) === 'array' &&\n        getType(options.value.stops[0]) === 'array' &&\n        getType(options.value.stops[0][0]) === 'object';\n\n    const errors = validateObject({\n        key: options.key,\n        value: options.value,\n        valueSpec: options.styleSpec.function,\n        validateSpec: options.validateSpec,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            stops: validateFunctionStops,\n            default: validateFunctionDefault\n        }\n    });\n\n    if (functionType === 'identity' && isZoomFunction) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"property\"'));\n    }\n\n    if (functionType !== 'identity' && !options.value.stops) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"stops\"'));\n    }\n\n    if (functionType === 'exponential' && options.valueSpec.expression && !supportsInterpolation(options.valueSpec)) {\n        errors.push(new ValidationError(options.key, options.value, 'exponential functions not supported'));\n    }\n\n    if (options.styleSpec.$version >= 8) {\n        if (isPropertyFunction && !supportsPropertyExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'property functions not supported'));\n        } else if (isZoomFunction && !supportsZoomExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'zoom functions not supported'));\n        }\n    }\n\n    if ((functionType === 'categorical' || isZoomAndPropertyFunction) && options.value.property === undefined) {\n        errors.push(new ValidationError(options.key, options.value, '\"property\" property is required'));\n    }\n\n    return errors;\n\n    function validateFunctionStops(options) {\n        if (functionType === 'identity') {\n            return [new ValidationError(options.key, options.value, 'identity function may not have a \"stops\" property')];\n        }\n\n        let errors = [];\n        const value = options.value;\n\n        errors = errors.concat(validateArray({\n            key: options.key,\n            value,\n            valueSpec: options.valueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec,\n            arrayElementValidator: validateFunctionStop\n        }));\n\n        if (getType(value) === 'array' && value.length === 0) {\n            errors.push(new ValidationError(options.key, value, 'array must have at least one stop'));\n        }\n\n        return errors;\n    }\n\n    function validateFunctionStop(options) {\n        let errors = [];\n        const value = options.value;\n        const key = options.key;\n\n        if (getType(value) !== 'array') {\n            return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n        }\n\n        if (value.length !== 2) {\n            return [new ValidationError(key, value, `array length 2 expected, length ${value.length} found`)];\n        }\n\n        if (isZoomAndPropertyFunction) {\n            if (getType(value[0]) !== 'object') {\n                return [new ValidationError(key, value, `object expected, ${getType(value[0])} found`)];\n            }\n            if (value[0].zoom === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have zoom')];\n            }\n            if (value[0].value === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have value')];\n            }\n            if (previousStopDomainZoom && previousStopDomainZoom > unbundle(value[0].zoom)) {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must appear in ascending order')];\n            }\n            if (unbundle(value[0].zoom) !== previousStopDomainZoom) {\n                previousStopDomainZoom = unbundle(value[0].zoom);\n                previousStopDomainValue = undefined;\n                stopDomainValues = {};\n            }\n            errors = errors.concat(validateObject({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {zoom: {}},\n                validateSpec: options.validateSpec,\n                style: options.style,\n                styleSpec: options.styleSpec,\n                objectElementValidators: {zoom: validateNumber, value: validateStopDomainValue}\n            }));\n        } else {\n            errors = errors.concat(validateStopDomainValue({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {},\n                validateSpec: options.validateSpec,\n                style: options.style,\n                styleSpec: options.styleSpec\n            }, value));\n        }\n\n        if (isExpression(deepUnbundle(value[1]))) {\n            return errors.concat([new ValidationError(`${key}[1]`, value[1], 'expressions are not allowed in function stops.')]);\n        }\n\n        return errors.concat(options.validateSpec({\n            key: `${key}[1]`,\n            value: value[1],\n            valueSpec: functionValueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        }));\n    }\n\n    function validateStopDomainValue(options, stop) {\n        const type = getType(options.value);\n        const value = unbundle(options.value);\n\n        const reportValue = options.value !== null ? options.value : stop;\n\n        if (!stopKeyType) {\n            stopKeyType = type;\n        } else if (type !== stopKeyType) {\n            return [new ValidationError(options.key, reportValue, `${type} stop domain type must match previous stop domain type ${stopKeyType}`)];\n        }\n\n        if (type !== 'number' && type !== 'string' && type !== 'boolean') {\n            return [new ValidationError(options.key, reportValue, 'stop domain value must be a number, string, or boolean')];\n        }\n\n        if (type !== 'number' && functionType !== 'categorical') {\n            let message = `number expected, ${type} found`;\n            if (supportsPropertyExpression(functionValueSpec) && functionType === undefined) {\n                message += '\\nIf you intended to use a categorical function, specify `\"type\": \"categorical\"`.';\n            }\n            return [new ValidationError(options.key, reportValue, message)];\n        }\n\n        if (functionType === 'categorical' && type === 'number' && (!isFinite(value as number) || Math.floor(value as number) !== value)) {\n            return [new ValidationError(options.key, reportValue, `integer expected, found ${value}`)];\n        }\n\n        if (functionType !== 'categorical' && type === 'number' && previousStopDomainValue !== undefined && value < previousStopDomainValue) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must appear in ascending order')];\n        } else {\n            previousStopDomainValue = value;\n        }\n\n        if (functionType === 'categorical' && (value as any) in stopDomainValues) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must be unique')];\n        } else {\n            stopDomainValues[value as any] = true;\n        }\n\n        return [];\n    }\n\n    function validateFunctionDefault(options): Array<ValidationError> {\n        return options.validateSpec({\n            key: options.key,\n            value: options.value,\n            valueSpec: functionValueSpec,\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        });\n    }\n}\n","import ValidationError from '../error/validation_error';\n\nimport {createExpression, createPropertyExpression} from '../expression';\nimport {deepUnbundle} from '../util/unbundle_jsonlint';\n\nimport {isFeatureConstant,\n    isGlobalPropertyConstant,\n    isStateConstant} from '../expression/compound_expression';\n\nimport {Expression} from '../expression/expression';\n\nexport default function validateExpression(options: any): Array<ValidationError> {\n    const expression = (options.expressionContext === 'property' ? createPropertyExpression : createExpression)(deepUnbundle(options.value), options.valueSpec);\n    if (expression.result === 'error') {\n        return expression.value.map((error) => {\n            return new ValidationError(`${options.key}${error.key}`, options.value, error.message);\n        });\n    }\n\n    const expressionObj: Expression = (expression.value as any).expression || (expression.value as any)._styleExpression.expression;\n\n    if (options.expressionContext === 'property' && (options.propertyKey === 'text-font') &&\n        !expressionObj.outputDefined()) {\n        return [new ValidationError(options.key, options.value, `Invalid data expression for \"${options.propertyKey}\". Output values must be contained as literals within the expression.`)];\n    }\n\n    if (options.expressionContext === 'property' && options.propertyType === 'layout' &&\n        (!isStateConstant(expressionObj))) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with layout properties.')];\n    }\n\n    if (options.expressionContext === 'filter' && !isStateConstant(expressionObj)) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with filters.')];\n    }\n\n    if (options.expressionContext && options.expressionContext.indexOf('cluster') === 0) {\n        if (!isGlobalPropertyConstant(expressionObj, ['zoom', 'feature-state'])) {\n            return [new ValidationError(options.key, options.value, '\"zoom\" and \"feature-state\" expressions are not supported with cluster properties.')];\n        }\n        if (options.expressionContext === 'cluster-initial' && !isFeatureConstant(expressionObj)) {\n            return [new ValidationError(options.key, options.value, 'Feature data expressions are not supported with initial expression part of cluster properties.')];\n        }\n    }\n\n    return [];\n}\n","\nimport getType from '../util/get_type';\nimport ValidationError from '../error/validation_error';\n\nexport default function validateBoolean(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n\n    if (type !== 'boolean') {\n        return [new ValidationError(key, value, `boolean expected, ${type} found`)];\n    }\n\n    return [];\n}\n","import ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport Color from '../util/color';\n\nexport default function validateColor(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `color expected, ${type} found`)];\n    }\n\n    if (!Color.parse(String(value))) { // cast String object to string primitive\n        return [new ValidationError(key, value, `color expected, \"${value}\" found`)];\n    }\n\n    return [];\n}\n","\nimport ValidationError from '../error/validation_error';\nimport {unbundle} from '../util/unbundle_jsonlint';\n\nexport default function validateEnum(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const errors = [];\n\n    if (Array.isArray(valueSpec.values)) { // <=v7\n        if (valueSpec.values.indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${valueSpec.values.join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    } else { // >=v8\n        if (Object.keys(valueSpec.values).indexOf(unbundle(value) as string) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${Object.keys(valueSpec.values).join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    return errors;\n}\n","\nimport ValidationError from '../error/validation_error';\nimport validateExpression from './validate_expression';\nimport validateEnum from './validate_enum';\nimport getType from '../util/get_type';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint';\nimport extend from '../util/extend';\nimport {isExpressionFilter} from '../feature_filter';\n\nexport default function validateFilter(options) {\n    if (isExpressionFilter(deepUnbundle(options.value))) {\n        return validateExpression(extend({}, options, {\n            expressionContext: 'filter',\n            valueSpec: {value: 'boolean'}\n        }));\n    } else {\n        return validateNonExpressionFilter(options);\n    }\n}\n\nfunction validateNonExpressionFilter(options) {\n    const value = options.value;\n    const key = options.key;\n\n    if (getType(value) !== 'array') {\n        return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n    }\n\n    const styleSpec = options.styleSpec;\n    let type;\n\n    let errors = [];\n\n    if (value.length < 1) {\n        return [new ValidationError(key, value, 'filter array must have at least 1 element')];\n    }\n\n    errors = errors.concat(validateEnum({\n        key: `${key}[0]`,\n        value: value[0],\n        valueSpec: styleSpec.filter_operator,\n        style: options.style,\n        styleSpec: options.styleSpec\n    }));\n\n    switch (unbundle(value[0])) {\n        case '<':\n        case '<=':\n        case '>':\n        case '>=':\n            if (value.length >= 2 && unbundle(value[1]) === '$type') {\n                errors.push(new ValidationError(key, value, `\"$type\" cannot be use with operator \"${value[0]}\"`));\n            }\n        /* falls through */\n        case '==':\n        case '!=':\n            if (value.length !== 3) {\n                errors.push(new ValidationError(key, value, `filter array for operator \"${value[0]}\" must have 3 elements`));\n            }\n        /* falls through */\n        case 'in':\n        case '!in':\n            if (value.length >= 2) {\n                type = getType(value[1]);\n                if (type !== 'string') {\n                    errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n                }\n            }\n            for (let i = 2; i < value.length; i++) {\n                type = getType(value[i]);\n                if (unbundle(value[1]) === '$type') {\n                    errors = errors.concat(validateEnum({\n                        key: `${key}[${i}]`,\n                        value: value[i],\n                        valueSpec: styleSpec.geometry_type,\n                        style: options.style,\n                        styleSpec: options.styleSpec\n                    }));\n                } else if (type !== 'string' && type !== 'number' && type !== 'boolean') {\n                    errors.push(new ValidationError(`${key}[${i}]`, value[i], `string, number, or boolean expected, ${type} found`));\n                }\n            }\n            break;\n\n        case 'any':\n        case 'all':\n        case 'none':\n            for (let i = 1; i < value.length; i++) {\n                errors = errors.concat(validateNonExpressionFilter({\n                    key: `${key}[${i}]`,\n                    value: value[i],\n                    style: options.style,\n                    styleSpec: options.styleSpec\n                }));\n            }\n            break;\n\n        case 'has':\n        case '!has':\n            type = getType(value[1]);\n            if (value.length !== 2) {\n                errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n            } else if (type !== 'string') {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n            }\n            break;\n    }\n    return errors;\n}\n","\nimport ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport {isFunction} from '../function';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint';\nimport {supportsPropertyExpression} from '../util/properties';\n\nexport default function validateProperty(options, propertyType) {\n    const key = options.key;\n    const validateSpec = options.validateSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const value = options.value;\n    const propertyKey = options.objectKey;\n    const layerSpec = styleSpec[`${propertyType}_${options.layerType}`];\n\n    if (!layerSpec) return [];\n\n    const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n    if (propertyType === 'paint' && transitionMatch && layerSpec[transitionMatch[1]] && layerSpec[transitionMatch[1]].transition) {\n        return validateSpec({\n            key,\n            value,\n            valueSpec: styleSpec.transition,\n            style,\n            styleSpec\n        });\n    }\n\n    const valueSpec = options.valueSpec || layerSpec[propertyKey];\n    if (!valueSpec) {\n        return [new ValidationError(key, value, `unknown property \"${propertyKey}\"`)];\n    }\n\n    let tokenMatch;\n    if (getType(value) === 'string' && supportsPropertyExpression(valueSpec) && !valueSpec.tokens && (tokenMatch = /^{([^}]+)}$/.exec(value))) {\n        return [new ValidationError(\n            key, value,\n            `\"${propertyKey}\" does not support interpolation syntax\\n` +\n                `Use an identity property function instead: \\`{ \"type\": \"identity\", \"property\": ${JSON.stringify(tokenMatch[1])} }\\`.`)];\n    }\n\n    const errors = [];\n\n    if (options.layerType === 'symbol') {\n        if (propertyKey === 'text-field' && style && !style.glyphs) {\n            errors.push(new ValidationError(key, value, 'use of \"text-field\" requires a style \"glyphs\" property'));\n        }\n        if (propertyKey === 'text-font' && isFunction(deepUnbundle(value)) && unbundle(value.type) === 'identity') {\n            errors.push(new ValidationError(key, value, '\"text-font\" does not support identity functions'));\n        }\n    }\n\n    return errors.concat(validateSpec({\n        key: options.key,\n        value,\n        valueSpec,\n        style,\n        styleSpec,\n        expressionContext: 'property',\n        propertyType,\n        propertyKey\n    }));\n}\n","\nimport validateProperty from './validate_property';\n\nexport default function validatePaintProperty(options) {\n    return validateProperty(options, 'paint');\n}\n","\nimport validateProperty from './validate_property';\n\nexport default function validateLayoutProperty(options) {\n    return validateProperty(options, 'layout');\n}\n","\nimport ValidationError from '../error/validation_error';\nimport {unbundle} from '../util/unbundle_jsonlint';\nimport validateObject from './validate_object';\nimport validateFilter from './validate_filter';\nimport validatePaintProperty from './validate_paint_property';\nimport validateLayoutProperty from './validate_layout_property';\nimport extend from '../util/extend';\n\nexport default function validateLayer(options) {\n    let errors = [];\n\n    const layer = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n\n    if (!layer.type && !layer.ref) {\n        errors.push(new ValidationError(key, layer, 'either \"type\" or \"ref\" is required'));\n    }\n    let type = unbundle(layer.type);\n    const ref = unbundle(layer.ref);\n\n    if (layer.id) {\n        const layerId = unbundle(layer.id);\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const otherLayer = style.layers[i];\n            if (unbundle(otherLayer.id) === layerId) {\n                errors.push(new ValidationError(key, layer.id, `duplicate layer id \"${layer.id}\", previously used at line ${otherLayer.id.__line__}`));\n            }\n        }\n    }\n\n    if ('ref' in layer) {\n        ['type', 'source', 'source-layer', 'filter', 'layout'].forEach((p) => {\n            if (p in layer) {\n                errors.push(new ValidationError(key, layer[p], `\"${p}\" is prohibited for ref layers`));\n            }\n        });\n\n        let parent;\n\n        style.layers.forEach((layer) => {\n            if (unbundle(layer.id) === ref) parent = layer;\n        });\n\n        if (!parent) {\n            errors.push(new ValidationError(key, layer.ref, `ref layer \"${ref}\" not found`));\n        } else if (parent.ref) {\n            errors.push(new ValidationError(key, layer.ref, 'ref cannot reference another ref layer'));\n        } else {\n            type = unbundle(parent.type);\n        }\n    } else if (type !== 'background') {\n        if (!layer.source) {\n            errors.push(new ValidationError(key, layer, 'missing required property \"source\"'));\n        } else {\n            const source = style.sources && style.sources[layer.source];\n            const sourceType = source && unbundle(source.type);\n            if (!source) {\n                errors.push(new ValidationError(key, layer.source, `source \"${layer.source}\" not found`));\n            } else if (sourceType === 'vector' && type === 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster source`));\n            } else if (sourceType !== 'raster-dem' && type === 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster-dem source`));\n            } else if (sourceType === 'raster' && type !== 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a vector source`));\n            } else if (sourceType === 'vector' && !layer['source-layer']) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" must specify a \"source-layer\"`));\n            } else if (sourceType === 'raster-dem' && type !== 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, 'raster-dem source can only be used with layer type \\'hillshade\\'.'));\n            } else if (type === 'line' && layer.paint && layer.paint['line-gradient'] &&\n                       (sourceType !== 'geojson' || !source.lineMetrics)) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" specifies a line-gradient, which requires a GeoJSON source with \\`lineMetrics\\` enabled.`));\n            }\n        }\n    }\n\n    errors = errors.concat(validateObject({\n        key,\n        value: layer,\n        valueSpec: styleSpec.layer,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        validateSpec: options.validateSpec,\n        objectElementValidators: {\n            '*'() {\n                return [];\n            },\n            // We don't want to enforce the spec's `\"requires\": true` for backward compatibility with refs;\n            // the actual requirement is validated above. See https://github.com/mapbox/mapbox-gl-js/issues/5772.\n            type() {\n                return options.validateSpec({\n                    key: `${key}.type`,\n                    value: layer.type,\n                    valueSpec: styleSpec.layer.type,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    object: layer,\n                    objectKey: 'type'\n                });\n            },\n            filter: validateFilter,\n            layout(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validateLayoutProperty(extend({layerType: type}, options));\n                        }\n                    }\n                });\n            },\n            paint(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    validateSpec: options.validateSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validatePaintProperty(extend({layerType: type}, options));\n                        }\n                    }\n                });\n            }\n        }\n    }));\n\n    return errors;\n}\n","\nimport getType from '../util/get_type';\nimport ValidationError from '../error/validation_error';\n\nexport default function validateString(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `string expected, ${type} found`)];\n    }\n\n    return [];\n}\n","import ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport type {RasterDEMSourceSpecification, StyleSpecification} from '../types.g';\nimport v8 from '../reference/v8.json' assert {type: 'json'};\nimport {unbundle} from '../util/unbundle_jsonlint';\n\ninterface ValidateRasterDENSourceOptions {\n    sourceName?: string;\n    value: RasterDEMSourceSpecification;\n    styleSpec: typeof v8;\n    style: StyleSpecification;\n    validateSpec: Function;\n}\n\nexport default function validateRasterDEMSource(\n    options: ValidateRasterDENSourceOptions\n): ValidationError[] {\n\n    const sourceName = options.sourceName ?? '';\n    const rasterDEM = options.value;\n    const styleSpec = options.styleSpec;\n    const rasterDEMSpec = styleSpec.source_raster_dem;\n    const style = options.style;\n\n    let errors = [];\n\n    const rootType = getType(rasterDEM);\n    if (rasterDEM === undefined) {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors.push(new ValidationError('source_raster_dem', rasterDEM, `object expected, ${rootType} found`));\n        return errors;\n    }\n\n    const encoding = unbundle(rasterDEM.encoding);\n    const isCustomEncoding = encoding === 'custom';\n    const customEncodingKeys = ['redFactor', 'greenFactor', 'blueFactor', 'baseShift'];\n    const encodingName = options.value.encoding ? `\"${options.value.encoding}\"` : 'Default';\n\n    for (const key in rasterDEM) {\n        if (!isCustomEncoding && customEncodingKeys.includes(key)) {\n            errors.push(new ValidationError(key, rasterDEM[key], `In \"${sourceName}\": \"${key}\" is only valid when \"encoding\" is set to \"custom\". ${encodingName} encoding found`));\n        } else if (rasterDEMSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: rasterDEM[key],\n                valueSpec: rasterDEMSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        } else {\n            errors.push(new ValidationError(key, rasterDEM[key], `unknown property \"${key}\"`));\n        }\n    }\n\n    return errors;\n}\n","\nimport ValidationError from '../error/validation_error';\nimport {unbundle} from '../util/unbundle_jsonlint';\nimport validateObject from './validate_object';\nimport validateEnum from './validate_enum';\nimport validateExpression from './validate_expression';\nimport validateString from './validate_string';\nimport getType from '../util/get_type';\nimport validateRasterDEMSource from './validate_raster_dem_source';\n\nconst objectElementValidators = {\n    promoteId: validatePromoteId\n};\n\nexport default function validateSource(options) {\n    const value = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n    const validateSpec = options.validateSpec;\n\n    if (!value.type) {\n        return [new ValidationError(key, value, '\"type\" is required')];\n    }\n\n    const type = unbundle(value.type);\n    let errors;\n\n    switch (type) {\n        case 'vector':\n        case 'raster':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec[`source_${type.replace('-', '_')}`],\n                style: options.style,\n                styleSpec,\n                objectElementValidators,\n                validateSpec,\n            });\n            return errors;\n        case 'raster-dem':\n            errors = validateRasterDEMSource({\n                sourceName: key,\n                value,\n                style: options.style,\n                styleSpec,\n                validateSpec,\n            });\n            return errors;\n\n        case 'geojson':\n            errors = validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_geojson,\n                style,\n                styleSpec,\n                validateSpec,\n                objectElementValidators\n            });\n            if (value.cluster) {\n                for (const prop in value.clusterProperties) {\n                    const [operator, mapExpr] = value.clusterProperties[prop];\n                    const reduceExpr = typeof operator === 'string' ? [operator, ['accumulated'], ['get', prop]] : operator;\n\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.map`,\n                        value: mapExpr,\n                        validateSpec,\n                        expressionContext: 'cluster-map'\n                    }));\n                    errors.push(...validateExpression({\n                        key: `${key}.${prop}.reduce`,\n                        value: reduceExpr,\n                        validateSpec,\n                        expressionContext: 'cluster-reduce'\n                    }));\n                }\n            }\n            return errors;\n\n        case 'video':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_video,\n                style,\n                validateSpec,\n                styleSpec\n            });\n\n        case 'image':\n            return validateObject({\n                key,\n                value,\n                valueSpec: styleSpec.source_image,\n                style,\n                validateSpec,\n                styleSpec\n            });\n\n        case 'canvas':\n            return [new ValidationError(key, null, 'Please use runtime APIs to add canvas sources, rather than including them in stylesheets.', 'source.canvas')];\n\n        default:\n            return validateEnum({\n                key: `${key}.type`,\n                value: value.type,\n                valueSpec: {values: ['vector', 'raster', 'raster-dem', 'geojson', 'video', 'image']},\n                style,\n                validateSpec,\n                styleSpec\n            });\n    }\n}\n\nfunction validatePromoteId({key, value}) {\n    if (getType(value) === 'string') {\n        return validateString({key, value});\n    } else {\n        const errors = [];\n        for (const prop in value) {\n            errors.push(...validateString({key: `${key}.${prop}`, value: value[prop]}));\n        }\n        return errors;\n    }\n}\n","import ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\n\nexport default function validateLight(options) {\n    const light = options.value;\n    const styleSpec = options.styleSpec;\n    const lightSpec = styleSpec.light;\n    const style = options.style;\n\n    let errors = [];\n\n    const rootType = getType(light);\n    if (light === undefined) {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('light', light, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n\n    for (const key in light) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n\n        if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: light[key],\n                valueSpec: styleSpec.transition,\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        } else if (lightSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: light[key],\n                valueSpec: lightSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationError(key, light[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    return errors;\n}\n","import ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport v8 from '../reference/v8.json' assert {type: 'json'};\nimport {SkySpecification, StyleSpecification} from '../types.g';\n\ninterface ValidateSkyOptions {\n    sourceName?: string;\n    value: SkySpecification;\n    styleSpec: typeof v8;\n    style: StyleSpecification;\n    validateSpec: Function;\n}\n\nexport default function validateSky(options: ValidateSkyOptions) {\n    const sky = options.value;\n    const styleSpec = options.styleSpec;\n    const skySpec = styleSpec.sky;\n    const style = options.style;\n\n    const rootType = getType(sky);\n    if (sky === undefined) {\n        return [];\n    } else if (rootType !== 'object') {\n        return [new ValidationError('sky', sky, `object expected, ${rootType} found`)];\n    }\n\n    let errors = [];\n    for (const key in sky) {\n        if (skySpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: sky[key],\n                valueSpec: skySpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationError(key, sky[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    return errors;\n}\n","import ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport type {StyleSpecification, TerrainSpecification} from '../types.g';\nimport v8 from '../reference/v8.json' assert {type: 'json'};\n\nexport default function validateTerrain(\n    options: {value: TerrainSpecification; styleSpec: typeof v8; style: StyleSpecification; validateSpec: Function}\n): ValidationError[] {\n\n    const terrain = options.value;\n    const styleSpec = options.styleSpec;\n    const terrainSpec = styleSpec.terrain;\n    const style = options.style;\n\n    let errors = [];\n\n    const rootType = getType(terrain);\n    if (terrain === undefined) {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('terrain', terrain, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n\n    for (const key in terrain) {\n        if (terrainSpec[key]) {\n            errors = errors.concat(options.validateSpec({\n                key,\n                value: terrain[key],\n                valueSpec: terrainSpec[key],\n                validateSpec: options.validateSpec,\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationError(key, terrain[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    return errors;\n}\n","import validateExpression from './validate_expression';\nimport validateString from './validate_string';\n\nexport default function validateFormatted(options: any) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n\n    return validateExpression(options);\n}\n","import validateExpression from './validate_expression';\nimport validateString from './validate_string';\n\nexport default function validateImage(options: any) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n\n    return validateExpression(options);\n}\n","import ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport validateNumber from './validate_number';\n\nexport default function validatePadding(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n\n    if (type === 'array') {\n        if (value.length < 1 || value.length > 4) {\n            return [new ValidationError(key, value, `padding requires 1 to 4 values; ${value.length} values found`)];\n        }\n\n        const arrayElementSpec = {\n            type: 'number'\n        };\n\n        let errors = [];\n        for (let i = 0; i < value.length; i++) {\n            errors = errors.concat(options.validateSpec({\n                key: `${key}[${i}]`,\n                value: value[i],\n                validateSpec: options.validateSpec,\n                valueSpec: arrayElementSpec\n            }));\n        }\n        return errors;\n    } else {\n        return validateNumber({\n            key,\n            value,\n            valueSpec: {}\n        });\n    }\n}\n","import ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport validateArray from './validate_array';\nimport validateEnum from './validate_enum';\n\nexport default function validateVariableAnchorOffsetCollection(options): ValidationError[] {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n    const styleSpec = options.styleSpec;\n\n    if (type !== 'array' || value.length < 1 || value.length % 2 !== 0) {\n        return [new ValidationError(key, value, 'variableAnchorOffsetCollection requires a non-empty array of even length')];\n    }\n\n    let errors = [];\n\n    for (let i = 0; i < value.length; i += 2) {\n        // Elements in even positions should be values from text-anchor enum\n        errors = errors.concat(validateEnum({\n            key: `${key}[${i}]`,\n            value: value[i],\n            valueSpec: styleSpec['layout_symbol']['text-anchor']\n        }));\n\n        // Elements in odd positions should be points (2-element numeric arrays)\n        errors = errors.concat(validateArray({\n            key: `${key}[${i + 1}]`,\n            value: value[i + 1],\n            valueSpec: {\n                length: 2,\n                value: 'number'\n            },\n            validateSpec: options.validateSpec,\n            style: options.style,\n            styleSpec\n        }));\n    }\n\n    return errors;\n}\n","import validateObject from './validate_object';\nimport validateString from './validate_string';\nimport ValidationError from '../error/validation_error';\n\ninterface ValidateSpriteOptions {\n    key: 'sprite';\n    value: unknown; // we don't know how the user defined the \"sprite\"\n    validateSpec: Function;\n}\n\nexport default function validateSprite(options: ValidateSpriteOptions) {\n    let errors = [];\n\n    const sprite = options.value;\n    const key = options.key;\n\n    if (!Array.isArray(sprite)) {\n        return validateString({\n            key,\n            value: sprite\n        });\n\n    } else {\n        const allSpriteIds = [];\n        const allSpriteURLs = [];\n\n        for (const i in sprite) {\n            if (sprite[i].id && allSpriteIds.includes(sprite[i].id)) errors.push(new ValidationError(key, sprite, `all the sprites' ids must be unique, but ${sprite[i].id} is duplicated`));\n            allSpriteIds.push(sprite[i].id);\n\n            if (sprite[i].url && allSpriteURLs.includes(sprite[i].url)) errors.push(new ValidationError(key, sprite, `all the sprites' URLs must be unique, but ${sprite[i].url} is duplicated`));\n            allSpriteURLs.push(sprite[i].url);\n\n            const pairSpec = {\n                id: {\n                    type: 'string',\n                    required: true,\n                },\n                url: {\n                    type: 'string',\n                    required: true,\n                }\n            };\n\n            errors = errors.concat(validateObject({\n                key: `${key}[${i}]`,\n                value: sprite[i],\n                valueSpec: pairSpec,\n                validateSpec: options.validateSpec,\n            }));\n        }\n\n        return errors;\n    }\n}\n","\nimport extend from '../util/extend';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint';\nimport {isExpression} from '../expression';\nimport {isFunction} from '../function';\n\nimport validateFunction from './validate_function';\nimport validateExpression from './validate_expression';\nimport validateObject from './validate_object';\nimport validateArray from './validate_array';\nimport validateBoolean from './validate_boolean';\nimport validateNumber from './validate_number';\nimport validateColor from './validate_color';\nimport validateConstants from './validate_constants';\nimport validateEnum from './validate_enum';\nimport validateFilter from './validate_filter';\nimport validateLayer from './validate_layer';\nimport validateSource from './validate_source';\nimport validateLight from './validate_light';\nimport validateSky from './validate_sky';\nimport validateTerrain from './validate_terrain';\nimport validateString from './validate_string';\nimport validateFormatted from './validate_formatted';\nimport validateImage from './validate_image';\nimport validatePadding from './validate_padding';\nimport validateVariableAnchorOffsetCollection from './validate_variable_anchor_offset_collection';\nimport validateSprite from './validate_sprite';\nimport ValidationError from '../error/validation_error';\n\nconst VALIDATORS = {\n    '*'() {\n        return [];\n    },\n    'array': validateArray,\n    'boolean': validateBoolean,\n    'number': validateNumber,\n    'color': validateColor,\n    'constants': validateConstants,\n    'enum': validateEnum,\n    'filter': validateFilter,\n    'function': validateFunction,\n    'layer': validateLayer,\n    'object': validateObject,\n    'source': validateSource,\n    'light': validateLight,\n    'sky': validateSky,\n    'terrain': validateTerrain,\n    'string': validateString,\n    'formatted': validateFormatted,\n    'resolvedImage': validateImage,\n    'padding': validatePadding,\n    'variableAnchorOffsetCollection': validateVariableAnchorOffsetCollection,\n    'sprite': validateSprite,\n};\n\n/**\n * Main recursive validation function used internally.\n * You should use `validateStyleMin` in the browser or `validateStyle` in node env.\n * @param options - the options object\n * @param options.key - string representing location of validation in style tree. Used only\n * for more informative error reporting.\n * @param options.value - current value from style being evaluated. May be anything from a\n * high level object that needs to be descended into deeper or a simple\n * scalar value.\n * @param options.valueSpec - current spec being evaluated. Tracks value.\n * @param options.styleSpec - current full spec being evaluated.\n * @param options.validateSpec - the validate function itself\n * @param options.style - the style object\n * @param options.objectElementValidators - optional object of functions that will be called\n * @returns an array of errors, or an empty array if no errors are found.\n */\nexport default function validate(options: {\n    key: any;\n    value: any;\n    valueSpec: any;\n    styleSpec: any;\n    validateSpec?: any;\n    style: any;\n    objectElementValidators?: any;}): ValidationError[] {\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const styleSpec = options.styleSpec;\n    options.validateSpec = validate;\n\n    if (valueSpec.expression && isFunction(unbundle(value))) {\n        return validateFunction(options);\n\n    } else if (valueSpec.expression && isExpression(deepUnbundle(value))) {\n        return validateExpression(options);\n\n    } else if (valueSpec.type && VALIDATORS[valueSpec.type]) {\n        return VALIDATORS[valueSpec.type](options);\n\n    } else {\n        const valid = validateObject(extend({}, options, {\n            valueSpec: valueSpec.type ? styleSpec[valueSpec.type] : valueSpec\n        }));\n        return valid;\n    }\n}\n","\nimport ValidationError from '../error/validation_error';\nimport validateString from './validate_string';\n\nexport default function validateGlyphsUrl(options) {\n    const value = options.value;\n    const key = options.key;\n\n    const errors = validateString(options);\n    if (errors.length) return errors;\n\n    if (value.indexOf('{fontstack}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{fontstack}\" token'));\n    }\n\n    if (value.indexOf('{range}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{range}\" token'));\n    }\n\n    return errors;\n}\n","\nimport validateConstants from './validate/validate_constants';\nimport validate from './validate/validate';\nimport latestStyleSpec from './reference/latest';\n\nimport validateSource from './validate/validate_source';\nimport validateLight from './validate/validate_light';\nimport validateSky from './validate/validate_sky';\nimport validateTerrain from './validate/validate_terrain';\nimport validateLayer from './validate/validate_layer';\nimport validateFilter from './validate/validate_filter';\nimport validatePaintProperty from './validate/validate_paint_property';\nimport validateLayoutProperty from './validate/validate_layout_property';\nimport validateSprite from './validate/validate_sprite';\nimport validateGlyphsUrl from './validate/validate_glyphs_url';\nimport ValidationError from './error/validation_error';\nimport type {StyleSpecification} from './types.g';\n\n/**\n * Validate a MapLibre style against the style specification.\n * Use this when running in the browser.\n *\n * @param style - The style to be validated.\n * @param styleSpec - The style specification to validate against.\n * If omitted, the latest style spec is used.\n * @returns an array of errors, or an empty array if no errors are found.\n * @example\n *   const validate = require('@maplibre/maplibre-gl-style-spec/').validateStyleMin;\n *   const errors = validate(style);\n */\nfunction validateStyleMin(style: StyleSpecification, styleSpec = latestStyleSpec): Array<ValidationError> {\n\n    let errors: ValidationError[] = [];\n\n    errors = errors.concat(validate({\n        key: '',\n        value: style,\n        valueSpec: styleSpec.$root,\n        styleSpec,\n        style,\n        validateSpec: validate,\n        objectElementValidators: {\n            glyphs: validateGlyphsUrl,\n            '*'() {\n                return [];\n            }\n        }\n    }));\n\n    if (style['constants']) {\n        errors = errors.concat(validateConstants({\n            key: 'constants',\n            value: style['constants'],\n            style,\n            styleSpec,\n            validateSpec: validate,\n        }));\n    }\n\n    return sortErrors(errors);\n}\n\nvalidateStyleMin.source = wrapCleanErrors(injectValidateSpec(validateSource));\nvalidateStyleMin.sprite = wrapCleanErrors(injectValidateSpec(validateSprite));\nvalidateStyleMin.glyphs = wrapCleanErrors(injectValidateSpec(validateGlyphsUrl));\nvalidateStyleMin.light = wrapCleanErrors(injectValidateSpec(validateLight));\nvalidateStyleMin.sky = wrapCleanErrors(injectValidateSpec(validateSky));\nvalidateStyleMin.terrain = wrapCleanErrors(injectValidateSpec(validateTerrain));\nvalidateStyleMin.layer = wrapCleanErrors(injectValidateSpec(validateLayer));\nvalidateStyleMin.filter = wrapCleanErrors(injectValidateSpec(validateFilter));\nvalidateStyleMin.paintProperty = wrapCleanErrors(injectValidateSpec(validatePaintProperty));\nvalidateStyleMin.layoutProperty = wrapCleanErrors(injectValidateSpec(validateLayoutProperty));\n\nfunction injectValidateSpec(validator: (options: object) => any) {\n    return function(options) {\n        return validator({\n            ...options,\n            validateSpec: validate,\n        });\n    };\n}\n\nfunction sortErrors(errors) {\n    return [].concat(errors).sort((a, b) => {\n        return a.line - b.line;\n    });\n}\n\nfunction wrapCleanErrors(inner) {\n    return function(...args) {\n        return sortErrors(inner.apply(this, args));\n    };\n}\n\nexport default validateStyleMin;\n","// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nconst stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,]/g;\n\nexport default function stringify(passedObj, options = {}) {\n  const indent = JSON.stringify(\n    [1],\n    undefined,\n    options.indent === undefined ? 2 : options.indent\n  ).slice(2, -3);\n\n  const maxLength =\n    indent === \"\"\n      ? Infinity\n      : options.maxLength === undefined\n      ? 80\n      : options.maxLength;\n\n  let { replacer } = options;\n\n  return (function _stringify(obj, currentIndent, reserved) {\n    if (obj && typeof obj.toJSON === \"function\") {\n      obj = obj.toJSON();\n    }\n\n    const string = JSON.stringify(obj, replacer);\n\n    if (string === undefined) {\n      return string;\n    }\n\n    const length = maxLength - currentIndent.length - reserved;\n\n    if (string.length <= length) {\n      const prettified = string.replace(\n        stringOrChar,\n        (match, stringLiteral) => {\n          return stringLiteral || `${match} `;\n        }\n      );\n      if (prettified.length <= length) {\n        return prettified;\n      }\n    }\n\n    if (replacer != null) {\n      obj = JSON.parse(string);\n      replacer = undefined;\n    }\n\n    if (typeof obj === \"object\" && obj !== null) {\n      const nextIndent = currentIndent + indent;\n      const items = [];\n      let index = 0;\n      let start;\n      let end;\n\n      if (Array.isArray(obj)) {\n        start = \"[\";\n        end = \"]\";\n        const { length } = obj;\n        for (; index < length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, index === length - 1 ? 0 : 1) ||\n              \"null\"\n          );\n        }\n      } else {\n        start = \"{\";\n        end = \"}\";\n        const keys = Object.keys(obj);\n        const { length } = keys;\n        for (; index < length; index++) {\n          const key = keys[index];\n          const keyPart = `${JSON.stringify(key)}: `;\n          const value = _stringify(\n            obj[key],\n            nextIndent,\n            keyPart.length + (index === length - 1 ? 0 : 1)\n          );\n          if (value !== undefined) {\n            items.push(keyPart + value);\n          }\n        }\n      }\n\n      if (items.length > 0) {\n        return [start, indent + items.join(`,\\n${nextIndent}`), end].join(\n          `\\n${currentIndent}`\n        );\n      }\n    }\n\n    return string;\n  })(passedObj, \"\", 0);\n}\n","\nimport reference from './reference/latest';\nimport stringifyPretty from 'json-stringify-pretty-compact';\n\nfunction sortKeysBy(obj, reference) {\n    const result = {};\n    for (const key in reference) {\n        if (obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n    }\n    for (const key in obj) {\n        if (result[key] === undefined) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n\n/**\n * Format a MapLibre Style.  Returns a stringified style with its keys\n * sorted in the same order as the reference style.\n *\n * The optional `space` argument is passed to\n * [`JSON.stringify`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify)\n * to generate formatted output.\n *\n * If `space` is unspecified, a default of `2` spaces will be used.\n *\n * @private\n * @param {Object} style a MapLibre Style\n * @param {number} [space] space argument to pass to `JSON.stringify`\n * @returns {string} stringified formatted JSON\n * @example\n * var fs = require('fs');\n * var format = require('maplibre-gl-style-spec').format;\n * var style = fs.readFileSync('./source.json', 'utf8');\n * fs.writeFileSync('./dest.json', format(style));\n * fs.writeFileSync('./dest.min.json', format(style, 0));\n */\nfunction format(style, space = 2) {\n    style = sortKeysBy(style, reference.$root);\n\n    if (style.layers) {\n        style.layers = style.layers.map((layer) => sortKeysBy(layer, reference.layer));\n    }\n\n    return stringifyPretty(style, {indent: space});\n}\n\nexport default format;\n","\nimport {eachSource, eachLayer, eachProperty} from '../visit';\nimport type {LayerSpecification, StyleSpecification} from '../types.g';\n\nfunction eachLayout(layer: LayerSpecification, callback: (_: LayerSpecification['layout'], __: string) => void) {\n    for (const k in layer) {\n        if (k.indexOf('layout') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\n\nfunction eachPaint(layer: LayerSpecification, callback: (_: LayerSpecification['paint'], __: string) => void) {\n    for (const k in layer) {\n        if (k.indexOf('paint') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\n\nfunction resolveConstant(style: StyleSpecification, value: any) {\n    if (typeof value === 'string' && value[0] === '@') {\n        return resolveConstant(style, (style as any).constants[value]);\n    } else {\n        return value;\n    }\n}\n\nfunction isFunction(value) {\n    return Array.isArray(value.stops);\n}\n\nfunction renameProperty(obj: Object, from: string, to: string) {\n    obj[to] = obj[from]; delete obj[from];\n}\n\nexport default function migrateV8(style: StyleSpecification) {\n    style.version = 8;\n\n    // Rename properties, reverse coordinates in source and layers\n    eachSource(style, (source) => {\n        if (source.type === 'video' && source['url'] !== undefined) {\n            renameProperty(source, 'url', 'urls');\n        }\n        if (source.type === 'video') {\n            source.coordinates.forEach((coord) => {\n                return coord.reverse();\n            });\n        }\n    });\n\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['symbol-min-distance'] !== undefined) {\n                renameProperty(layout, 'symbol-min-distance', 'symbol-spacing');\n            }\n        });\n\n        eachPaint(layer, (paint) => {\n            if (paint['background-image'] !== undefined) {\n                renameProperty(paint, 'background-image', 'background-pattern');\n            }\n            if (paint['line-image'] !== undefined) {\n                renameProperty(paint, 'line-image', 'line-pattern');\n            }\n            if (paint['fill-image'] !== undefined) {\n                renameProperty(paint, 'fill-image', 'fill-pattern');\n            }\n        });\n    });\n\n    // Inline Constants\n    eachProperty(style, {paint: true, layout: true}, (property) => {\n        const value = resolveConstant(style, property.value);\n\n        if (isFunction(value)) {\n            value.stops.forEach((stop) => {\n                stop[1] = resolveConstant(style, stop[1]);\n            });\n        }\n\n        property.set(value);\n    });\n    delete style['constants'];\n\n    eachLayer(style, (layer) => {\n        // get rid of text-max-size, icon-max-size\n        // turn text-size, icon-size into layout properties\n        // https://github.com/mapbox/mapbox-gl-style-spec/issues/255\n\n        eachLayout(layer, (layout) => {\n            delete layout['text-max-size'];\n            delete layout['icon-max-size'];\n        });\n\n        eachPaint(layer, (paint) => {\n            if (paint['text-size']) {\n                if (!layer.layout) layer.layout = {};\n                layer.layout['text-size'] = paint['text-size'];\n                delete paint['text-size'];\n            }\n\n            if (paint['icon-size']) {\n                if (!layer.layout) layer.layout = {};\n                layer.layout['icon-size'] = paint['icon-size'];\n                delete paint['icon-size'];\n            }\n        });\n    });\n\n    function migrateFontStack(font) {\n        function splitAndTrim(string) {\n            return string.split(',').map((s) => {\n                return s.trim();\n            });\n        }\n\n        if (Array.isArray(font)) {\n            // Assume it's a previously migrated font-array.\n            return font;\n\n        } else if (typeof font === 'string') {\n            return splitAndTrim(font);\n\n        } else if (typeof font === 'object') {\n            font.stops.forEach((stop) => {\n                stop[1] = splitAndTrim(stop[1]);\n            });\n            return font;\n\n        } else {\n            throw new Error('unexpected font value');\n        }\n    }\n\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['text-font']) {\n                layout['text-font'] = migrateFontStack(layout['text-font']);\n            }\n        });\n    });\n\n    // Reverse order of symbol layers. This is an imperfect migration.\n    //\n    // The order of a symbol layer in the layers list affects two things:\n    // - how it is drawn relative to other layers (like oneway arrows below bridges)\n    // - the placement priority compared to other layers\n    //\n    // It's impossible to reverse the placement priority without breaking the draw order\n    // in some cases. This migration only reverses the order of symbol layers that\n    // are above all other types of layers.\n    //\n    // Symbol layers that are at the top of the map preserve their priority.\n    // Symbol layers that are below another type (line, fill) of layer preserve their draw order.\n\n    let firstSymbolLayer = 0;\n    for (let i = style.layers.length - 1; i >= 0; i--) {\n        const layer = style.layers[i];\n        if (layer.type !== 'symbol') {\n            firstSymbolLayer = i + 1;\n            break;\n        }\n    }\n\n    const symbolLayers = style.layers.splice(firstSymbolLayer);\n    symbolLayers.reverse();\n    style.layers = style.layers.concat(symbolLayers);\n\n    return style;\n}\n","import {eachLayer, eachProperty} from '../visit';\nimport {isExpression} from '../expression';\nimport convertFunction, {convertTokenString} from '../function/convert';\nimport convertFilter from '../feature_filter/convert';\n\nimport type {FilterSpecification, LayerSpecification, StyleSpecification} from '../types.g';\n\n/**\n * Migrate the given style object in place to use expressions. Specifically,\n * this will convert (a) \"stop\" functions, and (b) legacy filters to their\n * expression equivalents.\n * @param style The style object to migrate.\n * @returns The migrated style object.\n */\nexport default function expressions(style: StyleSpecification) {\n    const converted = [];\n\n    eachLayer(style, (layer: LayerSpecification & { filter?: FilterSpecification }) => {\n        if (layer.filter) {\n            layer.filter = convertFilter(layer.filter);\n        }\n    });\n\n    eachProperty(style, {paint: true, layout: true}, ({path, value, reference, set}) => {\n        if (isExpression(value)) return;\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            set(convertFunction(value, reference));\n            converted.push(path.join('.'));\n        } else if ((reference as any).tokens && typeof value === 'string') {\n            set(convertTokenString(value));\n        }\n    });\n\n    return style;\n}\n\n","/**\n * Migrate color style values to supported format.\n *\n * @param colorToMigrate Color value to migrate, could be a string or an expression.\n * @returns Color style value in supported format.\n */\nexport default function migrateColors<T>(colorToMigrate: T): T {\n    return JSON.parse(migrateHslColors(JSON.stringify(colorToMigrate)));\n}\n\n/**\n * Created to migrate from colors supported by the former CSS color parsing\n * library `csscolorparser` but not compliant with the CSS Color specification,\n * like `hsl(900, 0.15, 90%)`.\n *\n * @param colorToMigrate Serialized color style value.\n * @returns A serialized color style value in which all non-standard hsl color values\n * have been converted to a format that complies with the CSS Color specification.\n *\n * @example\n * migrateHslColors('\"hsl(900, 0.15, 90%)\"'); // returns '\"hsl(900, 15%, 90%)\"'\n * migrateHslColors('\"hsla(900, .15, .9)\"'); // returns '\"hsl(900, 15%, 90%)\"'\n * migrateHslColors('\"hsl(900, 15%, 90%)\"'); // returns '\"hsl(900, 15%, 90%)\"' - no changes\n */\nfunction migrateHslColors(colorToMigrate: string): string {\n    return colorToMigrate.replace(/\"hsla?\\((.+?)\\)\"/gi, (match, hslArgs) => {\n        const argsMatch = hslArgs.match(/^(.+?)\\s*,\\s*(.+?)\\s*,\\s*(.+?)(?:\\s*,\\s*(.+))?$/i);\n        if (argsMatch) {\n            let [h, s, l, a] = argsMatch.slice(1);\n            [s, l] = [s, l].map(v => v.endsWith('%') ? v : `${parseFloat(v) * 100}%`);\n            return `\"hsl${typeof a === 'string' ? 'a' : ''}(${[h, s, l, a].filter(Boolean).join(',')})\"`;\n        }\n        return match;\n    });\n}\n","\nimport migrateToV8 from './migrate/v8';\nimport migrateToExpressions from './migrate/expressions';\nimport migrateColors from './migrate/migrate_colors';\nimport {eachProperty} from './visit';\nimport type {StyleSpecification} from './types.g';\n\n/**\n * Migrate a Mapbox/MapLibre GL Style to the latest version.\n *\n * @param style - a MapLibre Style\n * @returns a migrated style\n * @example\n * const fs = require('fs');\n * csont migrate = require('@maplibre/maplibre-gl-style-spec').migrate;\n * const style = fs.readFileSync('./style.json', 'utf8');\n * fs.writeFileSync('./style.json', JSON.stringify(migrate(style)));\n */\nexport default function migrate(style: StyleSpecification): StyleSpecification {\n    let migrated = false;\n\n    if (style.version as any === 7) {\n        style = migrateToV8(style);\n        migrated = true;\n    }\n\n    if (style.version === 8) {\n        migrated = !!migrateToExpressions(style);\n        migrated = true;\n    }\n\n    eachProperty(style, {paint: true, layout: true}, ({value, reference, set}) => {\n        if (reference.type === 'color') {\n            set(migrateColors(value));\n        }\n    });\n\n    if (!migrated) {\n        throw new Error(`Cannot migrate from ${style.version}`);\n    }\n\n    return style;\n}\n","type ExpressionType = 'data-driven' | 'cross-faded' | 'cross-faded-data-driven' | 'color-ramp' | 'data-constant' | 'constant';\ntype ExpressionParameters = Array<'zoom' | 'feature' | 'feature-state' | 'heatmap-density' | 'line-progress'>;\n\ntype ExpressionSpecificationDefinition = {\n    interpolated: boolean;\n    parameters: ExpressionParameters;\n};\n\nexport type StylePropertySpecification = {\n    type: 'number';\n    'property-type': ExpressionType;\n    expression?: ExpressionSpecificationDefinition;\n    transition: boolean;\n    default?: number;\n} | {\n    type: 'string';\n    'property-type': ExpressionType;\n    expression?: ExpressionSpecificationDefinition;\n    transition: boolean;\n    default?: string;\n    tokens?: boolean;\n} | {\n    type: 'boolean';\n    'property-type': ExpressionType;\n    expression?: ExpressionSpecificationDefinition;\n    transition: boolean;\n    default?: boolean;\n} | {\n    type: 'enum';\n    'property-type': ExpressionType;\n    expression?: ExpressionSpecificationDefinition;\n    values: {[_: string]: {}};\n    transition: boolean;\n    default?: string;\n} | {\n    type: 'color';\n    'property-type': ExpressionType;\n    expression?: ExpressionSpecificationDefinition;\n    transition: boolean;\n    default?: string;\n    overridable: boolean;\n} | {\n    type: 'array';\n    value: 'number';\n    'property-type': ExpressionType;\n    expression?: ExpressionSpecificationDefinition;\n    length?: number;\n    transition: boolean;\n    default?: Array<number>;\n} | {\n    type: 'array';\n    value: 'string';\n    'property-type': ExpressionType;\n    expression?: ExpressionSpecificationDefinition;\n    length?: number;\n    transition: boolean;\n    default?: Array<string>;\n} | {\n    type: 'padding';\n    'property-type': ExpressionType;\n    expression?: ExpressionSpecificationDefinition;\n    transition: boolean;\n    default?: number | Array<number>;\n} | {\n    type: 'variableAnchorOffsetCollection';\n    'property-type': ExpressionType;\n    expression?: ExpressionSpecificationDefinition;\n    transition: boolean;\n    default?: VariableAnchorOffsetCollectionSpecification;\n};\n\nimport v8Spec from './reference/v8.json' assert {type: 'json'};\nconst v8 = v8Spec as any;\nimport latest from './reference/latest';\nimport derefLayers from './deref';\nimport diff from './diff';\nimport ValidationError from './error/validation_error';\nimport ParsingError from './error/parsing_error';\nimport {FeatureState, StyleExpression, isExpression, isZoomExpression, createExpression, createPropertyExpression, normalizePropertyExpression, ZoomConstantExpression, ZoomDependentExpression, StylePropertyFunction, Feature, GlobalProperties, SourceExpression, CompositeExpression, StylePropertyExpression} from './expression';\nimport featureFilter, {isExpressionFilter} from './feature_filter';\n\nimport convertFilter from './feature_filter/convert';\nimport Color from './util/color';\nimport Padding from './util/padding';\nimport VariableAnchorOffsetCollection from './util/variable_anchor_offset_collection';\nimport Formatted, {FormattedSection} from './expression/types/formatted';\nimport {createFunction, isFunction} from './function';\nimport convertFunction from './function/convert';\nimport {eachSource, eachLayer, eachProperty} from './visit';\nimport ResolvedImage from './expression/types/resolved_image';\nimport {supportsPropertyExpression} from './util/properties';\nimport {IMercatorCoordinate, ICanonicalTileID, ILngLat, ILngLatLike} from './tiles_and_coordinates';\nimport EvaluationContext from './expression/evaluation_context';\nimport {FormattedType, NullType, Type, toString, ColorType} from './expression/types';\n\nimport interpolates, {interpolateFactory} from './util/interpolate';\nimport {expressions} from './expression/definitions';\nimport Interpolate from './expression/definitions/interpolate';\nimport type {InterpolationType} from './expression/definitions/interpolate';\n\nimport groupByLayout from './group_by_layout';\nimport emptyStyle from './empty';\nimport validateStyleMin from './validate_style.min';\nimport Step from './expression/definitions/step';\nimport {typeOf} from './expression/values';\nimport FormatExpression from './expression/definitions/format';\nimport Literal from './expression/definitions/literal';\nimport CompoundExpression from './expression/compound_expression';\nimport {VariableAnchorOffsetCollectionSpecification} from './types.g';\nimport format from './format';\nimport validate from './validate/validate';\nimport migrate from './migrate';\nimport {classifyRings} from './util/classify_rings';\n\nconst expression = {\n    StyleExpression,\n    StylePropertyFunction,\n    ZoomConstantExpression,\n    ZoomDependentExpression,\n    createExpression,\n    createPropertyExpression,\n    isExpression,\n    isExpressionFilter,\n    isZoomExpression,\n    normalizePropertyExpression,\n};\n\nconst styleFunction = {\n    convertFunction,\n    createFunction,\n    isFunction\n};\n\nconst visit = {eachLayer, eachProperty, eachSource};\n\nexport {\n    Interpolate,\n    InterpolationType,\n    ValidationError,\n    ParsingError,\n    FeatureState,\n    Color,\n    Step,\n    CompoundExpression,\n    Padding,\n    VariableAnchorOffsetCollection,\n    Formatted,\n    ResolvedImage,\n    Feature,\n    EvaluationContext,\n    GlobalProperties,\n    SourceExpression,\n    CompositeExpression,\n    FormattedSection,\n    IMercatorCoordinate,\n    ICanonicalTileID,\n    ILngLat,\n    ILngLatLike,\n    StyleExpression,\n    ZoomConstantExpression,\n    Literal,\n    Type,\n    StylePropertyFunction,\n    StylePropertyExpression,\n    ZoomDependentExpression,\n    FormatExpression,\n\n    latest,\n\n    interpolateFactory,\n    validateStyleMin,\n    groupByLayout,\n    emptyStyle,\n    derefLayers,\n    normalizePropertyExpression,\n    isExpression,\n    isZoomExpression,\n    diff,\n    supportsPropertyExpression,\n    convertFunction,\n    createExpression,\n    isFunction, createFunction,\n    createPropertyExpression,\n    convertFilter,\n    featureFilter,\n    typeOf,\n    toString,\n    format,\n    validate,\n    migrate,\n    classifyRings,\n\n    ColorType,\n    interpolates,\n    v8,\n    NullType,\n    styleFunction as function,\n    visit,\n    expressions,\n    expression,\n    FormattedType,\n};\n"],"names":["isEqual","array","toString","types","valueToString","UnitBezier","defaultCompare","expressions","typeToString","isFunction","extend","coalesce","definitions","convertFilter","convertComparisonOp","convertInOp","convertHasOp","Reference","stringify","latest","latestStyleSpec","reference","stringifyPretty","migrateToV8","migrateToExpressions"],"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","x_google_ignoreList":[35,47,48,94]}