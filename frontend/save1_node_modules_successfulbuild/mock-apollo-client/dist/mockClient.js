"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createMockClient = void 0;
var core_1 = require("@apollo/client/core");
var cache_1 = require("@apollo/client/cache");
var mockLink_1 = require("./mockLink");
var createMockClient = function (options) {
    if (options === null || options === void 0 ? void 0 : options.link) {
        throw new Error('Providing link to use is not supported.');
    }
    var mockLink = new mockLink_1.MockLink();
    var client = new core_1.ApolloClient(__assign(__assign({ cache: new cache_1.InMemoryCache({
            addTypename: false,
        }) }, options), { link: mockLink }));
    var mockMethods = {
        setRequestHandler: mockLink.setRequestHandler.bind(mockLink),
    };
    return Object.assign(client, mockMethods);
};
exports.createMockClient = createMockClient;
