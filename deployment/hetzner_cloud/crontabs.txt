# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command

# `yarn` creates output in `/tmp` directory. This output is generated whenever `yarn start` is called. 
# This is especially problematic on staging systems where instable versions are automatically deployed which can lead to an ever restarting, 
# hence generating a lot of yarn output.
# the following hourly cron clean the /tmp folder
0 * * * * find /tmp -name "yarn--*" -exec rm -r {} \; > /dev/null

# cronjob for a daily db backup at 3:00am
0 3 * * * ~/gradido/deployment/bare_metal/backup.sh

# cronjob for a daily logfile clearance at 3:15 
# remove all log files older than 30 days
15 3 * * * ~/gradido/deployment/bare_metal/removeLogFiles.sh


