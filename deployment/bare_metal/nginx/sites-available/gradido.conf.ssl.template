include /etc/nginx/common/limit_requests.conf;

server {
    if ($host = $COMMUNITY_HOST) {
        return 301 https://$host$request_uri;
    }

    server_name $COMMUNITY_HOST;
    listen 80;
    listen [::]:80;
    return 404;
}

server {
    server_name $COMMUNITY_HOST;

    listen [::]:443 ssl ipv6only=on http2;
    listen 443 ssl http2;
    ssl_certificate $NGINX_SSL_CERTIFICATE;
    ssl_certificate_key $NGINX_SSL_CERTIFICATE_KEY;
    include $NGINX_SSL_INCLUDE;
    ssl_dhparam $NGINX_SSL_DHPARAM;

    include /etc/nginx/common/protect.conf;
    include /etc/nginx/common/protect_add_header.conf;

    # protect from slow loris
    client_body_timeout 10s;
    client_header_timeout 10s;
    send_timeout 10s;
    
    # protect from range attack (in http header)
    if ($http_range ~ "d{9,}") {
        return 444;
    }

    gzip_static  on;
    gzip on;
    gzip_proxied any;
    gzip_types
        text/css
        text/javascript
        text/xml
        text/plain
        application/javascript
        application/x-javascript
        application/json;

    # Legacy URLS
    set $REWRITE_LEGACY_URLS "$NGINX_REWRITE_LEGACY_URLS";
    if ($REWRITE_LEGACY_URLS = 'true') {
        rewrite ^/vue/?(.*)$ /$1 permanent;
    }

    # Frontend (default)
    location / {
        limit_req zone=frontend burst=150 nodelay;
        limit_conn addr 60;
        root $PROJECT_ROOT/frontend/build/;
        index index.html;

        # caching rules for assets
        # static assets
        location ~* \.(?:woff2?|ttf|otf|eot|jpg|jpeg|png|gif|svg|webp|ico)$ {
            # keep assets for a week
            add_header Cache-Control "public, max-age=604800";
            try_files $uri =404;
        }
        # hashed assets
        location ~* \.(?:js|css|json)$ {
            add_header Cache-Control "public, max-age=31536000, immutable";
            try_files $uri =404;
        }

        try_files $uri $uri/ /index.html = 404;   

        # don't cache index.html
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires 0;
        
        access_log $GRADIDO_LOG_PATH/nginx-access.frontend.log gradido_log;
        error_log $GRADIDO_LOG_PATH/nginx-error.frontend.log warn;
  }

    # Backend
    location /graphql {
        limit_req zone=backend burst=40 nodelay;
        limit_conn addr 20;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection 'upgrade';
        proxy_set_header   X-Forwarded-For $remote_addr;
        proxy_set_header   X-Real-IP  $remote_addr;
        proxy_set_header   Host $host;
        
        proxy_pass         http://127.0.0.1:4000;
        proxy_redirect     off;

        access_log $GRADIDO_LOG_PATH/nginx-access.backend.log gradido_log;
        error_log $GRADIDO_LOG_PATH/nginx-error.backend.log warn;
    }

    # Backend webhooks
    location /hook {
        limit_req zone=backend burst=20 nodelay;
        limit_conn addr 20;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection 'upgrade';
        proxy_set_header   X-Forwarded-For $remote_addr;
        proxy_set_header   X-Real-IP  $remote_addr;
        proxy_set_header   Host $host;
        
        proxy_pass         http://127.0.0.1:4000/hook;
        proxy_redirect     off;

        access_log $GRADIDO_LOG_PATH/nginx-access.backend.hook.log gradido_log;
        error_log $GRADIDO_LOG_PATH/nginx-error.backend.hook.log warn;
    }

    # Webhook reverse proxy
    location /hooks/ {
        limit_req zone=backend burst=20 nodelay;
        limit_conn addr 20;
        proxy_pass http://127.0.0.1:9000/hooks/;

        access_log $GRADIDO_LOG_PATH/nginx-access.hooks.log gradido_log;
        error_log $GRADIDO_LOG_PATH/nginx-error.hooks.log warn;
    }

    # Well-Known for openid connect
    location /.well-known/ {
        limit_req zone=backend burst=20 nodelay;
        limit_conn addr 10;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection 'upgrade';
        proxy_set_header   X-Forwarded-For $remote_addr;
        proxy_set_header   X-Real-IP  $remote_addr;
        proxy_set_header   Host $host;

        proxy_pass http://127.0.0.1:4000/.well-known/;
        proxy_redirect     off;

        access_log $GRADIDO_LOG_PATH/nginx-access.well-known.log gradido_log;
        error_log $GRADIDO_LOG_PATH/nginx-error.well-known.log warn;
    }

    # Admin Frontend
    location /admin {
        limit_req zone=frontend burst=30 nodelay;
        limit_conn addr 20;
        #rewrite ^/admin/(.*)$ /$1 break;
        alias $PROJECT_ROOT/admin/build/;
        index index.html;

        # caching rules for assets
        # static assets
        location ~* \.(?:woff2?|ttf|otf|eot|jpg|jpeg|png|gif|svg|webp|ico)$ {
            # keep assets for a week
            add_header Cache-Control "public, max-age=604800";
            try_files $uri =404;
        }
        # hashed assets
        location ~* \.(?:js|css|json)$ {
            add_header Cache-Control "public, max-age=31536000, immutable";
            try_files $uri =404;
        }

        try_files $uri $uri/ /index.html = 404;

        # don't cache index.html
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires 0;

        access_log $GRADIDO_LOG_PATH/nginx-access.admin.log gradido_log;
        error_log $GRADIDO_LOG_PATH/nginx-error.admin.log warn;
    }
    
    # Federation
    $FEDERATION_NGINX_CONF

    # TODO this could be a performance optimization
    #location /vue {
    #    alias /var/www/html/gradido/frontend/build;
    #    index index.html;
    #
    #    location ~* \.(png)$ {
    #        expires 39d;
    #    }
    #    try_files $uri $uri/ /index.html = 404;
    #}
}