# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""Type of account"""
enum AccountType {
  COMMUNITY_AUF
  COMMUNITY_GMW
  COMMUNITY_HUMAN
  COMMUNITY_PROJECT
  CRYPTO_ACCOUNT
  NONE
  SUBACCOUNT
}

type Community {
  confirmedAt: String!
  createdAt: String!
  foreign: Boolean!
  id: Int!
  iotaTopic: String!
  rootPublicKeyHex: String!
}

input CommunityDraft {
  createdAt: String!
  foreign: Boolean!
  uuid: String!
}

input ConfirmedTransactionInput {
  iotaTopic: String!
  transactionBase64: String!
}

"""The `Decimal` scalar type to represent currency values"""
scalar Decimal

"""Type of the transaction"""
enum InputTransactionType {
  CREATION
  RECEIVE
  SEND
}

type Mutation {
  addCommunity(data: CommunityDraft!): TransactionResult!
  newGradidoBlock(data: ConfirmedTransactionInput!): TransactionResult!
  registerAddress(data: UserAccountDraft!): TransactionResult!
  sendTransaction(data: TransactionDraft!): TransactionResult!
}

type Query {
  communities(confirmed: Boolean, foreign: Boolean, uuid: String): [Community!]!
  community(confirmed: Boolean, foreign: Boolean, uuid: String): Community!
  isCommunityExist(confirmed: Boolean, foreign: Boolean, uuid: String): Boolean!
}

input TransactionDraft {
  amount: Decimal!
  backendTransactionId: Int!
  createdAt: String!
  recipientUser: UserIdentifier!
  senderUser: UserIdentifier!
  targetDate: String
  type: InputTransactionType!
}

type TransactionError {
  message: String!
  name: String!
  type: TransactionErrorType!
}

"""Transaction Error Type"""
enum TransactionErrorType {
  ALREADY_EXIST
  DB_ERROR
  INVALID_SIGNATURE
  LOGIC_ERROR
  MISSING_PARAMETER
  NOT_FOUND
  NOT_IMPLEMENTED_YET
  PROTO_DECODE_ERROR
}

type TransactionResult {
  error: TransactionError
  recipe: String
  succeed: Boolean!
}

input UserAccountDraft {
  accountType: AccountType!
  createdAt: String!
  user: UserIdentifier!
}

input UserIdentifier {
  accountNr: Int = 1
  communityUuid: String
  uuid: String!
}