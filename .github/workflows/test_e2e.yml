name: Gradido End-to-End Test CI

on: push

jobs:
  end-to-end-tests:
    name: End-to-End Tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '18.20.7'

      - name: install bun 
        uses: oven-sh/setup-bun@v2

      - name: Boot up test system | docker-compose mariadb mailserver
        run: docker compose -f docker-compose.yml -f docker-compose.test.yml up --detach mariadb mailserver

      - name: Prepare test system
        run: |
          sudo chown runner:docker -R *
          bun install
          sudo cp ./nginx/e2e-test.conf /etc/nginx/sites-available/default

      - name: Boot up test system | seed backend
        run: bun turbo seed

      - name: Moving logs after seeding
        run: |
          mkdir -p /home/runner/work/gradido/gradido/logs/backend/seed
          mv /home/runner/work/gradido/gradido/logs/backend/*.log /home/runner/work/gradido/gradido/logs/backend/seed/

      - name: Boot up test system | docker-compose backend, frontend
        run: |
          cd backend
          cp .env.test_e2e .env
          cd ..
          bun turbo backend#build
          bun turbo frontend#build
          bun turbo backend#start frontend#start --env-mode=loose 
        
      - name: End-to-end tests | prepare
        run: |
          wget --no-verbose -O /opt/cucumber-json-formatter "https://github.com/cucumber/json-formatter/releases/download/v19.0.0/cucumber-json-formatter-linux-386"
          chmod +x /opt/cucumber-json-formatter
          sudo ln -fs /opt/cucumber-json-formatter /usr/bin/cucumber-json-formatter
          cd e2e-tests/
          bun install  --production

      - name: wait for frontend and backend to be ready
        run: |
          until nc -z 127.0.0.1 3000; do echo waiting for frontend; sleep 1; done;
          until nc -z 127.0.0.1 4000; do echo waiting for backend; sleep 1; done;
        
      - name: Start local nginx webserver
        run: |
          sudo nginx -t
          sudo systemctl start nginx 

      - name: wait for nginx and mailserver to be ready
        run: |
          until nc -z 127.0.0.1 80; do echo waiting for nginx; sleep 1; done;
          until nc -z 127.0.0.1 1025; do echo waiting for mailserver; sleep 1; done;

      - name: End-to-end tests | run tests
        id: e2e-tests
        run: |
          cd e2e-tests/
          yarn run cypress run

      - name: End-to-end tests | if tests failed, compile html report
        if: ${{ failure() && steps.e2e-tests.conclusion == 'failure' }}
        run: |
          cd e2e-tests/
          node create-cucumber-html-report.js

      - name: End-to-end tests | if tests failed, get pr number
        id: pr
        if: ${{ failure() && steps.e2e-tests.conclusion == 'failure' }}
        uses: 8BitJonny/gh-get-current-pr@2.2.0

      - name: End-to-end tests | if tests failed, upload report
        id: e2e-report
        if: ${{ failure() && steps.e2e-tests.conclusion == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: cypress-report-pr-#${{ steps.pr.outputs.number }}
          path: /home/runner/work/gradido/gradido/e2e-tests/cypress/reports/cucumber_html_report

      - name: End-to-end tests | if tests failed, upload video
        id: e2e-video
        if: ${{ failure() && steps.e2e-tests.conclusion == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos-pr-#${{ steps.pr.outputs.number }}
          path: /home/runner/work/gradido/gradido/e2e-tests/cypress/videos
      
      - name: End-to-end tests | if tests failed, upload logs
        if: ${{ failure() && steps.e2e-tests.conclusion == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: backend-logs-pr-#${{ steps.pr.outputs.number }}
          path: /home/runner/work/gradido/gradido/logs/backend

  end-to-end-tests-playwright:
    name: End-to-End Tests Playwright
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '18.20.7'

      - name: install bun 
        uses: oven-sh/setup-bun@v2

      - name: Boot up test system | docker-compose mariadb mailserver
        run: docker compose -f docker-compose.yml -f docker-compose.test.yml up --detach mailserver
      
      - name: Start mysql 
        run: |
          sudo systemctl start mysql.service
          sudo mysql -u root -proot <<EOF
          ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root';
          FLUSH PRIVILEGES;
          EOF
          sudo mysql -u root -proot -e "SELECT user, host, plugin FROM mysql.user;"

      - name: Prepare test system
        run: |
          sudo chown runner:docker -R *
          bun install
          sudo cp ./nginx/e2e-test.conf /etc/nginx/sites-available/default

      - name: Boot up test system | seed backend
        run: |
          cd frontend
          cp .env.test_e2e .env
          cd ../backend
          cp .env.test_e2e .env
          cd ../database
          cp .env.test_e2e .env
          cd ..
          bun turbo seed --env-mode=loose

      - name: Moving logs after seeding
        run: |
          mkdir -p /home/runner/work/gradido/gradido/logs/backend/seed
          mv /home/runner/work/gradido/gradido/logs/backend/*.log /home/runner/work/gradido/gradido/logs/backend/seed/

      - name: Boot up test system | docker-compose backend, frontend
        run: |
          bun turbo backend#build frontend#build --env-mode=loose
          bun turbo backend#start frontend#start --env-mode=loose & 
        
      - name: End-to-end tests | prepare
        run: |
          cd e2e-tests/playwright/typescript
          bun install 

      - name: wait for frontend and backend to be ready
        run: |
          until nc -z 127.0.0.1 3000; do echo waiting for frontend; sleep 1; done;
          until nc -z 127.0.0.1 4000; do echo waiting for backend; sleep 1; done;
        
      - name: Start local nginx webserver
        run: |
          sudo nginx -t
          sudo systemctl start nginx 

      - name: wait for nginx and mailserver to be ready
        run: |
          until nc -z 127.0.0.1 80; do echo waiting for nginx; sleep 1; done;
          until nc -z 127.0.0.1 1025; do echo waiting for mailserver; sleep 1; done;

      - name: End-to-end tests | run tests
        id: e2e-tests
        run: |
          cd e2e-tests/playwright/typescript
          bun run test --project="Google Chrome"
        
      - name: End-to-end tests | if tests failed, upload video
        id: e2e-video
        if: ${{ failure() && steps.e2e-tests.conclusion == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos-pr-#${{ steps.pr.outputs.number }}
          path: /home/runner/work/gradido/gradido/e2e-tests/playwright/typescript/test-results

  end-to-end-tests-playwright-java:
    name: End-to-End Tests Playwright java
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '18.20.7'

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: install bun 
        uses: oven-sh/setup-bun@v2

      - name: Boot up test system | docker-compose mariadb mailserver
        run: docker compose -f docker-compose.yml -f docker-compose.test.yml up --detach mariadb mailserver

      - name: Prepare test system
        run: |
          sudo chown runner:docker -R *
          bun install
          sudo cp ./nginx/e2e-test.conf /etc/nginx/sites-available/default

      - name: Boot up test system | seed backend
        run: bun turbo seed

      - name: Moving logs after seeding
        run: |
          mkdir -p /home/runner/work/gradido/gradido/logs/backend/seed
          mv /home/runner/work/gradido/gradido/logs/backend/*.log /home/runner/work/gradido/gradido/logs/backend/seed/

      - name: Boot up test system | docker-compose backend, frontend
        run: |
          cd backend
          cp .env.test_e2e .env
          cd ..
          bun turbo backend#build
          bun turbo frontend#build
          bun turbo backend#start frontend#start --env-mode=loose 
        
      - name: End-to-end tests | prepare
        run: |
          cd e2e-tests/playwright/typescript
          bun install 
      
      - name: wait for frontend and backend to be ready
        run: |
          until nc -z 127.0.0.1 3000; do echo waiting for frontend; sleep 1; done;
          until nc -z 127.0.0.1 4000; do echo waiting for backend; sleep 1; done;
        
      - name: Start local nginx webserver
        run: |
          sudo nginx -t
          sudo systemctl start nginx 

      - name: wait for nginx and mailserver to be ready
        run: |
          until nc -z 127.0.0.1 80; do echo waiting for nginx; sleep 1; done;
          until nc -z 127.0.0.1 1025; do echo waiting for mailserver; sleep 1; done;

      - name: End-to-end tests | run tests
        id: e2e-tests
        run: |
          cd e2e-tests/playwright/java
          mvn -B install -D skipTests --no-transfer-progress
          mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install --with-deps"
          mvn test