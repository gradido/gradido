name: Gradido Database Test CI

on: push

jobs:
  files-changed:
    name: Detect File Changes - Database
    runs-on: ubuntu-latest
    outputs:
      database: ${{ steps.changes.outputs.database }}
      shared: ${{ steps.changes.outputs.shared }}
      docker-compose: ${{ steps.changes.outputs.docker-compose }}
      mariadb: ${{ steps.changes.outputs.mariadb }}
    steps:
      - uses: actions/checkout@v3.3.0

      - name: Check for frontend file changes
        uses: dorny/paths-filter@v2.11.1
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/file-filters.yml
          list-files: shell

  build:
    if: needs.files-changed.outputs.database == 'true' || needs.files-changed.outputs.docker-compose == 'true' || needs.files-changed.outputs.shared == 'true'
    name: Docker Build Test - Database up
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Database | Build image
        run: docker build --target build -t "gradido/database:build" -f database/Dockerfile .

  database_migration_test:
    if: needs.files-changed.outputs.database == 'true' || needs.files-changed.outputs.docker-compose == 'true' || needs.files-changed.outputs.mariadb == 'true' || needs.files-changed.outputs.shared == 'true'
    name: Database Migration Test - Up, Test + Reset
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '18.20.7'

      - name: Database | docker-compose
        run: docker compose -f docker-compose.yml -f docker-compose.test.yml up --detach mariadb

      - name: install bun 
        uses: oven-sh/setup-bun@v2

      - name: install dependencies
        run: |
          bun install --filter database --frozen-lockfile
          bun install --global --no-save turbo@^2

      - name: Database | up + test
        run: turbo database#test
      
      - name: Database | reset
        run: turbo database#reset

  lint:
    if: needs.files-changed.outputs.database == 'true'
    name: Lint - Database Up
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: install bun 
        uses: oven-sh/setup-bun@v2

      - name: install dependencies
        run: |
          bun install --filter database --frozen-lockfile
          bun install --global turbo@^2

      - name: Database | build & typecheck
        run: turbo database#build database#typecheck