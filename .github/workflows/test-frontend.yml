name: Gradido Frontend Test CI

on:
  push:
    branches:
      - 2664-refactordevops-refine-test-ci-workflow

jobs:
  # DOCKER BUILD TEST FRONTEND
  build_build_frontend:
    name: Docker Build 'build' Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build 'build' image
        run: |
          docker build --target build -t "gradido/frontend:build" frontend/
          docker save "gradido/frontend:build" > /tmp/frontend.tar

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-frontend-build
          path: /tmp/frontend.tar

  # LOCALES FRONTEND 
  locales_frontend:
    name: Locales - Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Locales
        run: |
          cd frontend 
          yarn run locales

  # LINT FRONTEND
  lint_frontend:
    name: Lint - Frontend
    runs-on: ubuntu-latest
    needs: [build_build_frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Docker Image (Frontend)
        uses: actions/download-artifact@v3
        with:
          name: docker-frontend-build
          path: /tmp

      - name: Load Docker Image
        run: docker load < /tmp/frontend.tar
      - name: Frontend | Lint
        run: docker run --rm gradido/frontend:build pwd && yarn run lint

  # STYLELINT FRONTEND
  stylelint_frontend:
    name: Stylelint - Frontend
    runs-on: ubuntu-latest
    needs: [build_build_frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Docker Image (Frontend)
        uses: actions/download-artifact@v3
        with:
          name: docker-frontend-build
          path: /tmp

      - name: Load Docker Image
        run: docker load < /tmp/frontend.tar

      - name: Frontend | Stylelint
        run: docker run --rm gradido/frontend:build cd frontend && yarn run stylelint

  # UNIT TEST FRONTEND
  unit_test_frontend:
    name: Unit tests - Frontend
    runs-on: ubuntu-latest
    needs: [build_build_frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Docker Image (Frontend)
        uses: actions/download-artifact@v3
        with:
          name: docker-frontend-build
          path: /tmp

      - name: Load Docker Image
        run: docker load < /tmp/frontend.tar

      - name: frontend | Unit tests
        run: |
          docker run --env NODE_ENV=test -v ~/coverage:/app/coverage --rm gradido/frontend:build cd frontend && yarn run test
          cp -r ~/coverage ./coverage

      #- name: frontend | Coverage report
      #  uses: romeovs/lcov-reporter-action@v0.2.21
      #  with:
      #    github-token: ${{ secrets.GITHUB_TOKEN }}
      #    lcov-file: ./coverage/lcov.info

      - name: frontend | Coverage check
        uses: webcraftmedia/coverage-check-action@master
        with:
          report_name: Coverage Frontend
          type: lcov
          result_path: ./coverage/lcov.info
          min_coverage: 95
          token: ${{ github.token }}
