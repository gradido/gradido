name: Gradido Frontend Test CI

on:
  push:
    branches:
      - 2664-refactordevops-refine-test-ci-workflow

jobs:
  build_base_frontend:
    name: Docker Build 'base' Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Frontend | Build 'base' image
        run: |
          docker build --target base -t "gradido/frontend:base" frontend/
          docker save "gradido/frontend:base" > /tmp/frontend.tar

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-frontend-base
          path: /tmp/frontend.tar

  locales_frontend:
    name: Locales Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Frontend | Locales
        run: |
          cd frontend 
          yarn run locales

  lint_frontend:
    name: Lint Frontend
    runs-on: ubuntu-latest
    needs: [build_base_frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Docker Image (Frontend)
        uses: actions/download-artifact@v3
        with:
          name: docker-frontend-base
          path: /tmp

      - name: Load Docker Image
        run: docker load < /tmp/frontend.tar
      - name: Frontend | Lint
        run: docker run --rm -v /home/runner/work/gradido/gradido/frontend:/app gradido/frontend:base sh -c "yarn && yarn run lint"

  stylelint_frontend:
    name: Stylelint Frontend
    runs-on: ubuntu-latest
    needs: [build_base_frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Docker Image (Frontend)
        uses: actions/download-artifact@v3
        with:
          name: docker-frontend-base
          path: /tmp

      - name: Load Docker Image
        run: docker load < /tmp/frontend.tar

      - name: Frontend | Stylelint
        run: docker run --rm -v /home/runner/work/gradido/gradido/frontend:/app gradido/frontend:base sh -c "yarn && yarn run stylelint"

  unit_test_frontend:
    name: Unit Tests Frontend
    runs-on: ubuntu-latest
    needs: [build_base_frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Docker Image (Frontend)
        uses: actions/download-artifact@v3
        with:
          name: docker-frontend-base
          path: /tmp

      - name: Load Docker Image
        run: docker load < /tmp/frontend.tar

      - name: frontend | Unit tests
        run: |
          docker run --rm -v /home/runner/work/gradido/gradido/frontend:/app gradido/frontend:base sh -c "yarn && yarn run test"
          cp -r /home/runner/work/gradido/gradido/admin/coverage ./coverage

      - name: Frontend | Coverage check
        uses: webcraftmedia/coverage-check-action@master
        with:
          report_name: Coverage Frontend
          type: lcov
          result_path: ./coverage/lcov.info
          min_coverage: 95
          token: ${{ github.token }}
