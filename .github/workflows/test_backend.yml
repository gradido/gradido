name: Gradido Backend Test CI

on: push

jobs:
  # only (but most important) job from this workflow required for pull requests
  # check results serve as run conditions for all other jobs here 
  files-changed:
    name: Detect File Changes - Backend
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      docker: ${{ steps.changes.outputs.docker }}
    steps:
      - uses: actions/checkout@v3.3.0

      - name: Check for frontend file changes
        uses: dorny/paths-filter@v2.11.1
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/file-filters.yml
          list-files: shell

  build_test_backend:
    name: Docker Build Test - Backend
    if: needs.files-changed.outputs.backend == 'true' || needs.files-changed.outputs.docker == 'true'
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Backend | Build 'test' image
        run: |
          docker build -f ./backend/Dockerfile --target test -t "gradido/backend:test" .
          docker save "gradido/backend:test" > /tmp/backend.tar
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-backend-test
          path: /tmp/backend.tar

  build_test_database_up:
    name: Docker Build Test - Database up
    if: needs.files-changed.outputs.backend == 'true' || needs.files-changed.outputs.docker == 'true'
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Database | Build 'test_up' image
        run: |
          docker build --target test_up -t "gradido/database:test_up" database/
          docker save "gradido/database:test_up" > /tmp/database_up.tar

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-database-test_up
          path: /tmp/database_up.tar

  build_test_mariadb:
    name: Docker Build Test - MariaDB
    if: needs.files-changed.outputs.backend == 'true'
    if: needs.files-changed.outputs.docker == 'true'
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: mariadb | Build 'test' image
        run: |
          docker build --target mariadb_server -t "gradido/mariadb:test" -f ./mariadb/Dockerfile ./
          docker save "gradido/mariadb:test" > /tmp/mariadb.tar

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-mariadb-test
          path: /tmp/mariadb.tar
  
  build_test_nginx:
    name: Docker Build Test - Nginx
    if: needs.files-changed.outputs.backend == 'true' || needs.files-changed.outputs.docker == 'true'
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: nginx | Build 'test' image
        run: |
          docker build -t "gradido/nginx:test" nginx/
          docker save "gradido/nginx:test" > /tmp/nginx.tar

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-nginx-test
          path: /tmp/nginx.tar

  lint_backend:
    name: Lint - Backend
    if: needs.files-changed.outputs.backend == 'true'
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: backend | Lint
        run: cd database && yarn && cd ../backend && yarn && yarn run lint

  locales_backend:
    name: Locales - Backend
    if: needs.files-changed.outputs.backend == 'true'
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Backend | Locales
        run: cd backend && yarn && yarn locales

  lint_database_up:
    name: Lint - Database Up
    if: needs.files-changed.outputs.backend == 'true'
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Database | Lint
        run: cd database && yarn && yarn run lint

  unit_test_backend:
    name: Unit Tests - Backend
    if: needs.files-changed.outputs.backend == 'true' || needs.files-changed.outputs.docker == 'true'
    needs: files-changed
    runs-on: ubuntu-latest
    needs: [build_test_mariadb]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Docker Image (Mariadb)
        uses: actions/download-artifact@v3
        with:
          name: docker-mariadb-test
          path: /tmp

      - name: Load Docker Image
        run: docker load < /tmp/mariadb.tar

      - name: backend | docker-compose mariadb
        run: docker-compose -f docker-compose.yml -f docker-compose.test.yml up --detach --no-deps mariadb

      - name: Sleep for 30 seconds
        run: sleep 30s
        shell: bash

      - name: backend | docker-compose database
        run: docker-compose -f docker-compose.yml -f docker-compose.test.yml up --detach --no-deps database

      - name: backend Unit tests | test
        run: cd database && yarn && yarn build && cd ../backend && yarn && yarn test

  database_migration_test:
    name: Database Migration Test - Up + Reset
    if: needs.files-changed.outputs.backend == 'true' || needs.files-changed.outputs.docker == 'true'
    needs: files-changed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: database | docker-compose
        run: docker-compose -f docker-compose.yml up --detach mariadb

      - name: database | up
        run: docker-compose -f docker-compose.yml run -T database yarn up

      - name: database | reset
        run: docker-compose -f docker-compose.yml run -T database yarn reset
